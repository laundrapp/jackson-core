//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/FormatSchema.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonStreamContext.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/ObjectCodec.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/util/JsonParserDelegate.h"
#include "java/io/OutputStream.h"
#include "java/io/Writer.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonCoreUtilJsonParserDelegate__Annotations$0(void);

@implementation ComFasterxmlJacksonCoreUtilJsonParserDelegate

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)d {
  ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(self, d);
  return self;
}

- (id)getCurrentValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentValue];
}

- (void)setCurrentValueWithId:(id)v {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) setCurrentValueWithId:v];
}

- (void)setCodecWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)c {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) setCodecWithComFasterxmlJacksonCoreObjectCodec:c];
}

- (ComFasterxmlJacksonCoreObjectCodec *)getCodec {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCodec];
}

- (ComFasterxmlJacksonCoreJsonParser *)enableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) enableWithComFasterxmlJacksonCoreJsonParser_Feature:f];
  return self;
}

- (ComFasterxmlJacksonCoreJsonParser *)disableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) disableWithComFasterxmlJacksonCoreJsonParser_Feature:f];
  return self;
}

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:f];
}

- (jint)getFeatureMask {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getFeatureMask];
}

- (ComFasterxmlJacksonCoreJsonParser *)setFeatureMaskWithInt:(jint)mask {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) setFeatureMaskWithInt:mask];
  return self;
}

- (ComFasterxmlJacksonCoreJsonParser *)overrideStdFeaturesWithInt:(jint)values
                                                          withInt:(jint)mask {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) overrideStdFeaturesWithInt:values withInt:mask];
  return self;
}

- (ComFasterxmlJacksonCoreJsonParser *)overrideFormatFeaturesWithInt:(jint)values
                                                             withInt:(jint)mask {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) overrideFormatFeaturesWithInt:values withInt:mask];
  return self;
}

- (id<ComFasterxmlJacksonCoreFormatSchema>)getSchema {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getSchema];
}

- (void)setSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) setSchemaWithComFasterxmlJacksonCoreFormatSchema:schema];
}

- (jboolean)canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:schema];
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) version__];
}

- (id)getInputSource {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getInputSource];
}

- (jboolean)requiresCustomCodec {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) requiresCustomCodec];
}

- (void)close {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) close];
}

- (jboolean)isClosed {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) isClosed];
}

- (ComFasterxmlJacksonCoreJsonToken *)currentToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) currentToken];
}

- (jint)currentTokenId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) currentTokenId];
}

- (ComFasterxmlJacksonCoreJsonToken *)getCurrentToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentToken];
}

- (jint)getCurrentTokenId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentTokenId];
}

- (jboolean)hasCurrentToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) hasCurrentToken];
}

- (jboolean)hasTokenIdWithInt:(jint)id_ {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) hasTokenIdWithInt:id_];
}

- (jboolean)hasTokenWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)t {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) hasTokenWithComFasterxmlJacksonCoreJsonToken:t];
}

- (NSString *)getCurrentName {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentName];
}

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentLocation];
}

- (ComFasterxmlJacksonCoreJsonStreamContext *)getParsingContext {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getParsingContext];
}

- (jboolean)isExpectedStartArrayToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) isExpectedStartArrayToken];
}

- (jboolean)isExpectedStartObjectToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) isExpectedStartObjectToken];
}

- (jboolean)isNaN {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) isNaN];
}

- (void)clearCurrentToken {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) clearCurrentToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)getLastClearedToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getLastClearedToken];
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) overrideCurrentNameWithNSString:name];
}

- (NSString *)getText {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getText];
}

- (jboolean)hasTextCharacters {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) hasTextCharacters];
}

- (IOSCharArray *)getTextCharacters {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextCharacters];
}

- (jint)getTextLength {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextLength];
}

- (jint)getTextOffset {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextOffset];
}

- (jint)getTextWithJavaIoWriter:(JavaIoWriter *)writer {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextWithJavaIoWriter:writer];
}

- (JavaMathBigInteger *)getBigIntegerValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBigIntegerValue];
}

- (jboolean)getBooleanValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBooleanValue];
}

- (jbyte)getByteValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getByteValue];
}

- (jshort)getShortValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getShortValue];
}

- (JavaMathBigDecimal *)getDecimalValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getDecimalValue];
}

- (jdouble)getDoubleValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getDoubleValue];
}

- (jfloat)getFloatValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getFloatValue];
}

- (jint)getIntValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getIntValue];
}

- (jlong)getLongValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getLongValue];
}

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getNumberType];
}

- (NSNumber *)getNumberValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getNumberValue];
}

- (jint)getValueAsInt {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsInt];
}

- (jint)getValueAsIntWithInt:(jint)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsIntWithInt:defaultValue];
}

- (jlong)getValueAsLong {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsLong];
}

- (jlong)getValueAsLongWithLong:(jlong)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsLongWithLong:defaultValue];
}

- (jdouble)getValueAsDouble {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsDouble];
}

- (jdouble)getValueAsDoubleWithDouble:(jdouble)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsDoubleWithDouble:defaultValue];
}

- (jboolean)getValueAsBoolean {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsBoolean];
}

- (jboolean)getValueAsBooleanWithBoolean:(jboolean)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsBooleanWithBoolean:defaultValue];
}

- (NSString *)getValueAsString {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsString];
}

- (NSString *)getValueAsStringWithNSString:(NSString *)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsStringWithNSString:defaultValue];
}

- (id)getEmbeddedObject {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getEmbeddedObject];
}

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:b64variant];
}

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:b64variant withJavaIoOutputStream:outArg];
}

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTokenLocation];
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextValue];
}

- (void)finishToken {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) finishToken];
}

- (ComFasterxmlJacksonCoreJsonParser *)skipChildren {
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
  return self;
}

- (jboolean)canReadObjectId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) canReadObjectId];
}

- (jboolean)canReadTypeId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) canReadTypeId];
}

- (id)getObjectId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getObjectId];
}

- (id)getTypeId {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTypeId];
}

- (void)dealloc {
  RELEASE_(delegate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectCodec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 9, 10, -1, -1, 11, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatSchema;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonStreamContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, 25, 26, 27, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "I", 0x1, 28, 10, 19, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "J", 0x1, 29, 30, 19, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "D", 0x1, 31, 32, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, 33, 34, 19, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 35, 24, 19, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "[B", 0x1, 36, 37, 19, -1, -1, -1 },
    { NULL, "I", 0x1, 38, 39, 19, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 19, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreJsonParser:);
  methods[1].selector = @selector(getCurrentValue);
  methods[2].selector = @selector(setCurrentValueWithId:);
  methods[3].selector = @selector(setCodecWithComFasterxmlJacksonCoreObjectCodec:);
  methods[4].selector = @selector(getCodec);
  methods[5].selector = @selector(enableWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[6].selector = @selector(disableWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[7].selector = @selector(isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[8].selector = @selector(getFeatureMask);
  methods[9].selector = @selector(setFeatureMaskWithInt:);
  methods[10].selector = @selector(overrideStdFeaturesWithInt:withInt:);
  methods[11].selector = @selector(overrideFormatFeaturesWithInt:withInt:);
  methods[12].selector = @selector(getSchema);
  methods[13].selector = @selector(setSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[14].selector = @selector(canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[15].selector = @selector(version__);
  methods[16].selector = @selector(getInputSource);
  methods[17].selector = @selector(requiresCustomCodec);
  methods[18].selector = @selector(close);
  methods[19].selector = @selector(isClosed);
  methods[20].selector = @selector(currentToken);
  methods[21].selector = @selector(currentTokenId);
  methods[22].selector = @selector(getCurrentToken);
  methods[23].selector = @selector(getCurrentTokenId);
  methods[24].selector = @selector(hasCurrentToken);
  methods[25].selector = @selector(hasTokenIdWithInt:);
  methods[26].selector = @selector(hasTokenWithComFasterxmlJacksonCoreJsonToken:);
  methods[27].selector = @selector(getCurrentName);
  methods[28].selector = @selector(getCurrentLocation);
  methods[29].selector = @selector(getParsingContext);
  methods[30].selector = @selector(isExpectedStartArrayToken);
  methods[31].selector = @selector(isExpectedStartObjectToken);
  methods[32].selector = @selector(isNaN);
  methods[33].selector = @selector(clearCurrentToken);
  methods[34].selector = @selector(getLastClearedToken);
  methods[35].selector = @selector(overrideCurrentNameWithNSString:);
  methods[36].selector = @selector(getText);
  methods[37].selector = @selector(hasTextCharacters);
  methods[38].selector = @selector(getTextCharacters);
  methods[39].selector = @selector(getTextLength);
  methods[40].selector = @selector(getTextOffset);
  methods[41].selector = @selector(getTextWithJavaIoWriter:);
  methods[42].selector = @selector(getBigIntegerValue);
  methods[43].selector = @selector(getBooleanValue);
  methods[44].selector = @selector(getByteValue);
  methods[45].selector = @selector(getShortValue);
  methods[46].selector = @selector(getDecimalValue);
  methods[47].selector = @selector(getDoubleValue);
  methods[48].selector = @selector(getFloatValue);
  methods[49].selector = @selector(getIntValue);
  methods[50].selector = @selector(getLongValue);
  methods[51].selector = @selector(getNumberType);
  methods[52].selector = @selector(getNumberValue);
  methods[53].selector = @selector(getValueAsInt);
  methods[54].selector = @selector(getValueAsIntWithInt:);
  methods[55].selector = @selector(getValueAsLong);
  methods[56].selector = @selector(getValueAsLongWithLong:);
  methods[57].selector = @selector(getValueAsDouble);
  methods[58].selector = @selector(getValueAsDoubleWithDouble:);
  methods[59].selector = @selector(getValueAsBoolean);
  methods[60].selector = @selector(getValueAsBooleanWithBoolean:);
  methods[61].selector = @selector(getValueAsString);
  methods[62].selector = @selector(getValueAsStringWithNSString:);
  methods[63].selector = @selector(getEmbeddedObject);
  methods[64].selector = @selector(getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:);
  methods[65].selector = @selector(readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:withJavaIoOutputStream:);
  methods[66].selector = @selector(getTokenLocation);
  methods[67].selector = @selector(nextToken);
  methods[68].selector = @selector(nextValue);
  methods[69].selector = @selector(finishToken);
  methods[70].selector = @selector(skipChildren);
  methods[71].selector = @selector(canReadObjectId);
  methods[72].selector = @selector(canReadTypeId);
  methods[73].selector = @selector(getObjectId);
  methods[74].selector = @selector(getTypeId);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LComFasterxmlJacksonCoreJsonParser;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreJsonParser;", "setCurrentValue", "LNSObject;", "setCodec", "LComFasterxmlJacksonCoreObjectCodec;", "enable", "LComFasterxmlJacksonCoreJsonParser_Feature;", "disable", "isEnabled", "setFeatureMask", "I", (void *)&ComFasterxmlJacksonCoreUtilJsonParserDelegate__Annotations$0, "overrideStdFeatures", "II", "overrideFormatFeatures", "setSchema", "LComFasterxmlJacksonCoreFormatSchema;", "canUseSchema", "version", "LJavaIoIOException;", "hasTokenId", "hasToken", "LComFasterxmlJacksonCoreJsonToken;", "overrideCurrentName", "LNSString;", "getText", "LJavaIoWriter;", "LJavaIoIOException;LJavaLangUnsupportedOperationException;", "getValueAsInt", "getValueAsLong", "J", "getValueAsDouble", "D", "getValueAsBoolean", "Z", "getValueAsString", "getBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;", "readBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoOutputStream;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreUtilJsonParserDelegate = { "JsonParserDelegate", "com.fasterxml.jackson.core.util", ptrTable, methods, fields, 7, 0x1, 75, 1, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreUtilJsonParserDelegate;
}

@end

void ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreUtilJsonParserDelegate *self, ComFasterxmlJacksonCoreJsonParser *d) {
  ComFasterxmlJacksonCoreJsonParser_init(self);
  JreStrongAssign(&self->delegate_, d);
}

ComFasterxmlJacksonCoreUtilJsonParserDelegate *new_ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *d) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreUtilJsonParserDelegate, initWithComFasterxmlJacksonCoreJsonParser_, d)
}

ComFasterxmlJacksonCoreUtilJsonParserDelegate *create_ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *d) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreUtilJsonParserDelegate, initWithComFasterxmlJacksonCoreJsonParser_, d)
}

IOSObjectArray *ComFasterxmlJacksonCoreUtilJsonParserDelegate__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreUtilJsonParserDelegate)
