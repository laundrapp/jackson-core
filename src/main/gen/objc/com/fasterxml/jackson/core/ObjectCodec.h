//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/ObjectCodec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreObjectCodec")
#ifdef RESTRICT_ComFasterxmlJacksonCoreObjectCodec
#define INCLUDE_ALL_ComFasterxmlJacksonCoreObjectCodec 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreObjectCodec 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreObjectCodec

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreObjectCodec_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreObjectCodec || defined(INCLUDE_ComFasterxmlJacksonCoreObjectCodec))
#define ComFasterxmlJacksonCoreObjectCodec_

#define RESTRICT_ComFasterxmlJacksonCoreTreeCodec 1
#define INCLUDE_ComFasterxmlJacksonCoreTreeCodec 1
#include "com/fasterxml/jackson/core/TreeCodec.h"

#define RESTRICT_ComFasterxmlJacksonCoreVersioned 1
#define INCLUDE_ComFasterxmlJacksonCoreVersioned 1
#include "com/fasterxml/jackson/core/Versioned.h"

@class ComFasterxmlJacksonCoreJsonFactory;
@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonCoreTypeResolvedType;
@class ComFasterxmlJacksonCoreTypeTypeReference;
@class ComFasterxmlJacksonCoreVersion;
@class IOSClass;
@protocol ComFasterxmlJacksonCoreTreeNode;
@protocol JavaUtilIterator;

/*!
 @brief Abstract class that defines the interface that <code>JsonParser</code> and 
 <code>JsonGenerator</code> use to serialize and deserialize regular
  Java objects (POJOs aka Beans).
 <p>
  The standard implementation of this class is 
 <code>com.fasterxml.jackson.databind.ObjectMapper</code>,
  defined in the "jackson-databind".
 */
@interface ComFasterxmlJacksonCoreObjectCodec : ComFasterxmlJacksonCoreTreeCodec < ComFasterxmlJacksonCoreVersioned >

#pragma mark Public

/*!
 @brief Method for construct root level Array nodes
  for Tree Model instances.
 */
- (id<ComFasterxmlJacksonCoreTreeNode>)createArrayNode;

/*!
 @brief Method for construct root level Object nodes
  for Tree Model instances.
 */
- (id<ComFasterxmlJacksonCoreTreeNode>)createObjectNode;

/*!
 @brief Accessor for finding underlying data format factory
  (<code>JsonFactory</code>) codec will use for data binding.
 @since 2.1
 */
- (ComFasterxmlJacksonCoreJsonFactory *)getFactory;

/*!
 */
- (ComFasterxmlJacksonCoreJsonFactory *)getJsonFactory;

/*!
 @brief Method to deserialize JSON content as tree expressed
  using set of <code>TreeNode</code> instances.Returns
  root of the resulting tree (where root can consist
  of just a single node if the current event is a
  value event, not container).
 Empty or whitespace
  documents return null.
 @return next tree from p, or null if empty.
 */
- (id<ComFasterxmlJacksonCoreTreeNode>)readTreeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p;

/*!
 @brief Method to deserialize JSON content into a non-container
  type (it can be an array type, however): typically a bean, array
  or a wrapper type (like <code>java.lang.Boolean</code>).
 <p>
  Note: this method should NOT be used if the result type is a
  container (<code>java.util.Collection</code> or <code>java.util.Map</code>.
  The reason is that due to type erasure, key and value types
  can not be introspected when using this method.
 */
- (id)readValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                        withIOSClass:(IOSClass *)valueType;

/*!
 @brief Method to deserialize JSON content into a POJO, type specified
  with fully resolved type object (so it can be a generic type,
  including containers like <code>java.util.Collection</code> and 
 <code>java.util.Map</code>).
 */
- (id)readValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonCoreTypeResolvedType:(ComFasterxmlJacksonCoreTypeResolvedType *)valueType;

/*!
 @brief Method to deserialize JSON content into a Java type, reference
  to which is passed as argument.Type is passed using so-called
  "super type token" 
  and specifically needs to be used if the root type is a 
  parameterized (generic) container type.
 */
- (id)readValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
        withComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)valueTypeRef;

/*!
 @brief Method for reading sequence of Objects from parser stream,
  all with same specified value type.
 */
- (id<JavaUtilIterator>)readValuesWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                           withIOSClass:(IOSClass *)valueType;

/*!
 @brief Method for reading sequence of Objects from parser stream,
  all with same specified value type.
 */
- (id<JavaUtilIterator>)readValuesWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                            withComFasterxmlJacksonCoreTypeResolvedType:(ComFasterxmlJacksonCoreTypeResolvedType *)valueType;

/*!
 @brief Method for reading sequence of Objects from parser stream,
  all with same specified value type.
 */
- (id<JavaUtilIterator>)readValuesWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                           withComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)valueTypeRef;

/*!
 @brief Method for constructing a <code>JsonParser</code> for reading
  contents of a JSON tree, as if it was external serialized
  JSON content.
 */
- (ComFasterxmlJacksonCoreJsonParser *)treeAsTokensWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)n;

/*!
 @brief Convenience method for converting given JSON tree into instance of specified
  value type.This is equivalent to first constructing a <code>JsonParser</code> to
  iterate over contents of the tree, and using that parser for data binding.
 */
- (id)treeToValueWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)n
                                        withIOSClass:(IOSClass *)valueType;

- (ComFasterxmlJacksonCoreVersion *)version__;

- (void)writeTreeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                      withComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)tree;

/*!
 @brief Method to serialize given Java Object, using generator
  provided.
 */
- (void)writeValueWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                                                    withId:(id)value;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreObjectCodec)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreObjectCodec_init(ComFasterxmlJacksonCoreObjectCodec *self);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreObjectCodec)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreObjectCodec")
