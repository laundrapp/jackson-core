//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/ObjectWriteContext.h"
#include "com/fasterxml/jackson/core/PrettyPrinter.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/TokenStreamContext.h"
#include "com/fasterxml/jackson/core/TreeNode.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/base/GeneratorBase.h"
#include "com/fasterxml/jackson/core/json/DupDetector.h"
#include "com/fasterxml/jackson/core/json/JsonWriteContext.h"
#include "com/fasterxml/jackson/core/json/PackageVersion.h"
#include "com/fasterxml/jackson/core/util/DefaultPrettyPrinter.h"
#include "java/io/InputStream.h"
#include "java/lang/Integer.h"
#include "java/math/BigDecimal.h"

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreBaseGeneratorBase)

jint ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK;
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BINARY = @"write a binary value";
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BOOLEAN = @"write a boolean value";
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NULL = @"write a null";
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NUMBER = @"write a number";
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_RAW = @"write a raw (unencoded) value";
NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_STRING = @"write a string";

@implementation ComFasterxmlJacksonCoreBaseGeneratorBase

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                    withInt:(jint)features {
  ComFasterxmlJacksonCoreBaseGeneratorBase_initWithComFasterxmlJacksonCoreObjectWriteContext_withInt_(self, writeCtxt, features);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                    withInt:(jint)features
                            withComFasterxmlJacksonCoreJsonJsonWriteContext:(ComFasterxmlJacksonCoreJsonJsonWriteContext *)ctxt {
  ComFasterxmlJacksonCoreBaseGeneratorBase_initWithComFasterxmlJacksonCoreObjectWriteContext_withInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_(self, writeCtxt, features, ctxt);
  return self;
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  return JreLoadStatic(ComFasterxmlJacksonCoreJsonPackageVersion, VERSION);
}

- (id)getCurrentValue {
  return [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) getCurrentValue];
}

- (void)setCurrentValueWithId:(id)v {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) setCurrentValueWithId:v];
}

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  return (_features_ & [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask]) != 0;
}

- (jint)getGeneratorFeatures {
  return _features_;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  jint mask = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask];
  _features_ |= mask;
  if ((mask & ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK) != 0) {
    if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS)) {
      _cfgNumbersAsStrings_ = true;
    }
    else if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII)) {
      [self setHighestNonEscapedCharWithInt:127];
    }
    else if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION)) {
      if ([((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) getDupDetector] == nil) {
        JreStrongAssign(&_outputContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonGenerator_(self)]);
      }
    }
  }
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  jint mask = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask];
  _features_ &= ~mask;
  if ((mask & ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK) != 0) {
    if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS)) {
      _cfgNumbersAsStrings_ = false;
    }
    else if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII)) {
      [self setHighestNonEscapedCharWithInt:0];
    }
    else if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION)) {
      JreStrongAssign(&_outputContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:nil]);
    }
  }
  return self;
}

- (void)_checkStdFeatureChangesWithInt:(jint)newFeatureFlags
                               withInt:(jint)changedFeatures {
  if ((changedFeatures & ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK) == 0) {
    return;
  }
  _cfgNumbersAsStrings_ = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS))) enabledInWithInt:newFeatureFlags];
  if ([((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII))) enabledInWithInt:changedFeatures]) {
    if ([JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII) enabledInWithInt:newFeatureFlags]) {
      [self setHighestNonEscapedCharWithInt:127];
    }
    else {
      [self setHighestNonEscapedCharWithInt:0];
    }
  }
  if ([((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION))) enabledInWithInt:changedFeatures]) {
    if ([JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION) enabledInWithInt:newFeatureFlags]) {
      if ([((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) getDupDetector] == nil) {
        JreStrongAssign(&_outputContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonGenerator_(self)]);
      }
    }
    else {
      JreStrongAssign(&_outputContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:nil]);
    }
  }
}

- (ComFasterxmlJacksonCoreJsonGenerator *)useDefaultPrettyPrinter {
  if ([self getPrettyPrinter] != nil) {
    return self;
  }
  return [self setPrettyPrinterWithComFasterxmlJacksonCorePrettyPrinter:[self _constructDefaultPrettyPrinter]];
}

- (ComFasterxmlJacksonCoreTokenStreamContext *)getOutputContext {
  return _outputContext_;
}

- (id<ComFasterxmlJacksonCoreObjectWriteContext>)getObjectWriteContext {
  return _objectWriteContext_;
}

- (void)writeStartArrayWithId:(id)forValue
                      withInt:(jint)size {
  [self writeStartArrayWithInt:size];
  if ((_outputContext_ != nil) && (forValue != nil)) {
    [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) setCurrentValueWithId:forValue];
  }
}

- (void)writeStartObjectWithId:(id)forValue {
  [self writeStartObject];
  if ((_outputContext_ != nil) && (forValue != nil)) {
    [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_outputContext_)) setCurrentValueWithId:forValue];
  }
}

- (void)writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name {
  [self writeFieldNameWithNSString:[((id<ComFasterxmlJacksonCoreSerializableString>) nil_chk(name)) getValue]];
}

- (void)writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text {
  [self writeStringWithNSString:[((id<ComFasterxmlJacksonCoreSerializableString>) nil_chk(text)) getValue]];
}

- (void)writeRawValueWithNSString:(NSString *)text {
  [self _verifyValueWriteWithNSString:@"write raw value"];
  [self writeRawWithNSString:text];
}

- (void)writeRawValueWithNSString:(NSString *)text
                          withInt:(jint)offset
                          withInt:(jint)len {
  [self _verifyValueWriteWithNSString:@"write raw value"];
  [self writeRawWithNSString:text withInt:offset withInt:len];
}

- (void)writeRawValueWithCharArray:(IOSCharArray *)text
                           withInt:(jint)offset
                           withInt:(jint)len {
  [self _verifyValueWriteWithNSString:@"write raw value"];
  [self writeRawWithCharArray:text withInt:offset withInt:len];
}

- (void)writeRawValueWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text {
  [self _verifyValueWriteWithNSString:@"write raw value"];
  [self writeRawWithComFasterxmlJacksonCoreSerializableString:text];
}

- (jint)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                      withJavaIoInputStream:(JavaIoInputStream *)data
                                                    withInt:(jint)dataLength {
  [self _reportUnsupportedOperation];
  return 0;
}

- (void)writeObjectWithId:(id)value {
  if (value == nil) {
    [self writeNull];
  }
  else {
    [((id<ComFasterxmlJacksonCoreObjectWriteContext>) nil_chk(_objectWriteContext_)) writeValueWithComFasterxmlJacksonCoreJsonGenerator:self withId:value];
  }
}

- (void)writeTreeWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)rootNode {
  if (rootNode == nil) {
    [self writeNull];
  }
  else {
    [((id<ComFasterxmlJacksonCoreObjectWriteContext>) nil_chk(_objectWriteContext_)) writeTreeWithComFasterxmlJacksonCoreJsonGenerator:self withComFasterxmlJacksonCoreTreeNode:rootNode];
  }
}

- (void)flush {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)close {
  _closed_ = true;
}

- (jboolean)isClosed {
  return _closed_;
}

- (void)_releaseBuffers {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)_verifyValueWriteWithNSString:(NSString *)typeMsg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<ComFasterxmlJacksonCorePrettyPrinter>)_constructDefaultPrettyPrinter {
  return create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_init();
}

- (NSString *)_asStringWithJavaMathBigDecimal:(JavaMathBigDecimal *)value {
  if ([((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_BIGDECIMAL_AS_PLAIN))) enabledInWithInt:_features_]) {
    jint scale_ = [((JavaMathBigDecimal *) nil_chk(value)) scale__];
    if ((scale_ < -ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE) || (scale_ > ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE)) {
      [self _reportErrorWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(scale_), JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE), JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE) } count:3 type:NSObject_class_()])];
    }
    return [value toPlainString];
  }
  return [((JavaMathBigDecimal *) nil_chk(value)) description];
}

- (jint)_decodeSurrogateWithInt:(jint)surr1
                        withInt:(jint)surr2 {
  if (surr2 < ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_FIRST || surr2 > ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_LAST) {
    NSString *msg = JreStrcat("$$$$", @"Incomplete surrogate pair: first char 0x", JavaLangInteger_toHexStringWithInt_(surr1), @", second 0x", JavaLangInteger_toHexStringWithInt_(surr2));
    [self _reportErrorWithNSString:msg];
  }
  jint c = (jint) 0x10000 + (JreLShift32((surr1 - ComFasterxmlJacksonCoreBaseGeneratorBase_SURR1_FIRST), 10)) + (surr2 - ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_FIRST);
  return c;
}

- (void)dealloc {
  RELEASE_(_objectWriteContext_);
  RELEASE_(_outputContext_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTokenStreamContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectWriteContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 4, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 16, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 20, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 21, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 16, 13, -1, -1, -1 },
    { NULL, "I", 0x1, 22, 23, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 4, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, 13, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 13, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 13, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 27, 19, 13, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCorePrettyPrinter;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 28, 29, 13, -1, -1, -1 },
    { NULL, "I", 0x14, 30, 10, 13, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreObjectWriteContext:withInt:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonCoreObjectWriteContext:withInt:withComFasterxmlJacksonCoreJsonJsonWriteContext:);
  methods[2].selector = @selector(version__);
  methods[3].selector = @selector(getCurrentValue);
  methods[4].selector = @selector(setCurrentValueWithId:);
  methods[5].selector = @selector(isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[6].selector = @selector(getGeneratorFeatures);
  methods[7].selector = @selector(enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[8].selector = @selector(disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[9].selector = @selector(_checkStdFeatureChangesWithInt:withInt:);
  methods[10].selector = @selector(useDefaultPrettyPrinter);
  methods[11].selector = @selector(getOutputContext);
  methods[12].selector = @selector(getObjectWriteContext);
  methods[13].selector = @selector(writeStartArrayWithId:withInt:);
  methods[14].selector = @selector(writeStartObjectWithId:);
  methods[15].selector = @selector(writeFieldNameWithComFasterxmlJacksonCoreSerializableString:);
  methods[16].selector = @selector(writeStringWithComFasterxmlJacksonCoreSerializableString:);
  methods[17].selector = @selector(writeRawValueWithNSString:);
  methods[18].selector = @selector(writeRawValueWithNSString:withInt:withInt:);
  methods[19].selector = @selector(writeRawValueWithCharArray:withInt:withInt:);
  methods[20].selector = @selector(writeRawValueWithComFasterxmlJacksonCoreSerializableString:);
  methods[21].selector = @selector(writeBinaryWithComFasterxmlJacksonCoreBase64Variant:withJavaIoInputStream:withInt:);
  methods[22].selector = @selector(writeObjectWithId:);
  methods[23].selector = @selector(writeTreeWithComFasterxmlJacksonCoreTreeNode:);
  methods[24].selector = @selector(flush);
  methods[25].selector = @selector(close);
  methods[26].selector = @selector(isClosed);
  methods[27].selector = @selector(_releaseBuffers);
  methods[28].selector = @selector(_verifyValueWriteWithNSString:);
  methods[29].selector = @selector(_constructDefaultPrettyPrinter);
  methods[30].selector = @selector(_asStringWithJavaMathBigDecimal:);
  methods[31].selector = @selector(_decodeSurrogateWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SURR1_FIRST", "I", .constantValue.asInt = ComFasterxmlJacksonCoreBaseGeneratorBase_SURR1_FIRST, 0x19, -1, -1, -1, -1 },
    { "SURR1_LAST", "I", .constantValue.asInt = ComFasterxmlJacksonCoreBaseGeneratorBase_SURR1_LAST, 0x19, -1, -1, -1, -1 },
    { "SURR2_FIRST", "I", .constantValue.asInt = ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_FIRST, 0x19, -1, -1, -1, -1 },
    { "SURR2_LAST", "I", .constantValue.asInt = ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_LAST, 0x19, -1, -1, -1, -1 },
    { "DERIVED_FEATURES_MASK", "I", .constantValue.asLong = 0, 0x1c, -1, 31, -1, -1 },
    { "WRITE_BINARY", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 32, -1, -1 },
    { "WRITE_BOOLEAN", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 33, -1, -1 },
    { "WRITE_NULL", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 34, -1, -1 },
    { "WRITE_NUMBER", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 35, -1, -1 },
    { "WRITE_RAW", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 36, -1, -1 },
    { "WRITE_STRING", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 37, -1, -1 },
    { "MAX_BIG_DECIMAL_SCALE", "I", .constantValue.asInt = ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE, 0x1c, -1, -1, -1, -1 },
    { "_objectWriteContext_", "LComFasterxmlJacksonCoreObjectWriteContext;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_features_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_cfgNumbersAsStrings_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_outputContext_", "LComFasterxmlJacksonCoreJsonJsonWriteContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_closed_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreObjectWriteContext;I", "LComFasterxmlJacksonCoreObjectWriteContext;ILComFasterxmlJacksonCoreJsonJsonWriteContext;", "version", "setCurrentValue", "LNSObject;", "isEnabled", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", "enable", "disable", "_checkStdFeatureChanges", "II", "writeStartArray", "LNSObject;I", "LJavaIoIOException;", "writeStartObject", "writeFieldName", "LComFasterxmlJacksonCoreSerializableString;", "writeString", "writeRawValue", "LNSString;", "LNSString;II", "[CII", "writeBinary", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoInputStream;I", "writeObject", "writeTree", "LComFasterxmlJacksonCoreTreeNode;", "_verifyValueWrite", "_asString", "LJavaMathBigDecimal;", "_decodeSurrogate", &ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BINARY, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BOOLEAN, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NULL, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NUMBER, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_RAW, &ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_STRING };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreBaseGeneratorBase = { "GeneratorBase", "com.fasterxml.jackson.core.base", ptrTable, methods, fields, 7, 0x401, 32, 17, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreBaseGeneratorBase;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreBaseGeneratorBase class]) {
    ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS))) getMask] | [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII))) getMask] | [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION))) getMask];
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreBaseGeneratorBase)
  }
}

@end

void ComFasterxmlJacksonCoreBaseGeneratorBase_initWithComFasterxmlJacksonCoreObjectWriteContext_withInt_(ComFasterxmlJacksonCoreBaseGeneratorBase *self, id<ComFasterxmlJacksonCoreObjectWriteContext> writeCtxt, jint features) {
  ComFasterxmlJacksonCoreJsonGenerator_init(self);
  JreStrongAssign(&self->_objectWriteContext_, writeCtxt);
  self->_features_ = features;
  ComFasterxmlJacksonCoreJsonDupDetector *dups = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION))) enabledInWithInt:features] ? ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonGenerator_(self) : nil;
  JreStrongAssign(&self->_outputContext_, ComFasterxmlJacksonCoreJsonJsonWriteContext_createRootContextWithComFasterxmlJacksonCoreJsonDupDetector_(dups));
  self->_cfgNumbersAsStrings_ = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS))) enabledInWithInt:features];
}

void ComFasterxmlJacksonCoreBaseGeneratorBase_initWithComFasterxmlJacksonCoreObjectWriteContext_withInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_(ComFasterxmlJacksonCoreBaseGeneratorBase *self, id<ComFasterxmlJacksonCoreObjectWriteContext> writeCtxt, jint features, ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt) {
  ComFasterxmlJacksonCoreJsonGenerator_init(self);
  JreStrongAssign(&self->_objectWriteContext_, writeCtxt);
  self->_features_ = features;
  JreStrongAssign(&self->_outputContext_, ctxt);
  self->_cfgNumbersAsStrings_ = [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS))) enabledInWithInt:features];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreBaseGeneratorBase)
