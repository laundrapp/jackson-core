//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonParserDelegate")
#ifdef RESTRICT_ComFasterxmlJacksonCoreUtilJsonParserDelegate
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonParserDelegate 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonParserDelegate 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreUtilJsonParserDelegate

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreUtilJsonParserDelegate_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonParserDelegate || defined(INCLUDE_ComFasterxmlJacksonCoreUtilJsonParserDelegate))
#define ComFasterxmlJacksonCoreUtilJsonParserDelegate_

#define RESTRICT_ComFasterxmlJacksonCoreJsonParser 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonParser 1
#include "com/fasterxml/jackson/core/JsonParser.h"

@class ComFasterxmlJacksonCoreBase64Variant;
@class ComFasterxmlJacksonCoreJsonLocation;
@class ComFasterxmlJacksonCoreJsonParser_Feature;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonCoreSymFieldNameMatcher;
@class ComFasterxmlJacksonCoreTokenStreamContext;
@class ComFasterxmlJacksonCoreTypeResolvedType;
@class ComFasterxmlJacksonCoreTypeTypeReference;
@class ComFasterxmlJacksonCoreVersion;
@class IOSByteArray;
@class IOSCharArray;
@class IOSClass;
@class JavaIoOutputStream;
@class JavaIoWriter;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@protocol ComFasterxmlJacksonCoreAsyncNonBlockingInputFeeder;
@protocol ComFasterxmlJacksonCoreFormatSchema;
@protocol ComFasterxmlJacksonCoreObjectReadContext;
@protocol ComFasterxmlJacksonCoreSerializableString;
@protocol ComFasterxmlJacksonCoreTreeNode;

/*!
 @brief Helper class that implements 
 <a href="http://en.wikipedia.org/wiki/Delegation_pattern">delegation pattern</a> for <code>JsonParser</code>,
  to allow for simple overridability of basic parsing functionality.
 The idea is that any functionality to be modified can be simply
  overridden; and anything else will be delegated by default.
 */
@interface ComFasterxmlJacksonCoreUtilJsonParserDelegate : ComFasterxmlJacksonCoreJsonParser {
 @public
  /*!
   @brief Delegate object that method calls are delegated to.
   */
  ComFasterxmlJacksonCoreJsonParser *delegate_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)d;

- (jboolean)canParseAsync;

- (jboolean)canReadObjectId;

- (jboolean)canReadTypeId;

- (jboolean)canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema;

- (void)clearCurrentToken;

- (void)close;

- (jint)currentFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)matcher;

- (NSString *)currentName;

- (ComFasterxmlJacksonCoreJsonToken *)currentToken;

- (jint)currentTokenId;

- (ComFasterxmlJacksonCoreJsonParser *)disableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f;

- (ComFasterxmlJacksonCoreJsonParser *)enableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f;

- (void)finishToken;

- (JavaMathBigInteger *)getBigIntegerValue;

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant;

- (jboolean)getBooleanValue;

- (jbyte)getByteValue;

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation;

- (id)getCurrentValue;

- (JavaMathBigDecimal *)getDecimalValue;

- (jdouble)getDoubleValue;

- (id)getEmbeddedObject;

- (jfloat)getFloatValue;

- (id)getInputSource;

- (jint)getIntValue;

- (ComFasterxmlJacksonCoreJsonToken *)getLastClearedToken;

- (jlong)getLongValue;

- (id<ComFasterxmlJacksonCoreAsyncNonBlockingInputFeeder>)getNonBlockingInputFeeder;

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType;

- (NSNumber *)getNumberValue;

- (id)getObjectId;

- (id<ComFasterxmlJacksonCoreObjectReadContext>)getObjectReadContext;

- (jint)getParserFeatures;

- (ComFasterxmlJacksonCoreTokenStreamContext *)getParsingContext;

- (id<ComFasterxmlJacksonCoreFormatSchema>)getSchema;

- (jshort)getShortValue;

- (NSString *)getText;

- (jint)getTextWithJavaIoWriter:(JavaIoWriter *)writer;

- (IOSCharArray *)getTextCharacters;

- (jint)getTextLength;

- (jint)getTextOffset;

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation;

- (id)getTypeId;

- (jboolean)getValueAsBoolean;

- (jboolean)getValueAsBooleanWithBoolean:(jboolean)defaultValue;

- (jdouble)getValueAsDouble;

- (jdouble)getValueAsDoubleWithDouble:(jdouble)defaultValue;

- (jint)getValueAsInt;

- (jint)getValueAsIntWithInt:(jint)defaultValue;

- (jlong)getValueAsLong;

- (jlong)getValueAsLongWithLong:(jlong)defaultValue;

- (NSString *)getValueAsString;

- (NSString *)getValueAsStringWithNSString:(NSString *)defaultValue;

- (jboolean)hasCurrentToken;

- (jboolean)hasTextCharacters;

- (jboolean)hasTokenWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)t;

- (jboolean)hasTokenIdWithInt:(jint)id_;

- (jboolean)isClosed;

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f;

- (jboolean)isExpectedStartArrayToken;

- (jboolean)isExpectedStartObjectToken;

- (jboolean)isNaN;

- (NSString *)nextFieldName;

- (jint)nextFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)matcher;

- (jboolean)nextFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)str;

- (ComFasterxmlJacksonCoreJsonToken *)nextToken;

- (ComFasterxmlJacksonCoreJsonToken *)nextValue;

- (void)overrideCurrentNameWithNSString:(NSString *)name;

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (id)readValueAsWithIOSClass:(IOSClass *)valueType;

- (id)readValueAsWithComFasterxmlJacksonCoreTypeResolvedType:(ComFasterxmlJacksonCoreTypeResolvedType *)type;

- (id)readValueAsWithComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)valueTypeRef;

- (id<ComFasterxmlJacksonCoreTreeNode>)readValueAsTree;

- (void)setCurrentValueWithId:(id)v;

- (void)setSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema;

- (ComFasterxmlJacksonCoreJsonParser *)skipChildren;

- (ComFasterxmlJacksonCoreVersion *)version__;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreUtilJsonParserDelegate)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilJsonParserDelegate, delegate_, ComFasterxmlJacksonCoreJsonParser *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreUtilJsonParserDelegate *self, ComFasterxmlJacksonCoreJsonParser *d);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilJsonParserDelegate *new_ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilJsonParserDelegate *create_ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *d);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilJsonParserDelegate)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonParserDelegate")
