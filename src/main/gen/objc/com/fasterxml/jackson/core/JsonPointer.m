//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonPointer.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonPointer.h"
#include "com/fasterxml/jackson/core/TokenStreamContext.h"
#include "com/fasterxml/jackson/core/io/NumberInput.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

@interface ComFasterxmlJacksonCoreJsonPointer ()

+ (NSString *)_fullPathWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)tail
                                                 withNSString:(NSString *)segment;

+ (void)_appendEscapedWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)segment;

+ (jint)_parseIndexWithNSString:(NSString *)str;

+ (void)_appendEscapeWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                      withChar:(jchar)c;

@end

__attribute__((unused)) static NSString *ComFasterxmlJacksonCoreJsonPointer__fullPathWithComFasterxmlJacksonCoreJsonPointer_withNSString_(ComFasterxmlJacksonCoreJsonPointer *tail, NSString *segment);

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonPointer__appendEscapedWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *segment);

__attribute__((unused)) static jint ComFasterxmlJacksonCoreJsonPointer__parseIndexWithNSString_(NSString *str);

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonPointer__appendEscapeWithJavaLangStringBuilder_withChar_(JavaLangStringBuilder *sb, jchar c);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonPointer)

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer_EMPTY;

@implementation ComFasterxmlJacksonCoreJsonPointer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonCoreJsonPointer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithNSString:(NSString *)fullString
                              withNSString:(NSString *)segment
    withComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)next {
  ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(self, fullString, segment, next);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)fullString
                              withNSString:(NSString *)segment
                                   withInt:(jint)matchIndex
    withComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)next {
  ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_(self, fullString, segment, matchIndex, next);
  return self;
}

+ (ComFasterxmlJacksonCoreJsonPointer *)compileWithNSString:(NSString *)input {
  return ComFasterxmlJacksonCoreJsonPointer_compileWithNSString_(input);
}

+ (ComFasterxmlJacksonCoreJsonPointer *)valueOfWithNSString:(NSString *)input {
  return ComFasterxmlJacksonCoreJsonPointer_valueOfWithNSString_(input);
}

+ (ComFasterxmlJacksonCoreJsonPointer *)forPathWithComFasterxmlJacksonCoreTokenStreamContext:(ComFasterxmlJacksonCoreTokenStreamContext *)context
                                                                                 withBoolean:(jboolean)includeRoot {
  return ComFasterxmlJacksonCoreJsonPointer_forPathWithComFasterxmlJacksonCoreTokenStreamContext_withBoolean_(context, includeRoot);
}

+ (NSString *)_fullPathWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)tail
                                                 withNSString:(NSString *)segment {
  return ComFasterxmlJacksonCoreJsonPointer__fullPathWithComFasterxmlJacksonCoreJsonPointer_withNSString_(tail, segment);
}

+ (void)_appendEscapedWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)segment {
  ComFasterxmlJacksonCoreJsonPointer__appendEscapedWithJavaLangStringBuilder_withNSString_(sb, segment);
}

- (jboolean)matches {
  return _nextSegment_ == nil;
}

- (NSString *)getMatchingProperty {
  return _matchingPropertyName_;
}

- (jint)getMatchingIndex {
  return _matchingElementIndex_;
}

- (jboolean)mayMatchProperty {
  return _matchingPropertyName_ != nil;
}

- (jboolean)mayMatchElement {
  return _matchingElementIndex_ >= 0;
}

- (ComFasterxmlJacksonCoreJsonPointer *)last {
  ComFasterxmlJacksonCoreJsonPointer *current = self;
  if (current == ComFasterxmlJacksonCoreJsonPointer_EMPTY) {
    return nil;
  }
  ComFasterxmlJacksonCoreJsonPointer *next;
  while ((next = ((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(current))->_nextSegment_) != ComFasterxmlJacksonCoreJsonPointer_EMPTY) {
    current = next;
  }
  return current;
}

- (ComFasterxmlJacksonCoreJsonPointer *)appendWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)tail {
  if (self == ComFasterxmlJacksonCoreJsonPointer_EMPTY) {
    return tail;
  }
  if (tail == ComFasterxmlJacksonCoreJsonPointer_EMPTY) {
    return self;
  }
  NSString *currentJsonPointer = _asString_;
  if ([((NSString *) nil_chk(currentJsonPointer)) java_hasSuffix:@"/"]) {
    currentJsonPointer = [currentJsonPointer java_substring:0 endIndex:[currentJsonPointer java_length] - 1];
  }
  return ComFasterxmlJacksonCoreJsonPointer_compileWithNSString_(JreStrcat("$$", currentJsonPointer, ((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(tail))->_asString_));
}

- (jboolean)matchesPropertyWithNSString:(NSString *)name {
  return (_nextSegment_ != nil) && [((NSString *) nil_chk(_matchingPropertyName_)) isEqual:name];
}

- (ComFasterxmlJacksonCoreJsonPointer *)matchPropertyWithNSString:(NSString *)name {
  if ((_nextSegment_ != nil) && [((NSString *) nil_chk(_matchingPropertyName_)) isEqual:name]) {
    return _nextSegment_;
  }
  return nil;
}

- (jboolean)matchesElementWithInt:(jint)index {
  return (index == _matchingElementIndex_) && (index >= 0);
}

- (ComFasterxmlJacksonCoreJsonPointer *)matchElementWithInt:(jint)index {
  if ((index != _matchingElementIndex_) || (index < 0)) {
    return nil;
  }
  return _nextSegment_;
}

- (ComFasterxmlJacksonCoreJsonPointer *)tail {
  return _nextSegment_;
}

- (ComFasterxmlJacksonCoreJsonPointer *)head {
  ComFasterxmlJacksonCoreJsonPointer *h = JreLoadVolatileId(&_head_);
  if (h == nil) {
    if (self != ComFasterxmlJacksonCoreJsonPointer_EMPTY) {
      h = [self _constructHead];
    }
    JreVolatileStrongAssign(&_head_, h);
  }
  return h;
}

- (NSString *)description {
  return _asString_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(_asString_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if (!([o isKindOfClass:[ComFasterxmlJacksonCoreJsonPointer class]])) return false;
  return [((NSString *) nil_chk(_asString_)) isEqual:((ComFasterxmlJacksonCoreJsonPointer *) cast_chk(o, [ComFasterxmlJacksonCoreJsonPointer class]))->_asString_];
}

+ (jint)_parseIndexWithNSString:(NSString *)str {
  return ComFasterxmlJacksonCoreJsonPointer__parseIndexWithNSString_(str);
}

+ (ComFasterxmlJacksonCoreJsonPointer *)_parseTailWithNSString:(NSString *)input {
  return ComFasterxmlJacksonCoreJsonPointer__parseTailWithNSString_(input);
}

+ (ComFasterxmlJacksonCoreJsonPointer *)_parseQuotedTailWithNSString:(NSString *)input
                                                             withInt:(jint)i {
  return ComFasterxmlJacksonCoreJsonPointer__parseQuotedTailWithNSString_withInt_(input, i);
}

- (ComFasterxmlJacksonCoreJsonPointer *)_constructHead {
  ComFasterxmlJacksonCoreJsonPointer *last = [self last];
  if (last == self) {
    return ComFasterxmlJacksonCoreJsonPointer_EMPTY;
  }
  jint suffixLength = [((NSString *) nil_chk(((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(last))->_asString_)) java_length];
  ComFasterxmlJacksonCoreJsonPointer *next = _nextSegment_;
  return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_([_asString_ java_substring:0 endIndex:[_asString_ java_length] - suffixLength], _matchingPropertyName_, _matchingElementIndex_, [((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(next)) _constructHeadWithInt:suffixLength withComFasterxmlJacksonCoreJsonPointer:last]);
}

- (ComFasterxmlJacksonCoreJsonPointer *)_constructHeadWithInt:(jint)suffixLength
                       withComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)last {
  if (self == last) {
    return ComFasterxmlJacksonCoreJsonPointer_EMPTY;
  }
  ComFasterxmlJacksonCoreJsonPointer *next = _nextSegment_;
  NSString *str = _asString_;
  return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_([((NSString *) nil_chk(str)) java_substring:0 endIndex:[str java_length] - suffixLength], _matchingPropertyName_, _matchingElementIndex_, [((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(next)) _constructHeadWithInt:suffixLength withComFasterxmlJacksonCoreJsonPointer:last]);
}

+ (void)_appendEscapeWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                      withChar:(jchar)c {
  ComFasterxmlJacksonCoreJsonPointer__appendEscapeWithJavaLangStringBuilder_withChar_(sb, c);
}

- (void)__javaClone:(ComFasterxmlJacksonCoreJsonPointer *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&_head_, &original->_head_);
}

- (void)dealloc {
  RELEASE_(_nextSegment_);
  JreReleaseVolatile(&_head_);
  RELEASE_(_asString_);
  RELEASE_(_matchingPropertyName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x9, 2, 3, 4, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x9, 5, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, 15, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, 18, 17, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x1a, 23, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0xc, 24, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0xc, 25, 26, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonPointer;", 0x4, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 29, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:withNSString:withComFasterxmlJacksonCoreJsonPointer:);
  methods[2].selector = @selector(initWithNSString:withNSString:withInt:withComFasterxmlJacksonCoreJsonPointer:);
  methods[3].selector = @selector(compileWithNSString:);
  methods[4].selector = @selector(valueOfWithNSString:);
  methods[5].selector = @selector(forPathWithComFasterxmlJacksonCoreTokenStreamContext:withBoolean:);
  methods[6].selector = @selector(_fullPathWithComFasterxmlJacksonCoreJsonPointer:withNSString:);
  methods[7].selector = @selector(_appendEscapedWithJavaLangStringBuilder:withNSString:);
  methods[8].selector = @selector(matches);
  methods[9].selector = @selector(getMatchingProperty);
  methods[10].selector = @selector(getMatchingIndex);
  methods[11].selector = @selector(mayMatchProperty);
  methods[12].selector = @selector(mayMatchElement);
  methods[13].selector = @selector(last);
  methods[14].selector = @selector(appendWithComFasterxmlJacksonCoreJsonPointer:);
  methods[15].selector = @selector(matchesPropertyWithNSString:);
  methods[16].selector = @selector(matchPropertyWithNSString:);
  methods[17].selector = @selector(matchesElementWithInt:);
  methods[18].selector = @selector(matchElementWithInt:);
  methods[19].selector = @selector(tail);
  methods[20].selector = @selector(head);
  methods[21].selector = @selector(description);
  methods[22].selector = @selector(hash);
  methods[23].selector = @selector(isEqual:);
  methods[24].selector = @selector(_parseIndexWithNSString:);
  methods[25].selector = @selector(_parseTailWithNSString:);
  methods[26].selector = @selector(_parseQuotedTailWithNSString:withInt:);
  methods[27].selector = @selector(_constructHead);
  methods[28].selector = @selector(_constructHeadWithInt:withComFasterxmlJacksonCoreJsonPointer:);
  methods[29].selector = @selector(_appendEscapeWithJavaLangStringBuilder:withChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SEPARATOR", "C", .constantValue.asUnichar = ComFasterxmlJacksonCoreJsonPointer_SEPARATOR, 0x19, -1, -1, -1, -1 },
    { "EMPTY", "LComFasterxmlJacksonCoreJsonPointer;", .constantValue.asLong = 0, 0x1c, -1, 31, -1, -1 },
    { "_nextSegment_", "LComFasterxmlJacksonCoreJsonPointer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_head_", "LComFasterxmlJacksonCoreJsonPointer;", .constantValue.asLong = 0, 0x44, -1, -1, -1, -1 },
    { "_asString_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_matchingPropertyName_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_matchingElementIndex_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LComFasterxmlJacksonCoreJsonPointer;", "LNSString;LNSString;ILComFasterxmlJacksonCoreJsonPointer;", "compile", "LNSString;", "LJavaLangIllegalArgumentException;", "valueOf", "forPath", "LComFasterxmlJacksonCoreTokenStreamContext;Z", "_fullPath", "LComFasterxmlJacksonCoreJsonPointer;LNSString;", "_appendEscaped", "LJavaLangStringBuilder;LNSString;", "append", "LComFasterxmlJacksonCoreJsonPointer;", "matchesProperty", "matchProperty", "matchesElement", "I", "matchElement", "toString", "hashCode", "equals", "LNSObject;", "_parseIndex", "_parseTail", "_parseQuotedTail", "LNSString;I", "_constructHead", "ILComFasterxmlJacksonCoreJsonPointer;", "_appendEscape", "LJavaLangStringBuilder;C", &ComFasterxmlJacksonCoreJsonPointer_EMPTY };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonPointer = { "JsonPointer", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x1, 30, 7, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonPointer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonPointer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonCoreJsonPointer_EMPTY, new_ComFasterxmlJacksonCoreJsonPointer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonPointer)
  }
}

@end

void ComFasterxmlJacksonCoreJsonPointer_init(ComFasterxmlJacksonCoreJsonPointer *self) {
  NSObject_init(self);
  JreStrongAssign(&self->_nextSegment_, nil);
  JreStrongAssign(&self->_matchingPropertyName_, @"");
  self->_matchingElementIndex_ = -1;
  JreStrongAssign(&self->_asString_, @"");
}

ComFasterxmlJacksonCoreJsonPointer *new_ComFasterxmlJacksonCoreJsonPointer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonPointer, init)
}

ComFasterxmlJacksonCoreJsonPointer *create_ComFasterxmlJacksonCoreJsonPointer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonPointer, init)
}

void ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(ComFasterxmlJacksonCoreJsonPointer *self, NSString *fullString, NSString *segment, ComFasterxmlJacksonCoreJsonPointer *next) {
  NSObject_init(self);
  JreStrongAssign(&self->_asString_, fullString);
  JreStrongAssign(&self->_nextSegment_, next);
  JreStrongAssign(&self->_matchingPropertyName_, segment);
  self->_matchingElementIndex_ = ComFasterxmlJacksonCoreJsonPointer__parseIndexWithNSString_(segment);
}

ComFasterxmlJacksonCoreJsonPointer *new_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(NSString *fullString, NSString *segment, ComFasterxmlJacksonCoreJsonPointer *next) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonPointer, initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_, fullString, segment, next)
}

ComFasterxmlJacksonCoreJsonPointer *create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(NSString *fullString, NSString *segment, ComFasterxmlJacksonCoreJsonPointer *next) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonPointer, initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_, fullString, segment, next)
}

void ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_(ComFasterxmlJacksonCoreJsonPointer *self, NSString *fullString, NSString *segment, jint matchIndex, ComFasterxmlJacksonCoreJsonPointer *next) {
  NSObject_init(self);
  JreStrongAssign(&self->_asString_, fullString);
  JreStrongAssign(&self->_nextSegment_, next);
  JreStrongAssign(&self->_matchingPropertyName_, segment);
  self->_matchingElementIndex_ = matchIndex;
}

ComFasterxmlJacksonCoreJsonPointer *new_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_(NSString *fullString, NSString *segment, jint matchIndex, ComFasterxmlJacksonCoreJsonPointer *next) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonPointer, initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_, fullString, segment, matchIndex, next)
}

ComFasterxmlJacksonCoreJsonPointer *create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_(NSString *fullString, NSString *segment, jint matchIndex, ComFasterxmlJacksonCoreJsonPointer *next) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonPointer, initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_, fullString, segment, matchIndex, next)
}

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer_compileWithNSString_(NSString *input) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  if ((input == nil) || [((NSString *) nil_chk(input)) java_length] == 0) {
    return ComFasterxmlJacksonCoreJsonPointer_EMPTY;
  }
  if ([((NSString *) nil_chk(input)) charAtWithInt:0] != '/') {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Invalid input: JSON Pointer expression must start with '/': \"", input, '"'));
  }
  return ComFasterxmlJacksonCoreJsonPointer__parseTailWithNSString_(input);
}

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer_valueOfWithNSString_(NSString *input) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  return ComFasterxmlJacksonCoreJsonPointer_compileWithNSString_(input);
}

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer_forPathWithComFasterxmlJacksonCoreTokenStreamContext_withBoolean_(ComFasterxmlJacksonCoreTokenStreamContext *context, jboolean includeRoot) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  if (context == nil) {
    return ComFasterxmlJacksonCoreJsonPointer_EMPTY;
  }
  if (![context hasPathSegment]) {
    if (!(includeRoot && [context inRoot] && [context hasCurrentIndex])) {
      context = [context getParent];
    }
  }
  ComFasterxmlJacksonCoreJsonPointer *tail = nil;
  for (; context != nil; context = [context getParent]) {
    if ([context inObject]) {
      NSString *seg = [context currentName];
      if (seg == nil) {
        seg = @"";
      }
      tail = create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(ComFasterxmlJacksonCoreJsonPointer__fullPathWithComFasterxmlJacksonCoreJsonPointer_withNSString_(tail, seg), seg, tail);
    }
    else if ([context inArray] || includeRoot) {
      jint ix = [context getCurrentIndex];
      NSString *ixStr = NSString_java_valueOfInt_(ix);
      tail = create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withInt_withComFasterxmlJacksonCoreJsonPointer_(ComFasterxmlJacksonCoreJsonPointer__fullPathWithComFasterxmlJacksonCoreJsonPointer_withNSString_(tail, ixStr), ixStr, ix, tail);
    }
  }
  if (tail == nil) {
    return ComFasterxmlJacksonCoreJsonPointer_EMPTY;
  }
  return tail;
}

NSString *ComFasterxmlJacksonCoreJsonPointer__fullPathWithComFasterxmlJacksonCoreJsonPointer_withNSString_(ComFasterxmlJacksonCoreJsonPointer *tail, NSString *segment) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  if (tail == nil) {
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_([((NSString *) nil_chk(segment)) java_length] + 1);
    [sb appendWithChar:'/'];
    ComFasterxmlJacksonCoreJsonPointer__appendEscapedWithJavaLangStringBuilder_withNSString_(sb, segment);
    return [sb description];
  }
  NSString *tailDesc = tail->_asString_;
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_([((NSString *) nil_chk(segment)) java_length] + 1 + [((NSString *) nil_chk(tailDesc)) java_length]);
  [sb appendWithChar:'/'];
  ComFasterxmlJacksonCoreJsonPointer__appendEscapedWithJavaLangStringBuilder_withNSString_(sb, segment);
  [sb appendWithNSString:tailDesc];
  return [sb description];
}

void ComFasterxmlJacksonCoreJsonPointer__appendEscapedWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *segment) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  for (jint i = 0, end = [((NSString *) nil_chk(segment)) java_length]; i < end; ++i) {
    jchar c = [segment charAtWithInt:i];
    if (c == '/') {
      [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"~1"];
      continue;
    }
    if (c == '~') {
      [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"~0"];
      continue;
    }
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:c];
  }
}

jint ComFasterxmlJacksonCoreJsonPointer__parseIndexWithNSString_(NSString *str) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  jint len = [((NSString *) nil_chk(str)) java_length];
  if (len == 0 || len > 10) {
    return -1;
  }
  jchar c = [str charAtWithInt:0];
  if (c <= '0') {
    return (len == 1 && c == '0') ? 0 : -1;
  }
  if (c > '9') {
    return -1;
  }
  for (jint i = 1; i < len; ++i) {
    c = [str charAtWithInt:i];
    if (c > '9' || c < '0') {
      return -1;
    }
  }
  if (len == 10) {
    jlong l = ComFasterxmlJacksonCoreIoNumberInput_parseLongWithNSString_(str);
    if (l > JavaLangInteger_MAX_VALUE) {
      return -1;
    }
  }
  return ComFasterxmlJacksonCoreIoNumberInput_parseIntWithNSString_(str);
}

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer__parseTailWithNSString_(NSString *input) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  jint end = [((NSString *) nil_chk(input)) java_length];
  for (jint i = 1; i < end; ) {
    jchar c = [input charAtWithInt:i];
    if (c == '/') {
      return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(input, [input java_substring:1 endIndex:i], ComFasterxmlJacksonCoreJsonPointer__parseTailWithNSString_([input java_substring:i]));
    }
    ++i;
    if (c == '~' && i < end) {
      return ComFasterxmlJacksonCoreJsonPointer__parseQuotedTailWithNSString_withInt_(input, i);
    }
  }
  return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(input, [input java_substring:1], ComFasterxmlJacksonCoreJsonPointer_EMPTY);
}

ComFasterxmlJacksonCoreJsonPointer *ComFasterxmlJacksonCoreJsonPointer__parseQuotedTailWithNSString_withInt_(NSString *input, jint i) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  jint end = [((NSString *) nil_chk(input)) java_length];
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(JavaLangMath_maxWithInt_withInt_(16, end));
  if (i > 2) {
    [sb appendWithJavaLangCharSequence:input withInt:1 withInt:i - 1];
  }
  ComFasterxmlJacksonCoreJsonPointer__appendEscapeWithJavaLangStringBuilder_withChar_(sb, [input charAtWithInt:i++]);
  while (i < end) {
    jchar c = [input charAtWithInt:i];
    if (c == '/') {
      return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(input, [sb description], ComFasterxmlJacksonCoreJsonPointer__parseTailWithNSString_([input java_substring:i]));
    }
    ++i;
    if (c == '~' && i < end) {
      ComFasterxmlJacksonCoreJsonPointer__appendEscapeWithJavaLangStringBuilder_withChar_(sb, [input charAtWithInt:i++]);
      continue;
    }
    [sb appendWithChar:c];
  }
  return create_ComFasterxmlJacksonCoreJsonPointer_initWithNSString_withNSString_withComFasterxmlJacksonCoreJsonPointer_(input, [sb description], ComFasterxmlJacksonCoreJsonPointer_EMPTY);
}

void ComFasterxmlJacksonCoreJsonPointer__appendEscapeWithJavaLangStringBuilder_withChar_(JavaLangStringBuilder *sb, jchar c) {
  ComFasterxmlJacksonCoreJsonPointer_initialize();
  if (c == '0') {
    c = '~';
  }
  else if (c == '1') {
    c = '/';
  }
  else {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'~'];
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:c];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonPointer)
