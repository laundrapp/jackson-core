//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/FormatSchema.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatSchema")
#ifdef RESTRICT_ComFasterxmlJacksonCoreFormatSchema
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatSchema 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatSchema 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreFormatSchema

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreFormatSchema_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreFormatSchema || defined(INCLUDE_ComFasterxmlJacksonCoreFormatSchema))
#define ComFasterxmlJacksonCoreFormatSchema_

/*!
 @brief Simple tag interface used to mark schema objects that are used by some 
 <code>JsonParser</code> and <code>JsonGenerator</code> implementations to further
  specify structure of expected format.
 Basic JSON-based parsers and generators do not use schemas, but some data
  formats (like many binary data formats like Thrift, protobuf) mandate
  use of schemas.
 <p>
  Since there is little commonality between schemas for different data formats,
  this interface does not define much meaningful functionality for accessing
  schema details; rather, specific parser and generator implementations need
  to cast to schema implementations they use. This marker interface is mostly
  used for tagging "some kind of schema" -- instead of passing opaque 
 <code>java.lang.Object</code> -- for documentation purposes.
 */
@protocol ComFasterxmlJacksonCoreFormatSchema < JavaObject >

/*!
 @brief Method that can be used to get an identifier that can be used for diagnostics
  purposes, to indicate what kind of data format this schema is used for: typically
  it is a short name of format itself, but it can also contain additional information
  in cases where data format supports multiple types of schemas.
 */
- (NSString *)getSchemaType;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreFormatSchema)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreFormatSchema)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatSchema")
