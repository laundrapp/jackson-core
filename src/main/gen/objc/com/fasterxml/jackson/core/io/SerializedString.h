//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/SerializedString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoSerializedString")
#ifdef RESTRICT_ComFasterxmlJacksonCoreIoSerializedString
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoSerializedString 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoSerializedString 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreIoSerializedString

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreIoSerializedString_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreIoSerializedString || defined(INCLUDE_ComFasterxmlJacksonCoreIoSerializedString))
#define ComFasterxmlJacksonCoreIoSerializedString_

#define RESTRICT_ComFasterxmlJacksonCoreSerializableString 1
#define INCLUDE_ComFasterxmlJacksonCoreSerializableString 1
#include "com/fasterxml/jackson/core/SerializableString.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;
@class IOSCharArray;
@class JavaIoOutputStream;
@class JavaNioByteBuffer;

/*!
 @brief String token that can lazily serialize String contained and then reuse that
  serialization later on.This is similar to JDBC prepared statements, for example,
  in that instances should only be created when they are used more than use;
  prime candidates are various serializers.
 <p>
  Class is final for performance reasons and since this is not designed to
  be extensible or customizable (customizations would occur in calling code)
 */
@interface ComFasterxmlJacksonCoreIoSerializedString : NSObject < ComFasterxmlJacksonCoreSerializableString, JavaIoSerializable > {
 @public
  NSString *_value_;
  IOSByteArray *_quotedUTF8Ref_;
  IOSByteArray *_unquotedUTF8Ref_;
  IOSCharArray *_quotedChars_;
  /*!
   @brief Ugly hack, to work through the requirement that _value is indeed final,
  and that JDK serialization won't call ctor(s).
   */
  NSString *_jdkSerializeValue_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)v;

- (jint)appendQuotedWithCharArray:(IOSCharArray *)buffer
                          withInt:(jint)offset;

- (jint)appendQuotedUTF8WithByteArray:(IOSByteArray *)buffer
                              withInt:(jint)offset;

- (jint)appendUnquotedWithCharArray:(IOSCharArray *)buffer
                            withInt:(jint)offset;

- (jint)appendUnquotedUTF8WithByteArray:(IOSByteArray *)buffer
                                withInt:(jint)offset;

- (IOSCharArray *)asQuotedChars;

/*!
 @brief Accessor for accessing value that has been quoted using JSON
  quoting rules, and encoded using UTF-8 encoding.
 */
- (IOSByteArray *)asQuotedUTF8;

/*!
 @brief Accessor for accessing value as is (without JSON quoting)
  encoded using UTF-8 encoding.
 */
- (IOSByteArray *)asUnquotedUTF8;

/*!
 @brief Returns length of the String as characters
 */
- (jint)charLength;

- (jboolean)isEqual:(id)o;

- (NSString *)getValue;

- (NSUInteger)hash;

- (jint)putQuotedUTF8WithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

- (jint)putUnquotedUTF8WithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

- (NSString *)description;

- (jint)writeQuotedUTF8WithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (jint)writeUnquotedUTF8WithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

#pragma mark Protected

- (id)readResolve;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreIoSerializedString)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSerializedString, _value_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSerializedString, _quotedUTF8Ref_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSerializedString, _unquotedUTF8Ref_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSerializedString, _quotedChars_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSerializedString, _jdkSerializeValue_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(ComFasterxmlJacksonCoreIoSerializedString *self, NSString *v);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoSerializedString *new_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(NSString *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoSerializedString *create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(NSString *v);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreIoSerializedString)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoSerializedString")
