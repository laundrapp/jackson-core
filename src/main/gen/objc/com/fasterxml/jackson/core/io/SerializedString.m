//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/SerializedString.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/io/SerializedString.h"
#include "com/fasterxml/jackson/core/util/BufferRecyclers.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/nio/ByteBuffer.h"

@interface ComFasterxmlJacksonCoreIoSerializedString ()

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

inline jlong ComFasterxmlJacksonCoreIoSerializedString_get_serialVersionUID(void);
#define ComFasterxmlJacksonCoreIoSerializedString_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreIoSerializedString, serialVersionUID, jlong)

__attribute__((unused)) static void ComFasterxmlJacksonCoreIoSerializedString_readObjectWithJavaIoObjectInputStream_(ComFasterxmlJacksonCoreIoSerializedString *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void ComFasterxmlJacksonCoreIoSerializedString_writeObjectWithJavaIoObjectOutputStream_(ComFasterxmlJacksonCoreIoSerializedString *self, JavaIoObjectOutputStream *outArg);

@implementation ComFasterxmlJacksonCoreIoSerializedString

- (instancetype __nonnull)initWithNSString:(NSString *)v {
  ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(self, v);
  return self;
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  ComFasterxmlJacksonCoreIoSerializedString_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  ComFasterxmlJacksonCoreIoSerializedString_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (id)readResolve {
  return create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(_jdkSerializeValue_);
}

- (NSString *)getValue {
  return _value_;
}

- (jint)charLength {
  return [((NSString *) nil_chk(_value_)) java_length];
}

- (IOSCharArray *)asQuotedChars {
  IOSCharArray *result = _quotedChars_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonTextWithNSString_(_value_);
    JreStrongAssign(&_quotedChars_, result);
  }
  return result;
}

- (IOSByteArray *)asUnquotedUTF8 {
  IOSByteArray *result = _unquotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_encodeAsUTF8WithNSString_(_value_);
    JreStrongAssign(&_unquotedUTF8Ref_, result);
  }
  return result;
}

- (IOSByteArray *)asQuotedUTF8 {
  IOSByteArray *result = _quotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonUTF8WithNSString_(_value_);
    JreStrongAssign(&_quotedUTF8Ref_, result);
  }
  return result;
}

- (jint)appendQuotedUTF8WithByteArray:(IOSByteArray *)buffer
                              withInt:(jint)offset {
  IOSByteArray *result = _quotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonUTF8WithNSString_(_value_);
    JreStrongAssign(&_quotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  if ((offset + length) > ((IOSByteArray *) nil_chk(buffer))->size_) {
    return -1;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(result, 0, buffer, offset, length);
  return length;
}

- (jint)appendQuotedWithCharArray:(IOSCharArray *)buffer
                          withInt:(jint)offset {
  IOSCharArray *result = _quotedChars_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonTextWithNSString_(_value_);
    JreStrongAssign(&_quotedChars_, result);
  }
  jint length = ((IOSCharArray *) nil_chk(result))->size_;
  if ((offset + length) > ((IOSCharArray *) nil_chk(buffer))->size_) {
    return -1;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(result, 0, buffer, offset, length);
  return length;
}

- (jint)appendUnquotedUTF8WithByteArray:(IOSByteArray *)buffer
                                withInt:(jint)offset {
  IOSByteArray *result = _unquotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_encodeAsUTF8WithNSString_(_value_);
    JreStrongAssign(&_unquotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  if ((offset + length) > ((IOSByteArray *) nil_chk(buffer))->size_) {
    return -1;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(result, 0, buffer, offset, length);
  return length;
}

- (jint)appendUnquotedWithCharArray:(IOSCharArray *)buffer
                            withInt:(jint)offset {
  NSString *str = _value_;
  jint length = [((NSString *) nil_chk(str)) java_length];
  if ((offset + length) > ((IOSCharArray *) nil_chk(buffer))->size_) {
    return -1;
  }
  [str java_getChars:0 sourceEnd:length destination:buffer destinationBegin:offset];
  return length;
}

- (jint)writeQuotedUTF8WithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  IOSByteArray *result = _quotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonUTF8WithNSString_(_value_);
    JreStrongAssign(&_quotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:result withInt:0 withInt:length];
  return length;
}

- (jint)writeUnquotedUTF8WithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  IOSByteArray *result = _unquotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_encodeAsUTF8WithNSString_(_value_);
    JreStrongAssign(&_unquotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:result withInt:0 withInt:length];
  return length;
}

- (jint)putQuotedUTF8WithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer {
  IOSByteArray *result = _quotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_quoteAsJsonUTF8WithNSString_(_value_);
    JreStrongAssign(&_quotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  if (length > [((JavaNioByteBuffer *) nil_chk(buffer)) remaining]) {
    return -1;
  }
  [buffer putWithByteArray:result withInt:0 withInt:length];
  return length;
}

- (jint)putUnquotedUTF8WithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer {
  IOSByteArray *result = _unquotedUTF8Ref_;
  if (result == nil) {
    result = ComFasterxmlJacksonCoreUtilBufferRecyclers_encodeAsUTF8WithNSString_(_value_);
    JreStrongAssign(&_unquotedUTF8Ref_, result);
  }
  jint length = ((IOSByteArray *) nil_chk(result))->size_;
  if (length > [((JavaNioByteBuffer *) nil_chk(buffer)) remaining]) {
    return -1;
  }
  [buffer putWithByteArray:result withInt:0 withInt:length];
  return length;
}

- (NSString *)description {
  return _value_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(_value_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil || [o java_getClass] != [self java_getClass]) return false;
  ComFasterxmlJacksonCoreIoSerializedString *other = (ComFasterxmlJacksonCoreIoSerializedString *) cast_chk(o, [ComFasterxmlJacksonCoreIoSerializedString class]);
  return [((NSString *) nil_chk(_value_)) isEqual:other->_value_];
}

- (void)dealloc {
  RELEASE_(_value_);
  RELEASE_(_quotedUTF8Ref_);
  RELEASE_(_unquotedUTF8Ref_);
  RELEASE_(_quotedChars_);
  RELEASE_(_jdkSerializeValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 3, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, 13, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 13, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 18, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 19, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 20, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[2].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  methods[3].selector = @selector(readResolve);
  methods[4].selector = @selector(getValue);
  methods[5].selector = @selector(charLength);
  methods[6].selector = @selector(asQuotedChars);
  methods[7].selector = @selector(asUnquotedUTF8);
  methods[8].selector = @selector(asQuotedUTF8);
  methods[9].selector = @selector(appendQuotedUTF8WithByteArray:withInt:);
  methods[10].selector = @selector(appendQuotedWithCharArray:withInt:);
  methods[11].selector = @selector(appendUnquotedUTF8WithByteArray:withInt:);
  methods[12].selector = @selector(appendUnquotedWithCharArray:withInt:);
  methods[13].selector = @selector(writeQuotedUTF8WithJavaIoOutputStream:);
  methods[14].selector = @selector(writeUnquotedUTF8WithJavaIoOutputStream:);
  methods[15].selector = @selector(putQuotedUTF8WithJavaNioByteBuffer:);
  methods[16].selector = @selector(putUnquotedUTF8WithJavaNioByteBuffer:);
  methods[17].selector = @selector(description);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonCoreIoSerializedString_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_value_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_quotedUTF8Ref_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_unquotedUTF8Ref_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_quotedChars_", "[C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_jdkSerializeValue_", "LNSString;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;", "writeObject", "LJavaIoObjectOutputStream;", "appendQuotedUTF8", "[BI", "appendQuoted", "[CI", "appendUnquotedUTF8", "appendUnquoted", "writeQuotedUTF8", "LJavaIoOutputStream;", "writeUnquotedUTF8", "putQuotedUTF8", "LJavaNioByteBuffer;", "putUnquotedUTF8", "toString", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreIoSerializedString = { "SerializedString", "com.fasterxml.jackson.core.io", ptrTable, methods, fields, 7, 0x1, 20, 6, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreIoSerializedString;
}

@end

void ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(ComFasterxmlJacksonCoreIoSerializedString *self, NSString *v) {
  NSObject_init(self);
  if (v == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Null String illegal for SerializedString");
  }
  JreStrongAssign(&self->_value_, v);
}

ComFasterxmlJacksonCoreIoSerializedString *new_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(NSString *v) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreIoSerializedString, initWithNSString_, v)
}

ComFasterxmlJacksonCoreIoSerializedString *create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(NSString *v) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreIoSerializedString, initWithNSString_, v)
}

void ComFasterxmlJacksonCoreIoSerializedString_readObjectWithJavaIoObjectInputStream_(ComFasterxmlJacksonCoreIoSerializedString *self, JavaIoObjectInputStream *inArg) {
  JreStrongAssign(&self->_jdkSerializeValue_, [((JavaIoObjectInputStream *) nil_chk(inArg)) readUTF]);
}

void ComFasterxmlJacksonCoreIoSerializedString_writeObjectWithJavaIoObjectOutputStream_(ComFasterxmlJacksonCoreIoSerializedString *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) writeUTFWithNSString:self->_value_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreIoSerializedString)
