//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/format/DataFormatDetector.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonFactory.h"
#include "com/fasterxml/jackson/core/format/DataFormatDetector.h"
#include "com/fasterxml/jackson/core/format/DataFormatMatcher.h"
#include "com/fasterxml/jackson/core/format/InputAccessor.h"
#include "com/fasterxml/jackson/core/format/MatchStrength.h"
#include "java/io/InputStream.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collection.h"

@interface ComFasterxmlJacksonCoreFormatDataFormatDetector ()

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonFactoryArray:(IOSObjectArray *)detectors
                           withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)optMatch
                           withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)minMatch
                                                                  withInt:(jint)maxInputLookahead;

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)_findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std:(ComFasterxmlJacksonCoreFormatInputAccessor_Std *)acc;

@end

__attribute__((unused)) static void ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead);

__attribute__((unused)) static ComFasterxmlJacksonCoreFormatDataFormatDetector *new_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonCoreFormatDataFormatDetector *create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead);

__attribute__((unused)) static ComFasterxmlJacksonCoreFormatDataFormatMatcher *ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, ComFasterxmlJacksonCoreFormatInputAccessor_Std *acc);

@implementation ComFasterxmlJacksonCoreFormatDataFormatDetector

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonFactoryArray:(IOSObjectArray *)detectors {
  ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_(self, detectors);
  return self;
}

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)detectors {
  ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithJavaUtilCollection_(self, detectors);
  return self;
}

- (ComFasterxmlJacksonCoreFormatDataFormatDetector *)withOptimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)optMatch {
  if (optMatch == _optimalMatch_) {
    return self;
  }
  return create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(_detectors_, optMatch, _minimalMatch_, _maxInputLookahead_);
}

- (ComFasterxmlJacksonCoreFormatDataFormatDetector *)withMinimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)minMatch {
  if (minMatch == _minimalMatch_) {
    return self;
  }
  return create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(_detectors_, _optimalMatch_, minMatch, _maxInputLookahead_);
}

- (ComFasterxmlJacksonCoreFormatDataFormatDetector *)withMaxInputLookaheadWithInt:(jint)lookaheadBytes {
  if (lookaheadBytes == _maxInputLookahead_) {
    return self;
  }
  return create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(_detectors_, _optimalMatch_, _minimalMatch_, lookaheadBytes);
}

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonFactoryArray:(IOSObjectArray *)detectors
                           withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)optMatch
                           withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)minMatch
                                                                  withInt:(jint)maxInputLookahead {
  ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(self, detectors, optMatch, minMatch, maxInputLookahead);
  return self;
}

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)findFormatWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(self, create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(inArg, [IOSByteArray arrayWithLength:_maxInputLookahead_]));
}

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)findFormatWithByteArray:(IOSByteArray *)fullInputData {
  return ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(self, create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(fullInputData));
}

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)findFormatWithByteArray:(IOSByteArray *)fullInputData
                                                                    withInt:(jint)offset
                                                                    withInt:(jint)len {
  return ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(self, create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(fullInputData, offset, len));
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithChar:'['];
  jint len = ((IOSObjectArray *) nil_chk(_detectors_))->size_;
  if (len > 0) {
    [sb appendWithNSString:[((ComFasterxmlJacksonCoreJsonFactory *) nil_chk(IOSObjectArray_Get(_detectors_, 0))) getFormatName]];
    for (jint i = 1; i < len; ++i) {
      [sb appendWithNSString:@", "];
      [sb appendWithNSString:[((ComFasterxmlJacksonCoreJsonFactory *) nil_chk(IOSObjectArray_Get(_detectors_, i))) getFormatName]];
    }
  }
  [sb appendWithChar:']'];
  return [sb description];
}

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)_findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std:(ComFasterxmlJacksonCoreFormatInputAccessor_Std *)acc {
  return ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(self, acc);
}

- (void)dealloc {
  RELEASE_(_detectors_);
  RELEASE_(_optimalMatch_);
  RELEASE_(_minimalMatch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatDetector;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatDetector;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatDetector;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatMatcher;", 0x1, 9, 10, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatMatcher;", 0x1, 9, 12, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatMatcher;", 0x1, 9, 13, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatMatcher;", 0x2, 15, 16, 11, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreJsonFactoryArray:);
  methods[1].selector = @selector(initWithJavaUtilCollection:);
  methods[2].selector = @selector(withOptimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:);
  methods[3].selector = @selector(withMinimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:);
  methods[4].selector = @selector(withMaxInputLookaheadWithInt:);
  methods[5].selector = @selector(initWithComFasterxmlJacksonCoreJsonFactoryArray:withComFasterxmlJacksonCoreFormatMatchStrength:withComFasterxmlJacksonCoreFormatMatchStrength:withInt:);
  methods[6].selector = @selector(findFormatWithJavaIoInputStream:);
  methods[7].selector = @selector(findFormatWithByteArray:);
  methods[8].selector = @selector(findFormatWithByteArray:withInt:withInt:);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(_findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_INPUT_LOOKAHEAD", "I", .constantValue.asInt = ComFasterxmlJacksonCoreFormatDataFormatDetector_DEFAULT_MAX_INPUT_LOOKAHEAD, 0x19, -1, -1, -1, -1 },
    { "_detectors_", "[LComFasterxmlJacksonCoreJsonFactory;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_optimalMatch_", "LComFasterxmlJacksonCoreFormatMatchStrength;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_minimalMatch_", "LComFasterxmlJacksonCoreFormatMatchStrength;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_maxInputLookahead_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LComFasterxmlJacksonCoreJsonFactory;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lcom/fasterxml/jackson/core/JsonFactory;>;)V", "withOptimalMatch", "LComFasterxmlJacksonCoreFormatMatchStrength;", "withMinimalMatch", "withMaxInputLookahead", "I", "[LComFasterxmlJacksonCoreJsonFactory;LComFasterxmlJacksonCoreFormatMatchStrength;LComFasterxmlJacksonCoreFormatMatchStrength;I", "findFormat", "LJavaIoInputStream;", "LJavaIoIOException;", "[B", "[BII", "toString", "_findFormat", "LComFasterxmlJacksonCoreFormatInputAccessor_Std;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreFormatDataFormatDetector = { "DataFormatDetector", "com.fasterxml.jackson.core.format", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreFormatDataFormatDetector;
}

@end

void ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, IOSObjectArray *detectors) {
  ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(self, detectors, JreLoadEnum(ComFasterxmlJacksonCoreFormatMatchStrength, SOLID_MATCH), JreLoadEnum(ComFasterxmlJacksonCoreFormatMatchStrength, WEAK_MATCH), ComFasterxmlJacksonCoreFormatDataFormatDetector_DEFAULT_MAX_INPUT_LOOKAHEAD);
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *new_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_(IOSObjectArray *detectors) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithComFasterxmlJacksonCoreJsonFactoryArray_, detectors)
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_(IOSObjectArray *detectors) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithComFasterxmlJacksonCoreJsonFactoryArray_, detectors)
}

void ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithJavaUtilCollection_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, id<JavaUtilCollection> detectors) {
  ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_(self, [((id<JavaUtilCollection>) nil_chk(detectors)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[detectors size] type:ComFasterxmlJacksonCoreJsonFactory_class_()]]);
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *new_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithJavaUtilCollection_(id<JavaUtilCollection> detectors) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithJavaUtilCollection_, detectors)
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithJavaUtilCollection_(id<JavaUtilCollection> detectors) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithJavaUtilCollection_, detectors)
}

void ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead) {
  NSObject_init(self);
  JreStrongAssign(&self->_detectors_, detectors);
  JreStrongAssign(&self->_optimalMatch_, optMatch);
  JreStrongAssign(&self->_minimalMatch_, minMatch);
  self->_maxInputLookahead_ = maxInputLookahead;
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *new_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_, detectors, optMatch, minMatch, maxInputLookahead)
}

ComFasterxmlJacksonCoreFormatDataFormatDetector *create_ComFasterxmlJacksonCoreFormatDataFormatDetector_initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_(IOSObjectArray *detectors, ComFasterxmlJacksonCoreFormatMatchStrength *optMatch, ComFasterxmlJacksonCoreFormatMatchStrength *minMatch, jint maxInputLookahead) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatDataFormatDetector, initWithComFasterxmlJacksonCoreJsonFactoryArray_withComFasterxmlJacksonCoreFormatMatchStrength_withComFasterxmlJacksonCoreFormatMatchStrength_withInt_, detectors, optMatch, minMatch, maxInputLookahead)
}

ComFasterxmlJacksonCoreFormatDataFormatMatcher *ComFasterxmlJacksonCoreFormatDataFormatDetector__findFormatWithComFasterxmlJacksonCoreFormatInputAccessor_Std_(ComFasterxmlJacksonCoreFormatDataFormatDetector *self, ComFasterxmlJacksonCoreFormatInputAccessor_Std *acc) {
  ComFasterxmlJacksonCoreJsonFactory *bestMatch = nil;
  ComFasterxmlJacksonCoreFormatMatchStrength *bestMatchStrength = nil;
  {
    IOSObjectArray *a__ = self->_detectors_;
    ComFasterxmlJacksonCoreJsonFactory * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComFasterxmlJacksonCoreJsonFactory * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComFasterxmlJacksonCoreJsonFactory *f = *b__++;
      [((ComFasterxmlJacksonCoreFormatInputAccessor_Std *) nil_chk(acc)) reset];
      ComFasterxmlJacksonCoreFormatMatchStrength *strength = [((ComFasterxmlJacksonCoreJsonFactory *) nil_chk(f)) hasFormatWithComFasterxmlJacksonCoreFormatInputAccessor:acc];
      if (strength == nil || [strength ordinal] < [((ComFasterxmlJacksonCoreFormatMatchStrength *) nil_chk(self->_minimalMatch_)) ordinal]) {
        continue;
      }
      if (bestMatch != nil) {
        if ([((ComFasterxmlJacksonCoreFormatMatchStrength *) nil_chk(bestMatchStrength)) ordinal] >= [strength ordinal]) {
          continue;
        }
      }
      bestMatch = f;
      bestMatchStrength = strength;
      if ([strength ordinal] >= [((ComFasterxmlJacksonCoreFormatMatchStrength *) nil_chk(self->_optimalMatch_)) ordinal]) {
        break;
      }
    }
  }
  return [((ComFasterxmlJacksonCoreFormatInputAccessor_Std *) nil_chk(acc)) createMatcherWithComFasterxmlJacksonCoreJsonFactory:bestMatch withComFasterxmlJacksonCoreFormatMatchStrength:bestMatchStrength];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreFormatDataFormatDetector)
