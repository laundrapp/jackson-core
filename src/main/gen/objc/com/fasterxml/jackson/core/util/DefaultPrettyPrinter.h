//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter")
#ifdef RESTRICT_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter
#ifdef INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter
#define INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter
#define INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter || defined(INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter))
#define ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_

#define RESTRICT_ComFasterxmlJacksonCorePrettyPrinter 1
#define INCLUDE_ComFasterxmlJacksonCorePrettyPrinter 1
#include "com/fasterxml/jackson/core/PrettyPrinter.h"

#define RESTRICT_ComFasterxmlJacksonCoreUtilInstantiatable 1
#define INCLUDE_ComFasterxmlJacksonCoreUtilInstantiatable 1
#include "com/fasterxml/jackson/core/util/Instantiatable.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonCoreIoSerializedString;
@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreUtilSeparators;
@protocol ComFasterxmlJacksonCoreSerializableString;
@protocol ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter;

/*!
 @brief Default <code>PrettyPrinter</code> implementation that uses 2-space
  indentation with platform-default linefeeds.
 Usually this class is not instantiated directly, but instead
  method <code>JsonGenerator.useDefaultPrettyPrinter</code> is
  used, which will use an instance of this class for operation.
 */
@interface ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter : NSObject < ComFasterxmlJacksonCorePrettyPrinter, ComFasterxmlJacksonCoreUtilInstantiatable, JavaIoSerializable > {
 @public
  /*!
   @brief By default, let's use only spaces to separate array values.
   */
  id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter> _arrayIndenter_;
  /*!
   @brief By default, let's use linefeed-adding indenter for separate
  object entries.We'll further configure indenter to use
  system-specific linefeeds, and 2 spaces per level (as opposed to,
  say, single tabs)
   */
  id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter> _objectIndenter_;
  /*!
   @brief String printed between root-level values, if any.
   */
  id<ComFasterxmlJacksonCoreSerializableString> _rootSeparator_;
  /*!
   @brief By default we will add spaces around colons used to
  separate object fields and values.
   If disabled, will not use spaces around colon.
   */
  jboolean _spacesInObjectEntries_;
  /*!
   @brief Number of open levels of nesting.Used to determine amount of
  indentation to use.
   */
  jint _nesting_;
  ComFasterxmlJacksonCoreUtilSeparators *_separators_;
  NSString *_objectFieldValueSeparatorWithSpaces_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter:(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)base;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter:(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)base
                                    withComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)rootSeparator;

/*!
 @brief Constructor that specifies separator String to use between root values;
  if null, no separator is printed.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)rootSeparator;

/*!
 @brief Constructor that specifies separator String to use between root values;
  if null, no separator is printed.
 <p>
  Note: simply constructs a <code>SerializedString</code> out of parameter,
  calls <code>DefaultPrettyPrinter(SerializableString)</code>
 @param rootSeparator
 */
- (instancetype __nonnull)initWithNSString:(NSString *)rootSeparator;

- (void)beforeArrayValuesWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)beforeObjectEntriesWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)createInstance;

- (void)indentArraysWithWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter:(id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)i;

- (void)indentObjectsWithWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter:(id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)i;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withArrayIndenterWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter:(id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)i;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withObjectIndenterWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter:(id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)i;

/*!
 @brief "Mutant factory" method that will return a pretty printer instance
  that does not use spaces inside object entries; if 'this' instance already
  does this, it is returned; if not, a new instance will be constructed
  and returned.
 */
- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withoutSpacesInObjectEntries;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withRootSeparatorWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)rootSeparator;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withRootSeparatorWithNSString:(NSString *)rootSeparator;

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withSeparatorsWithComFasterxmlJacksonCoreUtilSeparators:(ComFasterxmlJacksonCoreUtilSeparators *)separators;

/*!
 @brief "Mutant factory" method that will return a pretty printer instance
  that does use spaces inside object entries; if 'this' instance already
  does this, it is returned; if not, a new instance will be constructed
  and returned.
 */
- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)withSpacesInObjectEntries;

/*!
 @brief Method called after an array value has been completely
  output, and before another value is to be output.
 <p>
  Default handling (without pretty-printing) will output a single
  comma to separate the two. Pretty-printer is
  to output a comma as well, but can surround that with other
  (white-space) decoration.
 */
- (void)writeArrayValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)writeEndArrayWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                      withInt:(jint)nrOfValues;

- (void)writeEndObjectWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                       withInt:(jint)nrOfEntries;

/*!
 @brief Method called after an object entry (field:value) has been completely
  output, and before another value is to be output.
 <p>
  Default handling (without pretty-printing) will output a single
  comma to separate the two. Pretty-printer is
  to output a comma as well, but can surround that with other
  (white-space) decoration.
 */
- (void)writeObjectEntrySeparatorWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

/*!
 @brief Method called after an object field has been output, but
  before the value is output.
 <p>
  Default handling (without pretty-printing) will output a single
  colon to separate the two. Pretty-printer is
  to output a colon as well, but can surround that with other
  (white-space) decoration.
 */
- (void)writeObjectFieldValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)writeRootValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)writeStartArrayWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)writeStartObjectWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

#pragma mark Protected

- (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *)_withSpacesWithBoolean:(jboolean)state;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, _arrayIndenter_, id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, _objectIndenter_, id<ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, _rootSeparator_, id<ComFasterxmlJacksonCoreSerializableString>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, _separators_, ComFasterxmlJacksonCoreUtilSeparators *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, _objectFieldValueSeparatorWithSpaces_, NSString *)

/*!
 @brief Constant that specifies default "root-level" separator to use between
  root values: a single space character.
 */
inline ComFasterxmlJacksonCoreIoSerializedString *ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_get_DEFAULT_ROOT_VALUE_SEPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoSerializedString *ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_DEFAULT_ROOT_VALUE_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, DEFAULT_ROOT_VALUE_SEPARATOR, ComFasterxmlJacksonCoreIoSerializedString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_init(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithNSString_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *self, NSString *rootSeparator);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithNSString_(NSString *rootSeparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithNSString_(NSString *rootSeparator);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreSerializableString_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *self, id<ComFasterxmlJacksonCoreSerializableString> rootSeparator);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreSerializableString_(id<ComFasterxmlJacksonCoreSerializableString> rootSeparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreSerializableString_(id<ComFasterxmlJacksonCoreSerializableString> rootSeparator);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *self, ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_withComFasterxmlJacksonCoreSerializableString_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *self, ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base, id<ComFasterxmlJacksonCoreSerializableString> rootSeparator);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_withComFasterxmlJacksonCoreSerializableString_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base, id<ComFasterxmlJacksonCoreSerializableString> rootSeparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_initWithComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_withComFasterxmlJacksonCoreSerializableString_(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter *base, id<ComFasterxmlJacksonCoreSerializableString> rootSeparator);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter)

#endif

#if !defined (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter || defined(INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter))
#define ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter_

@class ComFasterxmlJacksonCoreJsonGenerator;

/*!
 @brief Interface that defines objects that can produce indentation used
  to separate object entries and array values.Indentation in this
  context just means insertion of white space, independent of whether
  linefeeds are output.
 */
@protocol ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter < JavaObject >

- (void)writeIndentationWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                         withInt:(jint)level;

/*!
 @return True if indenter is considered inline (does not add linefeeds),
    false otherwise
 */
- (jboolean)isInline;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter)

#endif

#if !defined (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter || defined(INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter))
#define ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonCoreJsonGenerator;

/*!
 @brief Dummy implementation that adds no indentation whatsoever
 */
@interface ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter : NSObject < ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_Indenter, JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)init;

+ (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter *)instance;

- (jboolean)isInline;

- (void)writeIndentationWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                         withInt:(jint)level;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_init(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_init(void);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter *ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter_instance(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter)

#endif

#if !defined (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter || defined(INCLUDE_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter))
#define ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_

@class ComFasterxmlJacksonCoreJsonGenerator;

/*!
 @brief This is a very simple indenter that only adds a
  single space for indentation.It is used as the default
  indenter for array values.
 */
@interface ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter : ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_NopIndenter

#pragma mark Public

- (instancetype __nonnull)init;

+ (ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter *)instance;

- (jboolean)isInline;

- (void)writeIndentationWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                         withInt:(jint)level;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_init(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter *new_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter *create_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_init(void);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter *ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter_instance(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter_FixedSpaceIndenter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter")
