//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseGeneratorBase")
#ifdef RESTRICT_ComFasterxmlJacksonCoreBaseGeneratorBase
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseGeneratorBase 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseGeneratorBase 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreBaseGeneratorBase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreBaseGeneratorBase_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreBaseGeneratorBase || defined(INCLUDE_ComFasterxmlJacksonCoreBaseGeneratorBase))
#define ComFasterxmlJacksonCoreBaseGeneratorBase_

#define RESTRICT_ComFasterxmlJacksonCoreJsonGenerator 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonGenerator 1
#include "com/fasterxml/jackson/core/JsonGenerator.h"

@class ComFasterxmlJacksonCoreBase64Variant;
@class ComFasterxmlJacksonCoreJsonGenerator_Feature;
@class ComFasterxmlJacksonCoreJsonJsonWriteContext;
@class ComFasterxmlJacksonCoreJsonStreamContext;
@class ComFasterxmlJacksonCoreObjectCodec;
@class ComFasterxmlJacksonCoreVersion;
@class IOSCharArray;
@class JavaIoInputStream;
@class JavaMathBigDecimal;
@protocol ComFasterxmlJacksonCorePrettyPrinter;
@protocol ComFasterxmlJacksonCoreSerializableString;
@protocol ComFasterxmlJacksonCoreTreeNode;

/*!
 @brief This base class implements part of API that a JSON generator exposes
  to applications, adds shared internal methods that sub-classes
  can use and adds some abstract methods sub-classes must implement.
 */
@interface ComFasterxmlJacksonCoreBaseGeneratorBase : ComFasterxmlJacksonCoreJsonGenerator {
 @public
  ComFasterxmlJacksonCoreObjectCodec *_objectCodec_;
  /*!
   @brief Bit flag composed of bits that indicate which 
 <code>com.fasterxml.jackson.core.JsonGenerator.Feature</code>s
  are enabled.
   */
  jint _features_;
  /*!
   @brief Flag set to indicate that implicit conversion from number
  to JSON String is needed (as per 
 <code>com.fasterxml.jackson.core.JsonGenerator.Feature</code>).
   */
  jboolean _cfgNumbersAsStrings_;
  /*!
   @brief Object that keeps track of the current contextual state
  of the generator.
   */
  ComFasterxmlJacksonCoreJsonJsonWriteContext *_writeContext_;
  /*!
   @brief Flag that indicates whether generator is closed or not.Gets
  set when it is closed by an explicit call
  (<code>close</code>).
   */
  jboolean _closed_;
}

#pragma mark Public

- (void)close;

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f;

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f;

- (void)flush;

- (ComFasterxmlJacksonCoreObjectCodec *)getCodec;

- (id)getCurrentValue;

- (jint)getFeatureMask;

/*!
 @brief Note: type was co-variant until Jackson 2.7; reverted back to
  base type in 2.8 to allow for overriding by subtypes that use
  custom context type.
 */
- (ComFasterxmlJacksonCoreJsonStreamContext *)getOutputContext;

- (jboolean)isClosed;

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f;

- (ComFasterxmlJacksonCoreJsonGenerator *)overrideStdFeaturesWithInt:(jint)values
                                                             withInt:(jint)mask;

- (ComFasterxmlJacksonCoreJsonGenerator *)setCodecWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)oc;

- (void)setCurrentValueWithId:(id)v;

- (ComFasterxmlJacksonCoreJsonGenerator *)setFeatureMaskWithInt:(jint)newMask;

- (ComFasterxmlJacksonCoreJsonGenerator *)useDefaultPrettyPrinter;

/*!
 @brief Implemented with standard version number detection algorithm, typically using
  a simple generated class, with information extracted from Maven project file
  during build.
 */
- (ComFasterxmlJacksonCoreVersion *)version__;

- (jint)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                      withJavaIoInputStream:(JavaIoInputStream *)data
                                                    withInt:(jint)dataLength;

- (void)writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name;

- (void)writeObjectWithId:(id)value;

- (void)writeRawValueWithCharArray:(IOSCharArray *)text
                           withInt:(jint)offset
                           withInt:(jint)len;

- (void)writeRawValueWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text;

- (void)writeRawValueWithNSString:(NSString *)text;

- (void)writeRawValueWithNSString:(NSString *)text
                          withInt:(jint)offset
                          withInt:(jint)len;

- (void)writeStartObjectWithId:(id)forValue;

- (void)writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text;

- (void)writeTreeWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)rootNode;

#pragma mark Protected

- (instancetype __nonnull)initWithInt:(jint)features
withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec;

/*!
 @since 2.5
 */
- (instancetype __nonnull)initWithInt:(jint)features
withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec
withComFasterxmlJacksonCoreJsonJsonWriteContext:(ComFasterxmlJacksonCoreJsonJsonWriteContext *)ctxt;

/*!
 @brief Helper method used to serialize a <code>java.math.BigDecimal</code> as a String,
  for serialization, taking into account configuration settings
 @since 2.7.7
 */
- (NSString *)_asStringWithJavaMathBigDecimal:(JavaMathBigDecimal *)value;

/*!
 @brief Helper method called to verify changes to standard features.
 @param newFeatureFlags Bitflag of standard features after they were changed
 @param changedFeatures Bitflag of standard features for which setting     did change
 @since 2.7
 */
- (void)_checkStdFeatureChangesWithInt:(jint)newFeatureFlags
                               withInt:(jint)changedFeatures;

/*!
 @brief Overridable factory method called to instantiate an appropriate <code>PrettyPrinter</code>
  for case of "just use the default one", when <code>useDefaultPrettyPrinter()</code> is called.
 @since 2.6
 */
- (id<ComFasterxmlJacksonCorePrettyPrinter>)_constructDefaultPrettyPrinter;

/*!
 @since 2.5
 */
- (jint)_decodeSurrogateWithInt:(jint)surr1
                        withInt:(jint)surr2;

/*!
 @brief Method called to release any buffers generator may be holding,
  once generator is being closed.
 */
- (void)_releaseBuffers;

/*!
 @brief Method called before trying to write a value (scalar or structured),
  to verify that this is legal in current output state, as well as to
  output separators if and as necessary.
 @param typeMsg Additional message used for generating exception message    if value output is NOT legal in current generator output state.
 */
- (void)_verifyValueWriteWithNSString:(NSString *)typeMsg;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreBaseGeneratorBase)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseGeneratorBase, _objectCodec_, ComFasterxmlJacksonCoreObjectCodec *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseGeneratorBase, _writeContext_, ComFasterxmlJacksonCoreJsonJsonWriteContext *)

inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_SURR1_FIRST(void);
#define ComFasterxmlJacksonCoreBaseGeneratorBase_SURR1_FIRST 55296
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreBaseGeneratorBase, SURR1_FIRST, jint)

inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_SURR1_LAST(void);
#define ComFasterxmlJacksonCoreBaseGeneratorBase_SURR1_LAST 56319
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreBaseGeneratorBase, SURR1_LAST, jint)

inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_SURR2_FIRST(void);
#define ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_FIRST 56320
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreBaseGeneratorBase, SURR2_FIRST, jint)

inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_SURR2_LAST(void);
#define ComFasterxmlJacksonCoreBaseGeneratorBase_SURR2_LAST 57343
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreBaseGeneratorBase, SURR2_LAST, jint)

/*!
 @brief Set of feature masks related to features that need updates of other
  local configuration or state.
 @since 2.5
 */
inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_DERIVED_FEATURES_MASK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ComFasterxmlJacksonCoreBaseGeneratorBase_DERIVED_FEATURES_MASK;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, DERIVED_FEATURES_MASK, jint)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_BINARY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BINARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_BINARY, NSString *)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_BOOLEAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_BOOLEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_BOOLEAN, NSString *)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_NULL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NULL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_NULL, NSString *)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_NUMBER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_NUMBER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_NUMBER, NSString *)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_RAW(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_RAW;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_RAW, NSString *)

inline NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_get_WRITE_STRING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreBaseGeneratorBase_WRITE_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreBaseGeneratorBase, WRITE_STRING, NSString *)

/*!
 @brief This value is the limit of scale allowed for serializing <code>BigDecimal</code>
  in "plain" (non-engineering) notation; intent is to prevent asymmetric
  attack whereupon simple eng-notation with big scale is used to generate
  huge "plain" serialization.See [core#315] for details.
 @since 2.7.7
 */
inline jint ComFasterxmlJacksonCoreBaseGeneratorBase_get_MAX_BIG_DECIMAL_SCALE(void);
#define ComFasterxmlJacksonCoreBaseGeneratorBase_MAX_BIG_DECIMAL_SCALE 9999
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreBaseGeneratorBase, MAX_BIG_DECIMAL_SCALE, jint)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseGeneratorBase_initWithInt_withComFasterxmlJacksonCoreObjectCodec_(ComFasterxmlJacksonCoreBaseGeneratorBase *self, jint features, ComFasterxmlJacksonCoreObjectCodec *codec);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseGeneratorBase_initWithInt_withComFasterxmlJacksonCoreObjectCodec_withComFasterxmlJacksonCoreJsonJsonWriteContext_(ComFasterxmlJacksonCoreBaseGeneratorBase *self, jint features, ComFasterxmlJacksonCoreObjectCodec *codec, ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreBaseGeneratorBase)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseGeneratorBase")
