//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/BufferRecyclers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilBufferRecyclers")
#ifdef RESTRICT_ComFasterxmlJacksonCoreUtilBufferRecyclers
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilBufferRecyclers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilBufferRecyclers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreUtilBufferRecyclers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreUtilBufferRecyclers_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilBufferRecyclers || defined(INCLUDE_ComFasterxmlJacksonCoreUtilBufferRecyclers))
#define ComFasterxmlJacksonCoreUtilBufferRecyclers_

@class ComFasterxmlJacksonCoreIoJsonStringEncoder;
@class ComFasterxmlJacksonCoreUtilBufferRecycler;
@class JavaLangThreadLocal;

/*!
 @brief Helper entity used to further
 @since 2.9.2
 */
@interface ComFasterxmlJacksonCoreUtilBufferRecyclers : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (ComFasterxmlJacksonCoreUtilBufferRecycler *)getBufferRecycler;

+ (ComFasterxmlJacksonCoreIoJsonStringEncoder *)getJsonStringEncoder;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreUtilBufferRecyclers)

/*!
 @brief This <code>ThreadLocal</code> contains a <code>java.lang.ref.SoftReference</code>
  to a <code>BufferRecycler</code> used to provide a low-cost
  buffer recycling between reader and writer instances.
 */
inline JavaLangThreadLocal *ComFasterxmlJacksonCoreUtilBufferRecyclers_get__recyclerRef(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangThreadLocal *ComFasterxmlJacksonCoreUtilBufferRecyclers__recyclerRef;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreUtilBufferRecyclers, _recyclerRef, JavaLangThreadLocal *)

/*!
 @brief This <code>ThreadLocal</code> contains a <code>java.lang.ref.SoftReference</code>
  to a <code>BufferRecycler</code> used to provide a low-cost
  buffer recycling between reader and writer instances.
 */
inline JavaLangThreadLocal *ComFasterxmlJacksonCoreUtilBufferRecyclers_get__encoderRef(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangThreadLocal *ComFasterxmlJacksonCoreUtilBufferRecyclers__encoderRef;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreUtilBufferRecyclers, _encoderRef, JavaLangThreadLocal *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilBufferRecyclers_init(ComFasterxmlJacksonCoreUtilBufferRecyclers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilBufferRecyclers *new_ComFasterxmlJacksonCoreUtilBufferRecyclers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilBufferRecyclers *create_ComFasterxmlJacksonCoreUtilBufferRecyclers_init(void);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilBufferRecycler *ComFasterxmlJacksonCoreUtilBufferRecyclers_getBufferRecycler(void);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoJsonStringEncoder *ComFasterxmlJacksonCoreUtilBufferRecyclers_getJsonStringEncoder(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilBufferRecyclers)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilBufferRecyclers")
