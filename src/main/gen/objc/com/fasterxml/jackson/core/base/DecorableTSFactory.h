//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/base/DecorableTSFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory")
#ifdef RESTRICT_ComFasterxmlJacksonCoreBaseDecorableTSFactory
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreBaseDecorableTSFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreBaseDecorableTSFactory_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory || defined(INCLUDE_ComFasterxmlJacksonCoreBaseDecorableTSFactory))
#define ComFasterxmlJacksonCoreBaseDecorableTSFactory_

#define RESTRICT_ComFasterxmlJacksonCoreTokenStreamFactory 1
#define INCLUDE_ComFasterxmlJacksonCoreTokenStreamFactory 1
#include "com/fasterxml/jackson/core/TokenStreamFactory.h"

@class ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder;
@class ComFasterxmlJacksonCoreIoIOContext;
@class ComFasterxmlJacksonCoreIoInputDecorator;
@class ComFasterxmlJacksonCoreIoOutputDecorator;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@protocol JavaIoDataInput;

/*!
 @brief Intermediate base <code>TokenStreamFactory</code> implementation that offers support for
  streams that allow decoration of low-level input sources and output targets.
 @since 3.0
 */
@interface ComFasterxmlJacksonCoreBaseDecorableTSFactory : ComFasterxmlJacksonCoreTokenStreamFactory {
 @public
  /*!
   @brief Optional helper object that may decorate input sources, to do
  additional processing on input during parsing.
   */
  ComFasterxmlJacksonCoreIoInputDecorator *_inputDecorator_;
  /*!
   @brief Optional helper object that may decorate output object, to do
  additional processing on output during content generation.
   */
  ComFasterxmlJacksonCoreIoOutputDecorator *_outputDecorator_;
}

#pragma mark Public

- (ComFasterxmlJacksonCoreIoInputDecorator *)getInputDecorator;

- (ComFasterxmlJacksonCoreIoOutputDecorator *)getOutputDecorator;

- (ComFasterxmlJacksonCoreBaseDecorableTSFactory *)setInputDecoratorWithComFasterxmlJacksonCoreIoInputDecorator:(ComFasterxmlJacksonCoreIoInputDecorator *)d;

- (ComFasterxmlJacksonCoreBaseDecorableTSFactory *)setOutputDecoratorWithComFasterxmlJacksonCoreIoOutputDecorator:(ComFasterxmlJacksonCoreIoOutputDecorator *)d;

#pragma mark Protected

- (instancetype __nonnull)init;

/*!
 @brief Copy constructor.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreBaseDecorableTSFactory:(ComFasterxmlJacksonCoreBaseDecorableTSFactory *)src;

/*!
 @brief Constructors used by builders for instantiation.
 @since 3.0
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder:(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *)baseBuilder;

- (id<JavaIoDataInput>)_decorateWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                   withJavaIoDataInput:(id<JavaIoDataInput>)inArg;

- (JavaIoInputStream *)_decorateWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                 withJavaIoInputStream:(JavaIoInputStream *)inArg;

- (JavaIoOutputStream *)_decorateWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                 withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (JavaIoReader *)_decorateWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                 withJavaIoReader:(JavaIoReader *)inArg;

- (JavaIoWriter *)_decorateWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                 withJavaIoWriter:(JavaIoWriter *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreBaseDecorableTSFactory)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseDecorableTSFactory, _inputDecorator_, ComFasterxmlJacksonCoreIoInputDecorator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseDecorableTSFactory, _outputDecorator_, ComFasterxmlJacksonCoreIoOutputDecorator *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseDecorableTSFactory_init(ComFasterxmlJacksonCoreBaseDecorableTSFactory *self);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseDecorableTSFactory_initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_(ComFasterxmlJacksonCoreBaseDecorableTSFactory *self, ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *baseBuilder);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseDecorableTSFactory_initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_(ComFasterxmlJacksonCoreBaseDecorableTSFactory *self, ComFasterxmlJacksonCoreBaseDecorableTSFactory *src);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreBaseDecorableTSFactory)

#endif

#if !defined (ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory || defined(INCLUDE_ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder))
#define ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_

#define RESTRICT_ComFasterxmlJacksonCoreTokenStreamFactory 1
#define INCLUDE_ComFasterxmlJacksonCoreTokenStreamFactory_TSFBuilder 1
#include "com/fasterxml/jackson/core/TokenStreamFactory.h"

@class ComFasterxmlJacksonCoreBaseDecorableTSFactory;
@class ComFasterxmlJacksonCoreIoInputDecorator;
@class ComFasterxmlJacksonCoreIoOutputDecorator;

/*!
 @brief Since factory instances are immutable, a Builder class is needed for creating
  configurations for differently configured factory instances.
 @since 3.0
 */
@interface ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder : ComFasterxmlJacksonCoreTokenStreamFactory_TSFBuilder {
 @public
  /*!
   @brief Optional helper object that may decorate input sources, to do
  additional processing on input during parsing.
   */
  ComFasterxmlJacksonCoreIoInputDecorator *_inputDecorator_;
  /*!
   @brief Optional helper object that may decorate output object, to do
  additional processing on output during content generation.
   */
  ComFasterxmlJacksonCoreIoOutputDecorator *_outputDecorator_;
}

#pragma mark Public

- (ComFasterxmlJacksonCoreIoInputDecorator *)inputDecorator;

- (ComFasterxmlJacksonCoreTokenStreamFactory_TSFBuilder *)inputDecoratorWithComFasterxmlJacksonCoreIoInputDecorator:(ComFasterxmlJacksonCoreIoInputDecorator *)dec;

- (ComFasterxmlJacksonCoreIoOutputDecorator *)outputDecorator;

- (ComFasterxmlJacksonCoreTokenStreamFactory_TSFBuilder *)outputDecoratorWithComFasterxmlJacksonCoreIoOutputDecorator:(ComFasterxmlJacksonCoreIoOutputDecorator *)dec;

#pragma mark Protected

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreBaseDecorableTSFactory:(ComFasterxmlJacksonCoreBaseDecorableTSFactory *)base;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder, _inputDecorator_, ComFasterxmlJacksonCoreIoInputDecorator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder, _outputDecorator_, ComFasterxmlJacksonCoreIoOutputDecorator *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_init(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *self);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *self, ComFasterxmlJacksonCoreBaseDecorableTSFactory *base);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseDecorableTSFactory")
