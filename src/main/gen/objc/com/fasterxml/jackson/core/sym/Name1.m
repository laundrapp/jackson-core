//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/sym/Name1.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/sym/Name.h"
#include "com/fasterxml/jackson/core/sym/Name1.h"

@interface ComFasterxmlJacksonCoreSymName1 () {
 @public
  jint q_;
}

@end

inline ComFasterxmlJacksonCoreSymName1 *ComFasterxmlJacksonCoreSymName1_get_EMPTY(void);
static ComFasterxmlJacksonCoreSymName1 *ComFasterxmlJacksonCoreSymName1_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreSymName1, EMPTY, ComFasterxmlJacksonCoreSymName1 *)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreSymName1)

@implementation ComFasterxmlJacksonCoreSymName1

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                   withInt:(jint)hash_
                                   withInt:(jint)quad {
  ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(self, name, hash_, quad);
  return self;
}

+ (ComFasterxmlJacksonCoreSymName1 *)getEmptyName {
  return ComFasterxmlJacksonCoreSymName1_getEmptyName();
}

- (jboolean)equalsWithInt:(jint)quad {
  return quad == q_;
}

- (jboolean)equalsWithInt:(jint)quad1
                  withInt:(jint)quad2 {
  return (quad1 == q_) && (quad2 == 0);
}

- (jboolean)equalsWithInt:(jint)q1
                  withInt:(jint)q2
                  withInt:(jint)q3 {
  return false;
}

- (jboolean)equalsWithIntArray:(IOSIntArray *)quads
                       withInt:(jint)qlen {
  return (qlen == 1 && IOSIntArray_Get(nil_chk(quads), 0) == q_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreSymName1;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withInt:withInt:);
  methods[1].selector = @selector(getEmptyName);
  methods[2].selector = @selector(equalsWithInt:);
  methods[3].selector = @selector(equalsWithInt:withInt:);
  methods[4].selector = @selector(equalsWithInt:withInt:withInt:);
  methods[5].selector = @selector(equalsWithIntArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY", "LComFasterxmlJacksonCoreSymName1;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "q_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;II", "equals", "I", "II", "III", "[II", &ComFasterxmlJacksonCoreSymName1_EMPTY };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreSymName1 = { "Name1", "com.fasterxml.jackson.core.sym", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreSymName1;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreSymName1 class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonCoreSymName1_EMPTY, new_ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(@"", 0, 0));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreSymName1)
  }
}

@end

void ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(ComFasterxmlJacksonCoreSymName1 *self, NSString *name, jint hash_, jint quad) {
  ComFasterxmlJacksonCoreSymName_initWithNSString_withInt_(self, name, hash_);
  self->q_ = quad;
}

ComFasterxmlJacksonCoreSymName1 *new_ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(NSString *name, jint hash_, jint quad) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreSymName1, initWithNSString_withInt_withInt_, name, hash_, quad)
}

ComFasterxmlJacksonCoreSymName1 *create_ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(NSString *name, jint hash_, jint quad) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreSymName1, initWithNSString_withInt_withInt_, name, hash_, quad)
}

ComFasterxmlJacksonCoreSymName1 *ComFasterxmlJacksonCoreSymName1_getEmptyName() {
  ComFasterxmlJacksonCoreSymName1_initialize();
  return ComFasterxmlJacksonCoreSymName1_EMPTY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreSymName1)
