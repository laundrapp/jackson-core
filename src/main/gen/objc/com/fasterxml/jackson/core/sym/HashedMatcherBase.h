//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/sym/HashedMatcherBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreSymHashedMatcherBase")
#ifdef RESTRICT_ComFasterxmlJacksonCoreSymHashedMatcherBase
#define INCLUDE_ALL_ComFasterxmlJacksonCoreSymHashedMatcherBase 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreSymHashedMatcherBase 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreSymHashedMatcherBase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreSymHashedMatcherBase_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreSymHashedMatcherBase || defined(INCLUDE_ComFasterxmlJacksonCoreSymHashedMatcherBase))
#define ComFasterxmlJacksonCoreSymHashedMatcherBase_

#define RESTRICT_ComFasterxmlJacksonCoreSymFieldNameMatcher 1
#define INCLUDE_ComFasterxmlJacksonCoreSymFieldNameMatcher 1
#include "com/fasterxml/jackson/core/sym/FieldNameMatcher.h"

@class IOSIntArray;
@class IOSObjectArray;

/*!
 @brief Intermediate base class for matchers that use hash-array based approach
  with Strings.
 */
@interface ComFasterxmlJacksonCoreSymHashedMatcherBase : ComFasterxmlJacksonCoreSymFieldNameMatcher {
 @public
  /*!
   @brief Mask used to get index from raw hash code, within hash area.
   */
  jint _mask_;
  IOSIntArray *_offsets_;
  IOSObjectArray *_names_;
}

#pragma mark Public

- (jint)matchNameWithNSString:(NSString *)toMatch;

- (jint)secondaryCount;

- (jint)spillCount;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreSymHashedMatcherBase:(ComFasterxmlJacksonCoreSymHashedMatcherBase *)base
                               withComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)fallback;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreSymHashedMatcherBase:(ComFasterxmlJacksonCoreSymHashedMatcherBase *)base
                                                            withNSStringArray:(IOSObjectArray *)nameLookup;

- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)names
                                   withIntArray:(IOSIntArray *)offsets
                                        withInt:(jint)mask
 withComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)backup
                              withNSStringArray:(IOSObjectArray *)nameLookup;

- (jint)_matchSpillWithNSString:(NSString *)toMatch;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreSymHashedMatcherBase)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreSymHashedMatcherBase, _offsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreSymHashedMatcherBase, _names_, IOSObjectArray *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreSymHashedMatcherBase_initWithNSStringArray_withIntArray_withInt_withComFasterxmlJacksonCoreSymFieldNameMatcher_withNSStringArray_(ComFasterxmlJacksonCoreSymHashedMatcherBase *self, IOSObjectArray *names, IOSIntArray *offsets, jint mask, ComFasterxmlJacksonCoreSymFieldNameMatcher *backup, IOSObjectArray *nameLookup);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreSymHashedMatcherBase_initWithComFasterxmlJacksonCoreSymHashedMatcherBase_withNSStringArray_(ComFasterxmlJacksonCoreSymHashedMatcherBase *self, ComFasterxmlJacksonCoreSymHashedMatcherBase *base, IOSObjectArray *nameLookup);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreSymHashedMatcherBase_initWithComFasterxmlJacksonCoreSymHashedMatcherBase_withComFasterxmlJacksonCoreSymFieldNameMatcher_(ComFasterxmlJacksonCoreSymHashedMatcherBase *self, ComFasterxmlJacksonCoreSymHashedMatcherBase *base, ComFasterxmlJacksonCoreSymFieldNameMatcher *fallback);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreSymHashedMatcherBase)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreSymHashedMatcherBase")
