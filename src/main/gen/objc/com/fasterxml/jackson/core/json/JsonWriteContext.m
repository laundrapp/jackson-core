//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerationException.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/TokenStreamContext.h"
#include "com/fasterxml/jackson/core/json/DupDetector.h"
#include "com/fasterxml/jackson/core/json/JsonWriteContext.h"

@interface ComFasterxmlJacksonCoreJsonJsonWriteContext ()

- (void)_checkDupWithComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dd
                                               withNSString:(NSString *)name;

@end

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonJsonWriteContext__checkDupWithComFasterxmlJacksonCoreJsonDupDetector_withNSString_(ComFasterxmlJacksonCoreJsonJsonWriteContext *self, ComFasterxmlJacksonCoreJsonDupDetector *dd, NSString *name);

@implementation ComFasterxmlJacksonCoreJsonJsonWriteContext

- (instancetype __nonnull)initWithInt:(jint)type
withComFasterxmlJacksonCoreJsonJsonWriteContext:(ComFasterxmlJacksonCoreJsonJsonWriteContext *)parent
withComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dups {
  ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(self, type, parent, dups);
  return self;
}

- (instancetype __nonnull)initWithInt:(jint)type
withComFasterxmlJacksonCoreJsonJsonWriteContext:(ComFasterxmlJacksonCoreJsonJsonWriteContext *)parent
withComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dups
                               withId:(id)currValue {
  ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(self, type, parent, dups, currValue);
  return self;
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)resetWithInt:(jint)type {
  _type_ = type;
  _index_ = -1;
  JreStrongAssign(&_currentName_, nil);
  _gotName_ = false;
  JreStrongAssign(&_currentValue_, nil);
  if (_dups_ != nil) {
    [_dups_ reset];
  }
  return self;
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)resetWithInt:(jint)type
                                                       withId:(id)currValue {
  _type_ = type;
  _index_ = -1;
  JreStrongAssign(&_currentName_, nil);
  _gotName_ = false;
  JreStrongAssign(&_currentValue_, currValue);
  if (_dups_ != nil) {
    [_dups_ reset];
  }
  return self;
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dups {
  JreStrongAssign(&_dups_, dups);
  return self;
}

- (id)getCurrentValue {
  return _currentValue_;
}

- (void)setCurrentValueWithId:(id)v {
  JreStrongAssign(&_currentValue_, v);
}

+ (ComFasterxmlJacksonCoreJsonJsonWriteContext *)createRootContextWithComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dd {
  return ComFasterxmlJacksonCoreJsonJsonWriteContext_createRootContextWithComFasterxmlJacksonCoreJsonDupDetector_(dd);
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)createChildArrayContext {
  ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt = _child_;
  if (ctxt == nil) {
    JreStrongAssign(&_child_, ctxt = create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ARRAY, self, (_dups_ == nil) ? nil : [((ComFasterxmlJacksonCoreJsonDupDetector *) nil_chk(_dups_)) child]));
    return ctxt;
  }
  return [ctxt resetWithInt:ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ARRAY];
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)createChildArrayContextWithId:(id)currValue {
  ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt = _child_;
  if (ctxt == nil) {
    JreStrongAssign(&_child_, ctxt = create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ARRAY, self, (_dups_ == nil) ? nil : [((ComFasterxmlJacksonCoreJsonDupDetector *) nil_chk(_dups_)) child], currValue));
    return ctxt;
  }
  return [ctxt resetWithInt:ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ARRAY withId:currValue];
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)createChildObjectContext {
  ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt = _child_;
  if (ctxt == nil) {
    JreStrongAssign(&_child_, ctxt = create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT, self, (_dups_ == nil) ? nil : [((ComFasterxmlJacksonCoreJsonDupDetector *) nil_chk(_dups_)) child]));
    return ctxt;
  }
  return [ctxt resetWithInt:ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT];
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)createChildObjectContextWithId:(id)currValue {
  ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt = _child_;
  if (ctxt == nil) {
    JreStrongAssign(&_child_, ctxt = create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT, self, (_dups_ == nil) ? nil : [((ComFasterxmlJacksonCoreJsonDupDetector *) nil_chk(_dups_)) child], currValue));
    return ctxt;
  }
  return [ctxt resetWithInt:ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT withId:currValue];
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)getParent {
  return _parent_;
}

- (NSString *)currentName {
  return _currentName_;
}

- (jboolean)hasCurrentName {
  return _currentName_ != nil;
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)clearAndGetParent {
  JreStrongAssign(&_currentValue_, nil);
  return _parent_;
}

- (ComFasterxmlJacksonCoreJsonDupDetector *)getDupDetector {
  return _dups_;
}

- (jint)writeFieldNameWithNSString:(NSString *)name {
  if ((_type_ != ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT) || _gotName_) {
    return ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_EXPECT_VALUE;
  }
  _gotName_ = true;
  JreStrongAssign(&_currentName_, name);
  if (_dups_ != nil) {
    ComFasterxmlJacksonCoreJsonJsonWriteContext__checkDupWithComFasterxmlJacksonCoreJsonDupDetector_withNSString_(self, _dups_, name);
  }
  return (_index_ < 0) ? ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AS_IS : ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COMMA;
}

- (void)_checkDupWithComFasterxmlJacksonCoreJsonDupDetector:(ComFasterxmlJacksonCoreJsonDupDetector *)dd
                                               withNSString:(NSString *)name {
  ComFasterxmlJacksonCoreJsonJsonWriteContext__checkDupWithComFasterxmlJacksonCoreJsonDupDetector_withNSString_(self, dd, name);
}

- (jint)writeValue {
  if (_type_ == ComFasterxmlJacksonCoreTokenStreamContext_TYPE_OBJECT) {
    if (!_gotName_) {
      return ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_EXPECT_NAME;
    }
    _gotName_ = false;
    ++_index_;
    return ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COLON;
  }
  if (_type_ == ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ARRAY) {
    jint ix = _index_;
    ++_index_;
    return (ix < 0) ? ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AS_IS : ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COMMA;
  }
  ++_index_;
  return (_index_ == 0) ? ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AS_IS : ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_SPACE;
}

- (void)dealloc {
  RELEASE_(_parent_);
  RELEASE_(_dups_);
  RELEASE_(_child_);
  RELEASE_(_currentName_);
  RELEASE_(_currentValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x4, 2, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x9, 9, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, 11, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonDupDetector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, 13, 14, -1, -1, -1 },
    { NULL, "V", 0x12, 15, 16, 14, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withComFasterxmlJacksonCoreJsonJsonWriteContext:withComFasterxmlJacksonCoreJsonDupDetector:);
  methods[1].selector = @selector(initWithInt:withComFasterxmlJacksonCoreJsonJsonWriteContext:withComFasterxmlJacksonCoreJsonDupDetector:withId:);
  methods[2].selector = @selector(resetWithInt:);
  methods[3].selector = @selector(resetWithInt:withId:);
  methods[4].selector = @selector(withDupDetectorWithComFasterxmlJacksonCoreJsonDupDetector:);
  methods[5].selector = @selector(getCurrentValue);
  methods[6].selector = @selector(setCurrentValueWithId:);
  methods[7].selector = @selector(createRootContextWithComFasterxmlJacksonCoreJsonDupDetector:);
  methods[8].selector = @selector(createChildArrayContext);
  methods[9].selector = @selector(createChildArrayContextWithId:);
  methods[10].selector = @selector(createChildObjectContext);
  methods[11].selector = @selector(createChildObjectContextWithId:);
  methods[12].selector = @selector(getParent);
  methods[13].selector = @selector(currentName);
  methods[14].selector = @selector(hasCurrentName);
  methods[15].selector = @selector(clearAndGetParent);
  methods[16].selector = @selector(getDupDetector);
  methods[17].selector = @selector(writeFieldNameWithNSString:);
  methods[18].selector = @selector(_checkDupWithComFasterxmlJacksonCoreJsonDupDetector:withNSString:);
  methods[19].selector = @selector(writeValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STATUS_OK_AS_IS", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AS_IS, 0x19, -1, -1, -1, -1 },
    { "STATUS_OK_AFTER_COMMA", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COMMA, 0x19, -1, -1, -1, -1 },
    { "STATUS_OK_AFTER_COLON", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COLON, 0x19, -1, -1, -1, -1 },
    { "STATUS_OK_AFTER_SPACE", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_SPACE, 0x19, -1, -1, -1, -1 },
    { "STATUS_EXPECT_VALUE", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_EXPECT_VALUE, 0x19, -1, -1, -1, -1 },
    { "STATUS_EXPECT_NAME", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_EXPECT_NAME, 0x19, -1, -1, -1, -1 },
    { "_parent_", "LComFasterxmlJacksonCoreJsonJsonWriteContext;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_dups_", "LComFasterxmlJacksonCoreJsonDupDetector;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_child_", "LComFasterxmlJacksonCoreJsonJsonWriteContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_currentName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_currentValue_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_gotName_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILComFasterxmlJacksonCoreJsonJsonWriteContext;LComFasterxmlJacksonCoreJsonDupDetector;", "ILComFasterxmlJacksonCoreJsonJsonWriteContext;LComFasterxmlJacksonCoreJsonDupDetector;LNSObject;", "reset", "I", "ILNSObject;", "withDupDetector", "LComFasterxmlJacksonCoreJsonDupDetector;", "setCurrentValue", "LNSObject;", "createRootContext", "createChildArrayContext", "createChildObjectContext", "writeFieldName", "LNSString;", "LComFasterxmlJacksonCoreJsonProcessingException;", "_checkDup", "LComFasterxmlJacksonCoreJsonDupDetector;LNSString;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonJsonWriteContext = { "JsonWriteContext", "com.fasterxml.jackson.core.json", ptrTable, methods, fields, 7, 0x1, 20, 12, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonJsonWriteContext;
}

@end

void ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(ComFasterxmlJacksonCoreJsonJsonWriteContext *self, jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups) {
  ComFasterxmlJacksonCoreTokenStreamContext_init(self);
  self->_type_ = type;
  JreStrongAssign(&self->_parent_, parent);
  JreStrongAssign(&self->_dups_, dups);
  self->_index_ = -1;
}

ComFasterxmlJacksonCoreJsonJsonWriteContext *new_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonJsonWriteContext, initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_, type, parent, dups)
}

ComFasterxmlJacksonCoreJsonJsonWriteContext *create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonJsonWriteContext, initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_, type, parent, dups)
}

void ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(ComFasterxmlJacksonCoreJsonJsonWriteContext *self, jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups, id currValue) {
  ComFasterxmlJacksonCoreTokenStreamContext_init(self);
  self->_type_ = type;
  JreStrongAssign(&self->_parent_, parent);
  JreStrongAssign(&self->_dups_, dups);
  self->_index_ = -1;
  JreStrongAssign(&self->_currentValue_, currValue);
}

ComFasterxmlJacksonCoreJsonJsonWriteContext *new_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups, id currValue) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonJsonWriteContext, initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_, type, parent, dups, currValue)
}

ComFasterxmlJacksonCoreJsonJsonWriteContext *create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_(jint type, ComFasterxmlJacksonCoreJsonJsonWriteContext *parent, ComFasterxmlJacksonCoreJsonDupDetector *dups, id currValue) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonJsonWriteContext, initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_withId_, type, parent, dups, currValue)
}

ComFasterxmlJacksonCoreJsonJsonWriteContext *ComFasterxmlJacksonCoreJsonJsonWriteContext_createRootContextWithComFasterxmlJacksonCoreJsonDupDetector_(ComFasterxmlJacksonCoreJsonDupDetector *dd) {
  ComFasterxmlJacksonCoreJsonJsonWriteContext_initialize();
  return create_ComFasterxmlJacksonCoreJsonJsonWriteContext_initWithInt_withComFasterxmlJacksonCoreJsonJsonWriteContext_withComFasterxmlJacksonCoreJsonDupDetector_(ComFasterxmlJacksonCoreTokenStreamContext_TYPE_ROOT, nil, dd);
}

void ComFasterxmlJacksonCoreJsonJsonWriteContext__checkDupWithComFasterxmlJacksonCoreJsonDupDetector_withNSString_(ComFasterxmlJacksonCoreJsonJsonWriteContext *self, ComFasterxmlJacksonCoreJsonDupDetector *dd, NSString *name) {
  if ([((ComFasterxmlJacksonCoreJsonDupDetector *) nil_chk(dd)) isDupWithNSString:name]) {
    id src = [dd getSource];
    @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(JreStrcat("$$C", @"Duplicate field '", name, '\''), (([src isKindOfClass:[ComFasterxmlJacksonCoreJsonGenerator class]]) ? ((ComFasterxmlJacksonCoreJsonGenerator *) cast_chk(src, [ComFasterxmlJacksonCoreJsonGenerator class])) : nil));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonJsonWriteContext)
