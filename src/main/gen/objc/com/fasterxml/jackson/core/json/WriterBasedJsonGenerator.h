//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator")
#ifdef RESTRICT_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator || defined(INCLUDE_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator))
#define ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_

#define RESTRICT_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl 1
#include "com/fasterxml/jackson/core/json/JsonGeneratorImpl.h"

@class ComFasterxmlJacksonCoreBase64Variant;
@class ComFasterxmlJacksonCoreIoIOContext;
@class ComFasterxmlJacksonCoreObjectCodec;
@class IOSByteArray;
@class IOSCharArray;
@class JavaIoInputStream;
@class JavaIoReader;
@class JavaIoWriter;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@protocol ComFasterxmlJacksonCoreSerializableString;

/*!
 @brief <code>JsonGenerator</code> that outputs JSON content using a <code>java.io.Writer</code>
  which handles character encoding.
 */
@interface ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator : ComFasterxmlJacksonCoreJsonJsonGeneratorImpl {
 @public
  JavaIoWriter *_writer_;
  /*!
   @brief Character used for quoting JSON Object property names
  and String values.
   @since 2.8
   */
  jchar _quoteChar_;
  /*!
   @brief Intermediate buffer in which contents are buffered before
  being written using <code>_writer</code>.
   */
  IOSCharArray *_outputBuffer_;
  /*!
   @brief Pointer to the first buffered character to output
   */
  jint _outputHead_;
  /*!
   @brief Pointer to the position right beyond the last character to output
  (end marker; may point to position right beyond the end of the buffer)
   */
  jint _outputTail_;
  /*!
   @brief End marker of the output buffer; one past the last valid position
  within the buffer.
   */
  jint _outputEnd_;
  /*!
   @brief Short (14 char) temporary buffer allocated if needed, for constructing
  escape sequences
   */
  IOSCharArray *_entityBuffer_;
  /*!
   @brief When custom escapes are used, this member variable is used
  internally to hold a reference to currently used escape
   */
  id<ComFasterxmlJacksonCoreSerializableString> _currentEscape_;
  /*!
   @brief Intermediate buffer in which characters of a String are copied
  before being encoded.
   @since 2.9
   */
  IOSCharArray *_charBuffer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                             withInt:(jint)features
                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec
                                                    withJavaIoWriter:(JavaIoWriter *)w;

- (jboolean)canWriteFormattedNumbers;

- (void)close;

- (void)flush;

- (jint)getOutputBuffered;

- (id)getOutputTarget;

- (void)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                              withByteArray:(IOSByteArray *)data
                                                    withInt:(jint)offset
                                                    withInt:(jint)len;

- (jint)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                      withJavaIoInputStream:(JavaIoInputStream *)data
                                                    withInt:(jint)dataLength;

- (void)writeBooleanWithBoolean:(jboolean)state;

- (void)writeEndArray;

- (void)writeEndObject;

- (void)writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name;

- (void)writeFieldNameWithNSString:(NSString *)name;

- (void)writeNull;

- (void)writeNumberWithJavaMathBigDecimal:(JavaMathBigDecimal *)value;

- (void)writeNumberWithJavaMathBigInteger:(JavaMathBigInteger *)value;

- (void)writeNumberWithDouble:(jdouble)d;

- (void)writeNumberWithFloat:(jfloat)f;

- (void)writeNumberWithInt:(jint)i;

- (void)writeNumberWithLong:(jlong)l;

- (void)writeNumberWithShort:(jshort)s;

- (void)writeNumberWithNSString:(NSString *)encodedValue;

- (void)writeRawWithChar:(jchar)c;

- (void)writeRawWithCharArray:(IOSCharArray *)text
                      withInt:(jint)offset
                      withInt:(jint)len;

- (void)writeRawWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text;

- (void)writeRawWithNSString:(NSString *)text;

- (void)writeRawWithNSString:(NSString *)text
                     withInt:(jint)start
                     withInt:(jint)len;

- (void)writeRawUTF8StringWithByteArray:(IOSByteArray *)text
                                withInt:(jint)offset
                                withInt:(jint)length;

- (void)writeStartArray;

- (void)writeStartObject;

- (void)writeStartObjectWithId:(id)forValue;

- (void)writeStringWithCharArray:(IOSCharArray *)text
                         withInt:(jint)offset
                         withInt:(jint)len;

- (void)writeStringWithJavaIoReader:(JavaIoReader *)reader
                            withInt:(jint)len;

- (void)writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)sstr;

- (void)writeStringWithNSString:(NSString *)text;

- (void)writeUTF8StringWithByteArray:(IOSByteArray *)text
                             withInt:(jint)offset
                             withInt:(jint)length;

#pragma mark Protected

- (void)_flushBuffer;

- (void)_releaseBuffers;

- (void)_verifyValueWriteWithNSString:(NSString *)typeMsg;

- (void)_writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                               withByteArray:(IOSByteArray *)input
                                                     withInt:(jint)inputPtr
                                                     withInt:(jint)inputEnd;

- (jint)_writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                       withJavaIoInputStream:(JavaIoInputStream *)data
                                               withByteArray:(IOSByteArray *)readBuffer;

- (jint)_writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                       withJavaIoInputStream:(JavaIoInputStream *)data
                                               withByteArray:(IOSByteArray *)readBuffer
                                                     withInt:(jint)bytesLeft;

- (void)_writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name
                                                         withBoolean:(jboolean)commaBefore;

- (void)_writeFieldNameWithNSString:(NSString *)name
                        withBoolean:(jboolean)commaBefore;

- (void)_writePPFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name
                                                           withBoolean:(jboolean)commaBefore;

/*!
 @brief Specialized version of <code>_writeFieldName</code>, off-lined
  to keep the "fast path" as simple (and hopefully fast) as possible.
 */
- (void)_writePPFieldNameWithNSString:(NSString *)name
                          withBoolean:(jboolean)commaBefore;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)arg0
                                                             withInt:(jint)arg1
                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, _writer_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, _outputBuffer_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, _entityBuffer_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, _currentEscape_, id<ComFasterxmlJacksonCoreSerializableString>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, _charBuffer_, IOSCharArray *)

inline jint ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_get_SHORT_WRITE(void);
#define ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_SHORT_WRITE 32
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, SHORT_WRITE, jint)

inline IOSCharArray *ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_get_HEX_CHARS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSCharArray *ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_HEX_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator, HEX_CHARS, IOSCharArray *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_initWithComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreObjectCodec_withJavaIoWriter_(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator *self, ComFasterxmlJacksonCoreIoIOContext *ctxt, jint features, ComFasterxmlJacksonCoreObjectCodec *codec, JavaIoWriter *w);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator *new_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_initWithComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreObjectCodec_withJavaIoWriter_(ComFasterxmlJacksonCoreIoIOContext *ctxt, jint features, ComFasterxmlJacksonCoreObjectCodec *codec, JavaIoWriter *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator *create_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator_initWithComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreObjectCodec_withJavaIoWriter_(ComFasterxmlJacksonCoreIoIOContext *ctxt, jint features, ComFasterxmlJacksonCoreObjectCodec *codec, JavaIoWriter *w);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonWriterBasedJsonGenerator")
