//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/format/InputAccessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor")
#ifdef RESTRICT_ComFasterxmlJacksonCoreFormatInputAccessor
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreFormatInputAccessor
#ifdef INCLUDE_ComFasterxmlJacksonCoreFormatInputAccessor_Std
#define INCLUDE_ComFasterxmlJacksonCoreFormatInputAccessor 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreFormatInputAccessor_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor || defined(INCLUDE_ComFasterxmlJacksonCoreFormatInputAccessor))
#define ComFasterxmlJacksonCoreFormatInputAccessor_

/*!
 @brief Interface used to expose beginning of a data file to data format
  detection code.
 */
@protocol ComFasterxmlJacksonCoreFormatInputAccessor < JavaObject >

/*!
 @brief Method to call to check if more input is available.
 Since this may result in more content to be read (at least
  one more byte), a <code>IOException</code> may get thrown.
 */
- (jboolean)hasMoreBytes;

/*!
 @brief Returns next byte available, if any; if no more bytes are
  available, will throw <code>java.io.EOFException</code>.
 */
- (jbyte)nextByte;

/*!
 @brief Method that can be called to reset accessor to read from beginning
  of input.
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreFormatInputAccessor)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreFormatInputAccessor)

#endif

#if !defined (ComFasterxmlJacksonCoreFormatInputAccessor_Std_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor || defined(INCLUDE_ComFasterxmlJacksonCoreFormatInputAccessor_Std))
#define ComFasterxmlJacksonCoreFormatInputAccessor_Std_

@class ComFasterxmlJacksonCoreFormatDataFormatMatcher;
@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonCoreJsonFactory;
@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief Basic implementation that reads data from given 
 <code>InputStream</code> and buffers it as necessary.
 */
@interface ComFasterxmlJacksonCoreFormatInputAccessor_Std : NSObject < ComFasterxmlJacksonCoreFormatInputAccessor > {
 @public
  JavaIoInputStream *_in_;
  IOSByteArray *_buffer_;
  jint _bufferedStart_;
  /*!
   @brief End of valid bytes in the buffer (points to one past last valid)
   */
  jint _bufferedEnd_;
  /*!
   @brief Pointer to next available buffered byte in <code>_buffer</code>.
   */
  jint _ptr_;
}

#pragma mark Public

/*!
 @brief Constructor used when the full input (or at least enough leading bytes
  of full input) is available.
 */
- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)inputDocument;

/*!
 @brief Constructor used when the full input (or at least enough leading bytes
  of full input) is available.
 @since 2.1
 */
- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)inputDocument
                                    withInt:(jint)start
                                    withInt:(jint)len;

/*!
 @brief Constructor used when content to check is available via
  input stream and must be read.
 */
- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withByteArray:(IOSByteArray *)buffer;

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)createMatcherWithComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)match
                                                         withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)matchStrength;

- (jboolean)hasMoreBytes;

- (jbyte)nextByte;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreFormatInputAccessor_Std)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatInputAccessor_Std, _in_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatInputAccessor_Std, _buffer_, IOSByteArray *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, JavaIoInputStream *inArg, IOSByteArray *buffer);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inArg, IOSByteArray *buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inArg, IOSByteArray *buffer);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, IOSByteArray *inputDocument);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(IOSByteArray *inputDocument) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(IOSByteArray *inputDocument);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, IOSByteArray *inputDocument, jint start, jint len);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(IOSByteArray *inputDocument, jint start, jint len) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(IOSByteArray *inputDocument, jint start, jint len);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreFormatInputAccessor_Std)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatInputAccessor")
