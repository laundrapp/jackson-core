//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonParseException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonParseException")
#ifdef RESTRICT_ComFasterxmlJacksonCoreJsonParseException
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonParseException 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonParseException 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreJsonParseException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreJsonParseException_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreJsonParseException || defined(INCLUDE_ComFasterxmlJacksonCoreJsonParseException))
#define ComFasterxmlJacksonCoreJsonParseException_

#define RESTRICT_ComFasterxmlJacksonCoreJsonProcessingException 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonProcessingException 1
#include "com/fasterxml/jackson/core/JsonProcessingException.h"

@class ComFasterxmlJacksonCoreJsonLocation;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonCoreUtilRequestPayload;
@class JavaLangThrowable;

/*!
 @brief Exception type for parsing problems, used when non-well-formed content
  (content that does not conform to JSON syntax as per specification)
  is encountered.
 */
@interface ComFasterxmlJacksonCoreJsonParseException : ComFasterxmlJacksonCoreJsonProcessingException {
 @public
  ComFasterxmlJacksonCoreJsonParser *_processor_;
  /*!
   @brief Optional payload that can be assigned to pass along for error reporting
  or handling purposes.Core streaming parser implementations DO NOT
  initialize this; it is up to using applications and frameworks to
  populate it.
   */
  ComFasterxmlJacksonCoreUtilRequestPayload *_requestPayload_;
}

#pragma mark Public

/*!
 @brief Constructor that uses current parsing location as location, and
  sets processor (accessible via <code>getProcessor()</code>) to
  specified parser.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                            withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                            withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc
                                              withJavaLangThrowable:(JavaLangThrowable *)root;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                                              withJavaLangThrowable:(JavaLangThrowable *)root;

/*!
 @brief Overriding the getMessage() to include the request body
 */
- (NSString *)getMessage;

- (ComFasterxmlJacksonCoreJsonParser *)getProcessor;

/*!
 @brief Method that may be called to find payload that was being parsed, if
  one was specified for parser that threw this Exception.
 @return request body, if payload was specified; `null` otherwise
 */
- (ComFasterxmlJacksonCoreUtilRequestPayload *)getRequestPayload;

/*!
 @brief The method returns the String representation of the request payload if
  one was specified for parser that threw this Exception.
 @return request body as String, if payload was specified; `null` otherwise
 */
- (NSString *)getRequestPayloadAsString;

/*!
 @brief Fluent method that may be used to assign originating <code>JsonParser</code>,
  to be accessed using <code>getProcessor()</code>.
 <p>
  NOTE: `this` instance is modified and no new instance is constructed.
 */
- (ComFasterxmlJacksonCoreJsonParseException *)withParserWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p;

/*!
 @brief Fluent method that may be used to assign payload to this exception,
  to let recipient access it for diagnostics purposes.
 <p>
  NOTE: `this` instance is modified and no new instance is constructed.
 */
- (ComFasterxmlJacksonCoreJsonParseException *)withRequestPayloadWithComFasterxmlJacksonCoreUtilRequestPayload:(ComFasterxmlJacksonCoreUtilRequestPayload *)p;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)arg1
                     withJavaLangThrowable:(JavaLangThrowable *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreJsonParseException)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonParseException, _processor_, ComFasterxmlJacksonCoreJsonParser *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonParseException, _requestPayload_, ComFasterxmlJacksonCoreUtilRequestPayload *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(ComFasterxmlJacksonCoreJsonParseException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *new_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParseException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, JavaLangThrowable *root);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *new_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, JavaLangThrowable *root) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, JavaLangThrowable *root);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonCoreJsonParseException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *new_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParseException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *root);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *new_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *root) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreJsonParseException *create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *root);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreJsonParseException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonParseException")
