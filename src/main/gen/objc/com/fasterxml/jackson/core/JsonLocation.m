//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonLocation.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/nio/charset/Charset.h"

@interface ComFasterxmlJacksonCoreJsonLocation ()

- (jint)_appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                            withNSString:(NSString *)content;

@end

inline jlong ComFasterxmlJacksonCoreJsonLocation_get_serialVersionUID(void);
#define ComFasterxmlJacksonCoreJsonLocation_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonLocation, serialVersionUID, jlong)

__attribute__((unused)) static jint ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(ComFasterxmlJacksonCoreJsonLocation *self, JavaLangStringBuilder *sb, NSString *content);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonLocation)

ComFasterxmlJacksonCoreJsonLocation *ComFasterxmlJacksonCoreJsonLocation_NA;

@implementation ComFasterxmlJacksonCoreJsonLocation

- (instancetype __nonnull)initWithId:(id)srcRef
                            withLong:(jlong)totalChars
                             withInt:(jint)lineNr
                             withInt:(jint)colNr {
  ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withInt_withInt_(self, srcRef, totalChars, lineNr, colNr);
  return self;
}

- (instancetype __nonnull)initWithId:(id)sourceRef
                            withLong:(jlong)totalBytes
                            withLong:(jlong)totalChars
                             withInt:(jint)lineNr
                             withInt:(jint)columnNr {
  ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(self, sourceRef, totalBytes, totalChars, lineNr, columnNr);
  return self;
}

- (id)getSourceRef {
  return _sourceRef_;
}

- (jint)getLineNr {
  return _lineNr_;
}

- (jint)getColumnNr {
  return _columnNr_;
}

- (jlong)getCharOffset {
  return _totalChars_;
}

- (jlong)getByteOffset {
  return _totalBytes_;
}

- (NSString *)sourceDescription {
  return [((JavaLangStringBuilder *) nil_chk([self _appendSourceDescWithJavaLangStringBuilder:create_JavaLangStringBuilder_initWithInt_(100)])) description];
}

- (NSUInteger)hash {
  jint hash_ = (_sourceRef_ == nil) ? 1 : ((jint) [nil_chk(_sourceRef_) hash]);
  hash_ ^= _lineNr_;
  hash_ += _columnNr_;
  hash_ ^= (jint) _totalChars_;
  hash_ += (jint) _totalBytes_;
  return hash_;
}

- (jboolean)isEqual:(id)other {
  if (other == self) return true;
  if (other == nil) return false;
  if (!([other isKindOfClass:[ComFasterxmlJacksonCoreJsonLocation class]])) return false;
  ComFasterxmlJacksonCoreJsonLocation *otherLoc = (ComFasterxmlJacksonCoreJsonLocation *) cast_chk(other, [ComFasterxmlJacksonCoreJsonLocation class]);
  if (_sourceRef_ == nil) {
    if (otherLoc->_sourceRef_ != nil) return false;
  }
  else if (![_sourceRef_ isEqual:otherLoc->_sourceRef_]) return false;
  return (_lineNr_ == otherLoc->_lineNr_) && (_columnNr_ == otherLoc->_columnNr_) && (_totalChars_ == otherLoc->_totalChars_) && ([self getByteOffset] == [otherLoc getByteOffset]);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(80);
  [sb appendWithNSString:@"[Source: "];
  [self _appendSourceDescWithJavaLangStringBuilder:sb];
  [sb appendWithNSString:@"; line: "];
  [sb appendWithInt:_lineNr_];
  [sb appendWithNSString:@", column: "];
  [sb appendWithInt:_columnNr_];
  [sb appendWithChar:']'];
  return [sb description];
}

- (JavaLangStringBuilder *)_appendSourceDescWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  id srcRef = _sourceRef_;
  if (srcRef == nil) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"UNKNOWN"];
    return sb;
  }
  IOSClass *srcType = ([srcRef isKindOfClass:[IOSClass class]]) ? ((IOSClass *) cast_chk(srcRef, [IOSClass class])) : [srcRef java_getClass];
  NSString *tn = [srcType getName];
  if ([((NSString *) nil_chk(tn)) java_hasPrefix:@"java."]) {
    tn = [srcType getSimpleName];
  }
  else if ([srcRef isKindOfClass:[IOSByteArray class]]) {
    tn = @"byte[]";
  }
  else if ([srcRef isKindOfClass:[IOSCharArray class]]) {
    tn = @"char[]";
  }
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'('])) appendWithNSString:tn])) appendWithChar:')'];
  jint len;
  NSString *charStr = @" chars";
  if ([JavaLangCharSequence_class_() isInstance:srcRef]) {
    id<JavaLangCharSequence> cs = (id<JavaLangCharSequence>) cast_check(srcRef, JavaLangCharSequence_class_());
    len = [cs java_length];
    len -= ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(self, sb, [((id<JavaLangCharSequence>) nil_chk([cs subSequenceFrom:0 to:JavaLangMath_minWithInt_withInt_(len, ComFasterxmlJacksonCoreJsonLocation_MAX_CONTENT_SNIPPET)])) description]);
  }
  else if ([srcRef isKindOfClass:[IOSCharArray class]]) {
    IOSCharArray *ch = (IOSCharArray *) cast_chk(srcRef, [IOSCharArray class]);
    len = ch->size_;
    len -= ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(self, sb, [NSString java_stringWithCharacters:ch offset:0 length:JavaLangMath_minWithInt_withInt_(len, ComFasterxmlJacksonCoreJsonLocation_MAX_CONTENT_SNIPPET)]);
  }
  else if ([srcRef isKindOfClass:[IOSByteArray class]]) {
    IOSByteArray *b = (IOSByteArray *) cast_chk(srcRef, [IOSByteArray class]);
    jint maxLen = JavaLangMath_minWithInt_withInt_(b->size_, ComFasterxmlJacksonCoreJsonLocation_MAX_CONTENT_SNIPPET);
    ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(self, sb, [NSString java_stringWithBytes:b offset:0 length:maxLen charset:JavaNioCharsetCharset_forNameWithNSString_(@"UTF-8")]);
    len = b->size_ - maxLen;
    charStr = @" bytes";
  }
  else {
    len = 0;
  }
  if (len > 0) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"[truncated "])) appendWithInt:len])) appendWithNSString:charStr])) appendWithChar:']'];
  }
  return sb;
}

- (jint)_appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                            withNSString:(NSString *)content {
  return ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(self, sb, content);
}

- (void)dealloc {
  RELEASE_(_sourceRef_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withLong:withInt:withInt:);
  methods[1].selector = @selector(initWithId:withLong:withLong:withInt:withInt:);
  methods[2].selector = @selector(getSourceRef);
  methods[3].selector = @selector(getLineNr);
  methods[4].selector = @selector(getColumnNr);
  methods[5].selector = @selector(getCharOffset);
  methods[6].selector = @selector(getByteOffset);
  methods[7].selector = @selector(sourceDescription);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(_appendSourceDescWithJavaLangStringBuilder:);
  methods[12].selector = @selector(_appendWithJavaLangStringBuilder:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonCoreJsonLocation_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "MAX_CONTENT_SNIPPET", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonLocation_MAX_CONTENT_SNIPPET, 0x19, -1, -1, -1, -1 },
    { "NA", "LComFasterxmlJacksonCoreJsonLocation;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "_totalBytes_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_totalChars_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_lineNr_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_columnNr_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_sourceRef_", "LNSObject;", .constantValue.asLong = 0, 0x90, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;JII", "LNSObject;JJII", "hashCode", "equals", "LNSObject;", "toString", "_appendSourceDesc", "LJavaLangStringBuilder;", "_append", "LJavaLangStringBuilder;LNSString;", &ComFasterxmlJacksonCoreJsonLocation_NA };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonLocation = { "JsonLocation", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x1, 13, 8, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonLocation;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonLocation class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonCoreJsonLocation_NA, new_ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(nil, -1LL, -1LL, -1, -1));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonLocation)
  }
}

@end

void ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withInt_withInt_(ComFasterxmlJacksonCoreJsonLocation *self, id srcRef, jlong totalChars, jint lineNr, jint colNr) {
  ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(self, srcRef, -1LL, totalChars, lineNr, colNr);
}

ComFasterxmlJacksonCoreJsonLocation *new_ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withInt_withInt_(id srcRef, jlong totalChars, jint lineNr, jint colNr) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonLocation, initWithId_withLong_withInt_withInt_, srcRef, totalChars, lineNr, colNr)
}

ComFasterxmlJacksonCoreJsonLocation *create_ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withInt_withInt_(id srcRef, jlong totalChars, jint lineNr, jint colNr) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonLocation, initWithId_withLong_withInt_withInt_, srcRef, totalChars, lineNr, colNr)
}

void ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(ComFasterxmlJacksonCoreJsonLocation *self, id sourceRef, jlong totalBytes, jlong totalChars, jint lineNr, jint columnNr) {
  NSObject_init(self);
  JreStrongAssign(&self->_sourceRef_, sourceRef);
  self->_totalBytes_ = totalBytes;
  self->_totalChars_ = totalChars;
  self->_lineNr_ = lineNr;
  self->_columnNr_ = columnNr;
}

ComFasterxmlJacksonCoreJsonLocation *new_ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(id sourceRef, jlong totalBytes, jlong totalChars, jint lineNr, jint columnNr) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonLocation, initWithId_withLong_withLong_withInt_withInt_, sourceRef, totalBytes, totalChars, lineNr, columnNr)
}

ComFasterxmlJacksonCoreJsonLocation *create_ComFasterxmlJacksonCoreJsonLocation_initWithId_withLong_withLong_withInt_withInt_(id sourceRef, jlong totalBytes, jlong totalChars, jint lineNr, jint columnNr) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonLocation, initWithId_withLong_withLong_withInt_withInt_, sourceRef, totalBytes, totalChars, lineNr, columnNr)
}

jint ComFasterxmlJacksonCoreJsonLocation__appendWithJavaLangStringBuilder_withNSString_(ComFasterxmlJacksonCoreJsonLocation *self, JavaLangStringBuilder *sb, NSString *content) {
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'"'])) appendWithNSString:content])) appendWithChar:'"'];
  return [((NSString *) nil_chk(content)) java_length];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonLocation)
