//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/SegmentedStringWriter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/io/SegmentedStringWriter.h"
#include "com/fasterxml/jackson/core/util/BufferRecycler.h"
#include "com/fasterxml/jackson/core/util/TextBuffer.h"
#include "java/io/Writer.h"
#include "java/lang/CharSequence.h"

@interface ComFasterxmlJacksonCoreIoSegmentedStringWriter () {
 @public
  ComFasterxmlJacksonCoreUtilTextBuffer *_buffer_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoSegmentedStringWriter, _buffer_, ComFasterxmlJacksonCoreUtilTextBuffer *)

@implementation ComFasterxmlJacksonCoreIoSegmentedStringWriter

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreUtilBufferRecycler:(ComFasterxmlJacksonCoreUtilBufferRecycler *)br {
  ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(self, br);
  return self;
}

- (JavaIoWriter *)appendWithChar:(jchar)c {
  [self writeWithInt:c];
  return self;
}

- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq {
  NSString *str = [((id<JavaLangCharSequence>) nil_chk(csq)) description];
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithNSString:str withInt:0 withInt:[((NSString *) nil_chk(str)) java_length]];
  return self;
}

- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                         withInt:(jint)start
                                         withInt:(jint)end {
  NSString *str = [((id<JavaLangCharSequence>) nil_chk([((id<JavaLangCharSequence>) nil_chk(csq)) subSequenceFrom:start to:end])) description];
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithNSString:str withInt:0 withInt:[((NSString *) nil_chk(str)) java_length]];
  return self;
}

- (void)close {
}

- (void)flush {
}

- (void)writeWithCharArray:(IOSCharArray *)cbuf {
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithCharArray:cbuf withInt:0 withInt:((IOSCharArray *) nil_chk(cbuf))->size_];
}

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len {
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithCharArray:cbuf withInt:off withInt:len];
}

- (void)writeWithInt:(jint)c {
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithChar:(jchar) c];
}

- (void)writeWithNSString:(NSString *)str {
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithNSString:str withInt:0 withInt:[((NSString *) nil_chk(str)) java_length]];
}

- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)off
                  withInt:(jint)len {
  [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) appendWithNSString:str withInt:off withInt:len];
}

- (NSString *)getAndClear {
  NSString *result = [((ComFasterxmlJacksonCoreUtilTextBuffer *) nil_chk(_buffer_)) contentsAsString];
  [_buffer_ releaseBuffers];
  return result;
}

- (void)dealloc {
  RELEASE_(_buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoWriter;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaIoWriter;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaIoWriter;", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreUtilBufferRecycler:);
  methods[1].selector = @selector(appendWithChar:);
  methods[2].selector = @selector(appendWithJavaLangCharSequence:);
  methods[3].selector = @selector(appendWithJavaLangCharSequence:withInt:withInt:);
  methods[4].selector = @selector(close);
  methods[5].selector = @selector(flush);
  methods[6].selector = @selector(writeWithCharArray:);
  methods[7].selector = @selector(writeWithCharArray:withInt:withInt:);
  methods[8].selector = @selector(writeWithInt:);
  methods[9].selector = @selector(writeWithNSString:);
  methods[10].selector = @selector(writeWithNSString:withInt:withInt:);
  methods[11].selector = @selector(getAndClear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_buffer_", "LComFasterxmlJacksonCoreUtilTextBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreUtilBufferRecycler;", "append", "C", "LJavaLangCharSequence;", "LJavaLangCharSequence;II", "write", "[C", "[CII", "I", "LNSString;", "LNSString;II" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreIoSegmentedStringWriter = { "SegmentedStringWriter", "com.fasterxml.jackson.core.io", ptrTable, methods, fields, 7, 0x11, 12, 1, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreIoSegmentedStringWriter;
}

@end

void ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreIoSegmentedStringWriter *self, ComFasterxmlJacksonCoreUtilBufferRecycler *br) {
  JavaIoWriter_init(self);
  JreStrongAssignAndConsume(&self->_buffer_, new_ComFasterxmlJacksonCoreUtilTextBuffer_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(br));
}

ComFasterxmlJacksonCoreIoSegmentedStringWriter *new_ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreUtilBufferRecycler *br) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreIoSegmentedStringWriter, initWithComFasterxmlJacksonCoreUtilBufferRecycler_, br)
}

ComFasterxmlJacksonCoreIoSegmentedStringWriter *create_ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreUtilBufferRecycler *br) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreIoSegmentedStringWriter, initWithComFasterxmlJacksonCoreUtilBufferRecycler_, br)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreIoSegmentedStringWriter)
