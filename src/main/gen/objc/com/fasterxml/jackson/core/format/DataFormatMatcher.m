//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/format/DataFormatMatcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonFactory.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/format/DataFormatMatcher.h"
#include "com/fasterxml/jackson/core/format/MatchStrength.h"
#include "com/fasterxml/jackson/core/io/MergedStream.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"

@implementation ComFasterxmlJacksonCoreFormatDataFormatMatcher

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withByteArray:(IOSByteArray *)buffered
                                            withInt:(jint)bufferedStart
                                            withInt:(jint)bufferedLength
             withComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)match
     withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)strength {
  ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(self, inArg, buffered, bufferedStart, bufferedLength, match, strength);
  return self;
}

- (jboolean)hasMatch {
  return _match_ != nil;
}

- (ComFasterxmlJacksonCoreFormatMatchStrength *)getMatchStrength {
  return (_matchStrength_ == nil) ? JreLoadEnum(ComFasterxmlJacksonCoreFormatMatchStrength, INCONCLUSIVE) : _matchStrength_;
}

- (ComFasterxmlJacksonCoreJsonFactory *)getMatch {
  return _match_;
}

- (NSString *)getMatchedFormatName {
  return [((ComFasterxmlJacksonCoreJsonFactory *) nil_chk(_match_)) getFormatName];
}

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithMatch {
  if (_match_ == nil) {
    return nil;
  }
  if (_originalStream_ == nil) {
    return [_match_ createParserWithByteArray:_bufferedData_ withInt:_bufferedStart_ withInt:_bufferedLength_];
  }
  return [_match_ createParserWithJavaIoInputStream:[self getDataStream]];
}

- (JavaIoInputStream *)getDataStream {
  if (_originalStream_ == nil) {
    return create_JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_(_bufferedData_, _bufferedStart_, _bufferedLength_);
  }
  return create_ComFasterxmlJacksonCoreIoMergedStream_initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_(nil, _originalStream_, _bufferedData_, _bufferedStart_, _bufferedLength_);
}

- (void)dealloc {
  RELEASE_(_originalStream_);
  RELEASE_(_bufferedData_);
  RELEASE_(_match_);
  RELEASE_(_matchStrength_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatMatchStrength;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:withByteArray:withInt:withInt:withComFasterxmlJacksonCoreJsonFactory:withComFasterxmlJacksonCoreFormatMatchStrength:);
  methods[1].selector = @selector(hasMatch);
  methods[2].selector = @selector(getMatchStrength);
  methods[3].selector = @selector(getMatch);
  methods[4].selector = @selector(getMatchedFormatName);
  methods[5].selector = @selector(createParserWithMatch);
  methods[6].selector = @selector(getDataStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_originalStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_bufferedData_", "[B", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_bufferedStart_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_bufferedLength_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_match_", "LComFasterxmlJacksonCoreJsonFactory;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_matchStrength_", "LComFasterxmlJacksonCoreFormatMatchStrength;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;[BIILComFasterxmlJacksonCoreJsonFactory;LComFasterxmlJacksonCoreFormatMatchStrength;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreFormatDataFormatMatcher = { "DataFormatMatcher", "com.fasterxml.jackson.core.format", ptrTable, methods, fields, 7, 0x1, 7, 6, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreFormatDataFormatMatcher;
}

@end

void ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(ComFasterxmlJacksonCoreFormatDataFormatMatcher *self, JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength) {
  NSObject_init(self);
  JreStrongAssign(&self->_originalStream_, inArg);
  JreStrongAssign(&self->_bufferedData_, buffered);
  self->_bufferedStart_ = bufferedStart;
  self->_bufferedLength_ = bufferedLength;
  JreStrongAssign(&self->_match_, match);
  JreStrongAssign(&self->_matchStrength_, strength);
  if ((bufferedStart | bufferedLength) < 0 || (bufferedStart + bufferedLength) > ((IOSByteArray *) nil_chk(buffered))->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Illegal start/length (%d/%d) wrt input array of %d bytes", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(bufferedStart), JavaLangInteger_valueOfWithInt_(bufferedLength), JavaLangInteger_valueOfWithInt_(((IOSByteArray *) nil_chk(buffered))->size_) } count:3 type:NSObject_class_()]));
  }
}

ComFasterxmlJacksonCoreFormatDataFormatMatcher *new_ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatDataFormatMatcher, initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_, inArg, buffered, bufferedStart, bufferedLength, match, strength)
}

ComFasterxmlJacksonCoreFormatDataFormatMatcher *create_ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatDataFormatMatcher, initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_, inArg, buffered, bufferedStart, bufferedLength, match, strength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreFormatDataFormatMatcher)
