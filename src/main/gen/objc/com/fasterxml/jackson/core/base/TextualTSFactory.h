//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/base/TextualTSFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseTextualTSFactory")
#ifdef RESTRICT_ComFasterxmlJacksonCoreBaseTextualTSFactory
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseTextualTSFactory 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreBaseTextualTSFactory 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreBaseTextualTSFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreBaseTextualTSFactory_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreBaseTextualTSFactory || defined(INCLUDE_ComFasterxmlJacksonCoreBaseTextualTSFactory))
#define ComFasterxmlJacksonCoreBaseTextualTSFactory_

#define RESTRICT_ComFasterxmlJacksonCoreBaseDecorableTSFactory 1
#define INCLUDE_ComFasterxmlJacksonCoreBaseDecorableTSFactory 1
#include "com/fasterxml/jackson/core/base/DecorableTSFactory.h"

@class ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder;
@class ComFasterxmlJacksonCoreIoIOContext;
@class ComFasterxmlJacksonCoreJsonEncoding;
@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser;
@class IOSByteArray;
@class IOSCharArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@class JavaNetURL;
@protocol ComFasterxmlJacksonCoreObjectReadContext;
@protocol ComFasterxmlJacksonCoreObjectWriteContext;
@protocol JavaIoDataInput;

/*!
 @brief Intermediate <code>TokenStreamFactory</code> sub-class used as the base for
  textual data formats.
 */
@interface ComFasterxmlJacksonCoreBaseTextualTSFactory : ComFasterxmlJacksonCoreBaseDecorableTSFactory

#pragma mark Public

- (jboolean)canHandleBinaryNatively;

/*!
 @brief Introspection method that can be used by base factory to check
  whether access using <code>char[]</code> is something that actual
  parser implementations can take advantage of, over having to
  use <code>java.io.Reader</code>.Sub-types are expected to override
  definition; default implementation (suitable for JSON) alleges
  that optimization are possible; and thereby is likely to try
  to access <code>java.lang.String</code> content by first copying it into
  recyclable intermediate buffer.
 */
- (jboolean)canUseCharArrays;

- (ComFasterxmlJacksonCoreJsonGenerator *)createGeneratorWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                                        withJavaIoFile:(JavaIoFile *)f
                                                               withComFasterxmlJacksonCoreJsonEncoding:(ComFasterxmlJacksonCoreJsonEncoding *)enc;

- (ComFasterxmlJacksonCoreJsonGenerator *)createGeneratorWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                                withJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                                               withComFasterxmlJacksonCoreJsonEncoding:(ComFasterxmlJacksonCoreJsonEncoding *)enc;

- (ComFasterxmlJacksonCoreJsonGenerator *)createGeneratorWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                                      withJavaIoWriter:(JavaIoWriter *)w;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                                  withByteArray:(IOSByteArray *)data
                                                                                        withInt:(jint)offset
                                                                                        withInt:(jint)len;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                                  withCharArray:(IOSCharArray *)content
                                                                                        withInt:(jint)offset
                                                                                        withInt:(jint)len;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                            withJavaIoDataInput:(id<JavaIoDataInput>)inArg;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                                 withJavaIoFile:(JavaIoFile *)f;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                          withJavaIoInputStream:(JavaIoInputStream *)inArg;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                               withJavaIoReader:(JavaIoReader *)r;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                                   withNSString:(NSString *)content;

- (ComFasterxmlJacksonCoreJsonParser *)createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                                                 withJavaNetURL:(JavaNetURL *)url;

#pragma mark Protected

- (instancetype __nonnull)init;

/*!
 @brief Constructors used by builders for instantiation.
 @since 3.0
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder:(ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *)baseBuilder;

/*!
 @brief Copy constructor.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreBaseTextualTSFactory:(ComFasterxmlJacksonCoreBaseTextualTSFactory *)src;

/*!
 @brief Overridable factory method that actually instantiates generator for
  given <code>Writer</code> and context object.
 <p>
  This method is specifically designed to remain
  compatible between minor versions so that sub-classes can count
  on it being called as expected. That is, it is part of official
  interface from sub-class perspective, although not a public
  method available to users of factory implementations.
 */
- (ComFasterxmlJacksonCoreJsonGenerator *)_createGeneratorWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                 withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                                                       withJavaIoWriter:(JavaIoWriter *)outArg;

- (ComFasterxmlJacksonCoreJsonParser *)_createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                          withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                                   withByteArray:(IOSByteArray *)data
                                                                                         withInt:(jint)offset
                                                                                         withInt:(jint)len;

- (ComFasterxmlJacksonCoreJsonParser *)_createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                          withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                                   withCharArray:(IOSCharArray *)data
                                                                                         withInt:(jint)offset
                                                                                         withInt:(jint)len
                                                                                     withBoolean:(jboolean)recyclable;

- (ComFasterxmlJacksonCoreJsonParser *)_createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                          withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                             withJavaIoDataInput:(id<JavaIoDataInput>)input;

- (ComFasterxmlJacksonCoreJsonParser *)_createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                          withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                           withJavaIoInputStream:(JavaIoInputStream *)inArg;

- (ComFasterxmlJacksonCoreJsonParser *)_createParserWithComFasterxmlJacksonCoreObjectReadContext:(id<ComFasterxmlJacksonCoreObjectReadContext>)readCtxt
                                                          withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                                withJavaIoReader:(JavaIoReader *)r;

/*!
 @brief Overridable factory method that actually instantiates generator for
  given <code>OutputStream</code> and context object, using UTF-8 encoding.
 <p>
  This method is specifically designed to remain
  compatible between minor versions so that sub-classes can count
  on it being called as expected. That is, it is part of official
  interface from sub-class perspective, although not a public
  method available to users of factory implementations.
 */
- (ComFasterxmlJacksonCoreJsonGenerator *)_createUTF8GeneratorWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                                                     withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                                                                     withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (JavaIoWriter *)_createWriterWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ioCtxt
                                               withJavaIoOutputStream:(JavaIoOutputStream *)outArg
                              withComFasterxmlJacksonCoreJsonEncoding:(ComFasterxmlJacksonCoreJsonEncoding *)enc;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreBaseTextualTSFactory)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseTextualTSFactory_init(ComFasterxmlJacksonCoreBaseTextualTSFactory *self);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseTextualTSFactory_initWithComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder_(ComFasterxmlJacksonCoreBaseTextualTSFactory *self, ComFasterxmlJacksonCoreBaseDecorableTSFactory_DecorableTSFBuilder *baseBuilder);

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreBaseTextualTSFactory_initWithComFasterxmlJacksonCoreBaseTextualTSFactory_(ComFasterxmlJacksonCoreBaseTextualTSFactory *self, ComFasterxmlJacksonCoreBaseTextualTSFactory *src);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreBaseTextualTSFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreBaseTextualTSFactory")
