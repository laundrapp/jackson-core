//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/json/DupDetector.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/json/DupDetector.h"
#include "java/util/HashSet.h"

@interface ComFasterxmlJacksonCoreJsonDupDetector ()

- (instancetype __nonnull)initWithId:(id)src;

@end

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(ComFasterxmlJacksonCoreJsonDupDetector *self, id src);

__attribute__((unused)) static ComFasterxmlJacksonCoreJsonDupDetector *new_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(id src) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonCoreJsonDupDetector *create_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(id src);

@implementation ComFasterxmlJacksonCoreJsonDupDetector

- (instancetype __nonnull)initWithId:(id)src {
  ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(self, src);
  return self;
}

+ (ComFasterxmlJacksonCoreJsonDupDetector *)rootDetectorWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  return ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonParser_(p);
}

+ (ComFasterxmlJacksonCoreJsonDupDetector *)rootDetectorWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g {
  return ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonGenerator_(g);
}

- (ComFasterxmlJacksonCoreJsonDupDetector *)child {
  return create_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(_source_);
}

- (void)reset {
  JreStrongAssign(&_firstName_, nil);
  JreStrongAssign(&_secondName_, nil);
  JreStrongAssign(&_seen_, nil);
}

- (ComFasterxmlJacksonCoreJsonLocation *)findLocation {
  if ([_source_ isKindOfClass:[ComFasterxmlJacksonCoreJsonParser class]]) {
    return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(((ComFasterxmlJacksonCoreJsonParser *) cast_chk(_source_, [ComFasterxmlJacksonCoreJsonParser class])))) getCurrentLocation];
  }
  return nil;
}

- (id)getSource {
  return _source_;
}

- (jboolean)isDupWithNSString:(NSString *)name {
  if (_firstName_ == nil) {
    JreStrongAssign(&_firstName_, name);
    return false;
  }
  if ([((NSString *) nil_chk(name)) isEqual:_firstName_]) {
    return true;
  }
  if (_secondName_ == nil) {
    JreStrongAssign(&_secondName_, name);
    return false;
  }
  if ([name isEqual:_secondName_]) {
    return true;
  }
  if (_seen_ == nil) {
    JreStrongAssignAndConsume(&_seen_, new_JavaUtilHashSet_initWithInt_(16));
    [_seen_ addWithId:_firstName_];
    [((JavaUtilHashSet *) nil_chk(_seen_)) addWithId:_secondName_];
  }
  return ![((JavaUtilHashSet *) nil_chk(_seen_)) addWithId:name];
}

- (void)dealloc {
  RELEASE_(_source_);
  RELEASE_(_firstName_);
  RELEASE_(_secondName_);
  RELEASE_(_seen_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonDupDetector;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonDupDetector;", 0x9, 1, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonDupDetector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(rootDetectorWithComFasterxmlJacksonCoreJsonParser:);
  methods[2].selector = @selector(rootDetectorWithComFasterxmlJacksonCoreJsonGenerator:);
  methods[3].selector = @selector(child);
  methods[4].selector = @selector(reset);
  methods[5].selector = @selector(findLocation);
  methods[6].selector = @selector(getSource);
  methods[7].selector = @selector(isDupWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_source_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_firstName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_secondName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_seen_", "LJavaUtilHashSet;", .constantValue.asLong = 0, 0x4, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "rootDetector", "LComFasterxmlJacksonCoreJsonParser;", "LComFasterxmlJacksonCoreJsonGenerator;", "isDup", "LNSString;", "LComFasterxmlJacksonCoreJsonParseException;", "Ljava/util/HashSet<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonDupDetector = { "DupDetector", "com.fasterxml.jackson.core.json", ptrTable, methods, fields, 7, 0x1, 8, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonDupDetector;
}

@end

void ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(ComFasterxmlJacksonCoreJsonDupDetector *self, id src) {
  NSObject_init(self);
  JreStrongAssign(&self->_source_, src);
}

ComFasterxmlJacksonCoreJsonDupDetector *new_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(id src) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreJsonDupDetector, initWithId_, src)
}

ComFasterxmlJacksonCoreJsonDupDetector *create_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(id src) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreJsonDupDetector, initWithId_, src)
}

ComFasterxmlJacksonCoreJsonDupDetector *ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *p) {
  ComFasterxmlJacksonCoreJsonDupDetector_initialize();
  return create_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(p);
}

ComFasterxmlJacksonCoreJsonDupDetector *ComFasterxmlJacksonCoreJsonDupDetector_rootDetectorWithComFasterxmlJacksonCoreJsonGenerator_(ComFasterxmlJacksonCoreJsonGenerator *g) {
  ComFasterxmlJacksonCoreJsonDupDetector_initialize();
  return create_ComFasterxmlJacksonCoreJsonDupDetector_initWithId_(g);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonDupDetector)
