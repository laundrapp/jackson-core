//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonTokenId.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonTokenId")
#ifdef RESTRICT_ComFasterxmlJacksonCoreJsonTokenId
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonTokenId 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonTokenId 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreJsonTokenId

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreJsonTokenId_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreJsonTokenId || defined(INCLUDE_ComFasterxmlJacksonCoreJsonTokenId))
#define ComFasterxmlJacksonCoreJsonTokenId_

/*!
 @brief Interface defined to contain ids accessible with <code>JsonToken.id()</code>.
 Needed because it is impossible to define these constants in 
 <code>JsonToken</code> itself, as static constants (oddity of how Enums
  are implemented by JVM).
 */
@protocol ComFasterxmlJacksonCoreJsonTokenId < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreJsonTokenId)

/*!
 @brief Id used to represent <code>JsonToken.NOT_AVAILABLE</code>, used in
  cases where a token may become available when more input
  is available: this occurs in non-blocking use cases.
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_NOT_AVAILABLE(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_NOT_AVAILABLE -1
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_NOT_AVAILABLE, jint)

/*!
 @brief Id used to represent the case where no <code>JsonToken</code>
  is available: either because <code>JsonParser</code> has not been
  advanced to first token, or because no more tokens will be
  available (end-of-input or explicit closing of parser}.
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_NO_TOKEN(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_NO_TOKEN 0
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_NO_TOKEN, jint)

/*!
 @brief Id used to represent <code>JsonToken.START_OBJECT</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_START_OBJECT(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT 1
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_START_OBJECT, jint)

/*!
 @brief Id used to represent <code>JsonToken.END_OBJECT</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_END_OBJECT(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_END_OBJECT 2
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_END_OBJECT, jint)

/*!
 @brief Id used to represent <code>JsonToken.START_ARRAY</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_START_ARRAY(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY 3
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_START_ARRAY, jint)

/*!
 @brief Id used to represent <code>JsonToken.END_ARRAY</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_END_ARRAY(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_END_ARRAY 4
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_END_ARRAY, jint)

/*!
 @brief Id used to represent <code>JsonToken.FIELD_NAME</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_FIELD_NAME(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME 5
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_FIELD_NAME, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_STRING</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_STRING(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_STRING 6
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_STRING, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_NUMBER_INT</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_NUMBER_INT(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_NUMBER_INT 7
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_NUMBER_INT, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_NUMBER_FLOAT</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_NUMBER_FLOAT(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_NUMBER_FLOAT 8
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_NUMBER_FLOAT, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_TRUE</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_TRUE(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_TRUE 9
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_TRUE, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_FALSE</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_FALSE(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_FALSE 10
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_FALSE, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_NULL</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_NULL(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_NULL 11
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_NULL, jint)

/*!
 @brief Id used to represent <code>JsonToken.VALUE_EMBEDDED_OBJECT</code>
 */
inline jint ComFasterxmlJacksonCoreJsonTokenId_get_ID_EMBEDDED_OBJECT(void);
#define ComFasterxmlJacksonCoreJsonTokenId_ID_EMBEDDED_OBJECT 12
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonTokenId, ID_EMBEDDED_OBJECT, jint)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreJsonTokenId)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonTokenId")
