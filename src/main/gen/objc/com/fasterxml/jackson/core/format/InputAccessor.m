//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/format/InputAccessor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonFactory.h"
#include "com/fasterxml/jackson/core/format/DataFormatMatcher.h"
#include "com/fasterxml/jackson/core/format/InputAccessor.h"
#include "com/fasterxml/jackson/core/format/MatchStrength.h"
#include "java/io/EOFException.h"
#include "java/io/InputStream.h"

@interface ComFasterxmlJacksonCoreFormatInputAccessor : NSObject

@end

@implementation ComFasterxmlJacksonCoreFormatInputAccessor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(hasMoreBytes);
  methods[1].selector = @selector(nextByte);
  methods[2].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", "LComFasterxmlJacksonCoreFormatInputAccessor_Std;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreFormatInputAccessor = { "InputAccessor", "com.fasterxml.jackson.core.format", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, 1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreFormatInputAccessor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreFormatInputAccessor)

@implementation ComFasterxmlJacksonCoreFormatInputAccessor_Std

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withByteArray:(IOSByteArray *)buffer {
  ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(self, inArg, buffer);
  return self;
}

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)inputDocument {
  ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(self, inputDocument);
  return self;
}

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)inputDocument
                                    withInt:(jint)start
                                    withInt:(jint)len {
  ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(self, inputDocument, start, len);
  return self;
}

- (jboolean)hasMoreBytes {
  if (_ptr_ < _bufferedEnd_) {
    return true;
  }
  if (_in_ == nil) {
    return false;
  }
  jint amount = ((IOSByteArray *) nil_chk(_buffer_))->size_ - _ptr_;
  if (amount < 1) {
    return false;
  }
  jint count = [_in_ readWithByteArray:_buffer_ withInt:_ptr_ withInt:amount];
  if (count <= 0) {
    return false;
  }
  _bufferedEnd_ += count;
  return true;
}

- (jbyte)nextByte {
  if (_ptr_ >= _bufferedEnd_) {
    if (![self hasMoreBytes]) {
      @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$I$IC", @"Failed auto-detect: could not read more than ", _ptr_, @" bytes (max buffer size: ", ((IOSByteArray *) nil_chk(_buffer_))->size_, ')'));
    }
  }
  return IOSByteArray_Get(nil_chk(_buffer_), _ptr_++);
}

- (void)reset {
  _ptr_ = _bufferedStart_;
}

- (ComFasterxmlJacksonCoreFormatDataFormatMatcher *)createMatcherWithComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)match
                                                         withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)matchStrength {
  return create_ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(_in_, _buffer_, _bufferedStart_, (_bufferedEnd_ - _bufferedStart_), match, matchStrength);
}

- (void)dealloc {
  RELEASE_(_in_);
  RELEASE_(_buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatDataFormatMatcher;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:withByteArray:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(hasMoreBytes);
  methods[4].selector = @selector(nextByte);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(createMatcherWithComFasterxmlJacksonCoreJsonFactory:withComFasterxmlJacksonCoreFormatMatchStrength:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_buffer_", "[B", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_bufferedStart_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_bufferedEnd_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_ptr_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;[B", "[B", "[BII", "LJavaIoIOException;", "createMatcher", "LComFasterxmlJacksonCoreJsonFactory;LComFasterxmlJacksonCoreFormatMatchStrength;", "LComFasterxmlJacksonCoreFormatInputAccessor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreFormatInputAccessor_Std = { "Std", "com.fasterxml.jackson.core.format", ptrTable, methods, fields, 7, 0x9, 7, 5, 6, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreFormatInputAccessor_Std;
}

@end

void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, JavaIoInputStream *inArg, IOSByteArray *buffer) {
  NSObject_init(self);
  JreStrongAssign(&self->_in_, inArg);
  JreStrongAssign(&self->_buffer_, buffer);
  self->_bufferedStart_ = 0;
  self->_ptr_ = 0;
  self->_bufferedEnd_ = 0;
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inArg, IOSByteArray *buffer) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithJavaIoInputStream_withByteArray_, inArg, buffer)
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inArg, IOSByteArray *buffer) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithJavaIoInputStream_withByteArray_, inArg, buffer)
}

void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, IOSByteArray *inputDocument) {
  NSObject_init(self);
  JreStrongAssign(&self->_in_, nil);
  JreStrongAssign(&self->_buffer_, inputDocument);
  self->_bufferedStart_ = 0;
  self->_bufferedEnd_ = ((IOSByteArray *) nil_chk(inputDocument))->size_;
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(IOSByteArray *inputDocument) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithByteArray_, inputDocument)
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_(IOSByteArray *inputDocument) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithByteArray_, inputDocument)
}

void ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(ComFasterxmlJacksonCoreFormatInputAccessor_Std *self, IOSByteArray *inputDocument, jint start, jint len) {
  NSObject_init(self);
  JreStrongAssign(&self->_in_, nil);
  JreStrongAssign(&self->_buffer_, inputDocument);
  self->_ptr_ = start;
  self->_bufferedStart_ = start;
  self->_bufferedEnd_ = start + len;
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *new_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(IOSByteArray *inputDocument, jint start, jint len) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithByteArray_withInt_withInt_, inputDocument, start, len)
}

ComFasterxmlJacksonCoreFormatInputAccessor_Std *create_ComFasterxmlJacksonCoreFormatInputAccessor_Std_initWithByteArray_withInt_withInt_(IOSByteArray *inputDocument, jint start, jint len) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFormatInputAccessor_Std, initWithByteArray_withInt_withInt_, inputDocument, start, len)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreFormatInputAccessor_Std)
