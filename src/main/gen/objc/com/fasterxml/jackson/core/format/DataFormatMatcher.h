//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/format/DataFormatMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatDataFormatMatcher")
#ifdef RESTRICT_ComFasterxmlJacksonCoreFormatDataFormatMatcher
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatDataFormatMatcher 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreFormatDataFormatMatcher 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreFormatDataFormatMatcher

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreFormatDataFormatMatcher_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreFormatDataFormatMatcher || defined(INCLUDE_ComFasterxmlJacksonCoreFormatDataFormatMatcher))
#define ComFasterxmlJacksonCoreFormatDataFormatMatcher_

@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonCoreJsonFactory;
@class ComFasterxmlJacksonCoreJsonParser;
@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief Result object constructed by <code>DataFormatDetector</code> when requested
  to detect format of given input data.
 */
@interface ComFasterxmlJacksonCoreFormatDataFormatMatcher : NSObject {
 @public
  JavaIoInputStream *_originalStream_;
  /*!
   @brief Content read during format matching process
   */
  IOSByteArray *_bufferedData_;
  /*!
   @brief Pointer to the first byte in buffer available for reading
   */
  jint _bufferedStart_;
  /*!
   @brief Number of bytes available in buffer.
   */
  jint _bufferedLength_;
  /*!
   @brief Factory that produced sufficient match (if any)
   */
  ComFasterxmlJacksonCoreJsonFactory *_match_;
  /*!
   @brief Strength of match with <code>_match</code>
   */
  ComFasterxmlJacksonCoreFormatMatchStrength *_matchStrength_;
}

#pragma mark Public

/*!
 @brief Convenience method for trying to construct a <code>JsonParser</code> for
  parsing content which is assumed to be in detected data format.
 If no match was found, returns null.
 */
- (ComFasterxmlJacksonCoreJsonParser *)createParserWithMatch;

/*!
 @brief Method to use for accessing input for which format detection has been done.
 This <b>must</b> be used instead of using stream passed to detector
  unless given stream itself can do buffering.
  Stream will return all content that was read during matching process, as well
  as remaining contents of the underlying stream.
 */
- (JavaIoInputStream *)getDataStream;

/*!
 @brief Accessor for <code>JsonFactory</code> that represents format that data matched.
 */
- (ComFasterxmlJacksonCoreJsonFactory *)getMatch;

/*!
 @brief Accessor for getting brief textual name of matched format if any (null
  if none).Equivalent to:
 @code

    return hasMatch() ?
 getMatch().getFormatName() : null;
 
@endcode
 */
- (NSString *)getMatchedFormatName;

/*!
 @brief Method for accessing strength of the match, if any; if no match,
  will return <code>MatchStrength.INCONCLUSIVE</code>.
 */
- (ComFasterxmlJacksonCoreFormatMatchStrength *)getMatchStrength;

/*!
 @brief Accessor to use to see if any formats matched well enough with
  the input data.
 */
- (jboolean)hasMatch;

#pragma mark Protected

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withByteArray:(IOSByteArray *)buffered
                                            withInt:(jint)bufferedStart
                                            withInt:(jint)bufferedLength
             withComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)match
     withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)strength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreFormatDataFormatMatcher)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatDataFormatMatcher, _originalStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatDataFormatMatcher, _bufferedData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatDataFormatMatcher, _match_, ComFasterxmlJacksonCoreJsonFactory *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreFormatDataFormatMatcher, _matchStrength_, ComFasterxmlJacksonCoreFormatMatchStrength *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(ComFasterxmlJacksonCoreFormatDataFormatMatcher *self, JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatDataFormatMatcher *new_ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreFormatDataFormatMatcher *create_ComFasterxmlJacksonCoreFormatDataFormatMatcher_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonCoreJsonFactory *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreFormatDataFormatMatcher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreFormatDataFormatMatcher")
