//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParseException.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonStreamContext.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/JsonTokenId.h"
#include "com/fasterxml/jackson/core/filter/FilteringParserDelegate.h"
#include "com/fasterxml/jackson/core/filter/TokenFilter.h"
#include "com/fasterxml/jackson/core/filter/TokenFilterContext.h"
#include "com/fasterxml/jackson/core/util/JsonParserDelegate.h"
#include "java/io/OutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"

@interface ComFasterxmlJacksonCoreFilterFilteringParserDelegate ()

- (ComFasterxmlJacksonCoreJsonToken *)_nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext:(ComFasterxmlJacksonCoreFilterTokenFilterContext *)buffRoot;

- (jboolean)_verifyAllowedMatches;

@end

__attribute__((unused)) static ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextToken2(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self);

__attribute__((unused)) static ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self, ComFasterxmlJacksonCoreFilterTokenFilterContext *buffRoot);

__attribute__((unused)) static ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self, ComFasterxmlJacksonCoreFilterTokenFilterContext *buffRoot);

__attribute__((unused)) static jboolean ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__Annotations$0(void);

@implementation ComFasterxmlJacksonCoreFilterFilteringParserDelegate

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                       withComFasterxmlJacksonCoreFilterTokenFilter:(ComFasterxmlJacksonCoreFilterTokenFilter *)f
                                                        withBoolean:(jboolean)includePath
                                                        withBoolean:(jboolean)allowMultipleMatches {
  ComFasterxmlJacksonCoreFilterFilteringParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_(self, p, f, includePath, allowMultipleMatches);
  return self;
}

- (ComFasterxmlJacksonCoreFilterTokenFilter *)getFilter {
  return rootFilter_;
}

- (jint)getMatchCount {
  return _matchCount_;
}

- (ComFasterxmlJacksonCoreJsonToken *)getCurrentToken {
  return _currToken_;
}

- (ComFasterxmlJacksonCoreJsonToken *)currentToken {
  return _currToken_;
}

- (jint)getCurrentTokenId {
  ComFasterxmlJacksonCoreJsonToken *t = _currToken_;
  return (t == nil) ? ComFasterxmlJacksonCoreJsonTokenId_ID_NO_TOKEN : [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(t)) id__];
}

- (jint)currentTokenId {
  ComFasterxmlJacksonCoreJsonToken *t = _currToken_;
  return (t == nil) ? ComFasterxmlJacksonCoreJsonTokenId_ID_NO_TOKEN : [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(t)) id__];
}

- (jboolean)hasCurrentToken {
  return _currToken_ != nil;
}

- (jboolean)hasTokenIdWithInt:(jint)id_ {
  ComFasterxmlJacksonCoreJsonToken *t = _currToken_;
  if (t == nil) {
    return ComFasterxmlJacksonCoreJsonTokenId_ID_NO_TOKEN == id_;
  }
  return [t id__] == id_;
}

- (jboolean)hasTokenWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)t {
  return _currToken_ == t;
}

- (jboolean)isExpectedStartArrayToken {
  return _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY);
}

- (jboolean)isExpectedStartObjectToken {
  return _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT);
}

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentLocation];
}

- (ComFasterxmlJacksonCoreJsonStreamContext *)getParsingContext {
  return [self _filterContext];
}

- (NSString *)getCurrentName {
  ComFasterxmlJacksonCoreJsonStreamContext *ctxt = [self _filterContext];
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT) || _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    ComFasterxmlJacksonCoreJsonStreamContext *parent = [((ComFasterxmlJacksonCoreJsonStreamContext *) nil_chk(ctxt)) getParent];
    return (parent == nil) ? nil : [((ComFasterxmlJacksonCoreJsonStreamContext *) nil_chk(parent)) getCurrentName];
  }
  return [((ComFasterxmlJacksonCoreJsonStreamContext *) nil_chk(ctxt)) getCurrentName];
}

- (void)clearCurrentToken {
  if (_currToken_ != nil) {
    JreStrongAssign(&_lastClearedToken_, _currToken_);
    JreStrongAssign(&_currToken_, nil);
  }
}

- (ComFasterxmlJacksonCoreJsonToken *)getLastClearedToken {
  return _lastClearedToken_;
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Can not currently override name during filtering read");
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  if (!_allowMultipleMatches_ && (_currToken_ != nil) && (_exposedContext_ == nil)) {
    if ([((ComFasterxmlJacksonCoreJsonToken *) nil_chk(_currToken_)) isScalarValue] && ![((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) isStartHandled] && !_includePath_ && (_itemFilter_ == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL))) {
      return (JreStrongAssign(&_currToken_, nil));
    }
  }
  ComFasterxmlJacksonCoreFilterTokenFilterContext *ctxt = _exposedContext_;
  if (ctxt != nil) {
    while (true) {
      ComFasterxmlJacksonCoreJsonToken *t = [ctxt nextTokenToRead];
      if (t != nil) {
        JreStrongAssign(&_currToken_, t);
        return t;
      }
      if (ctxt == _headContext_) {
        JreStrongAssign(&_exposedContext_, nil);
        if ([ctxt inArray]) {
          t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentToken];
          JreStrongAssign(&_currToken_, t);
          return t;
        }
        break;
      }
      ctxt = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) findChildOfWithComFasterxmlJacksonCoreFilterTokenFilterContext:ctxt];
      JreStrongAssign(&_exposedContext_, ctxt);
      if (ctxt == nil) {
        @throw nil_chk([self _constructErrorWithNSString:@"Unexpected problem: chain of filtered context broken"]);
      }
    }
  }
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextToken];
  if (t == nil) {
    JreStrongAssign(&_currToken_, t);
    return t;
  }
  ComFasterxmlJacksonCoreFilterTokenFilter *f;
  switch ([t id__]) {
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY:
    f = _itemFilter_;
    if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
      return (JreStrongAssign(&_currToken_, t));
    }
    if (f == nil) {
      [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
      break;
    }
    f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
    if (f == nil) {
      [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
      break;
    }
    if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      f = [f filterStartArray];
    }
    JreStrongAssign(&_itemFilter_, f);
    if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
      return (JreStrongAssign(&_currToken_, t));
    }
    JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
    if (_includePath_) {
      t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, _headContext_);
      if (t != nil) {
        JreStrongAssign(&_currToken_, t);
        return t;
      }
    }
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT:
    f = _itemFilter_;
    if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
      return (JreStrongAssign(&_currToken_, t));
    }
    if (f == nil) {
      [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
      break;
    }
    f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
    if (f == nil) {
      [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
      break;
    }
    if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      f = [f filterStartObject];
    }
    JreStrongAssign(&_itemFilter_, f);
    if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
      return (JreStrongAssign(&_currToken_, t));
    }
    JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
    if (_includePath_) {
      t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, _headContext_);
      if (t != nil) {
        JreStrongAssign(&_currToken_, t);
        return t;
      }
    }
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_END_ARRAY:
    case ComFasterxmlJacksonCoreJsonTokenId_ID_END_OBJECT:
    {
      jboolean returnEnd = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) isStartHandled];
      f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) getFilter];
      if ((f != nil) && (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL))) {
        [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) filterFinishArray];
      }
      JreStrongAssign(&_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) getParent]);
      JreStrongAssign(&_itemFilter_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) getFilter]);
      if (returnEnd) {
        return (JreStrongAssign(&_currToken_, t));
      }
    }
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME:
    {
      NSString *name = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getCurrentName];
      f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) setFieldNameWithNSString:name];
      if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
        JreStrongAssign(&_itemFilter_, f);
        if (!_includePath_) {
          if (_includeImmediateParent_ && ![((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) isStartHandled]) {
            t = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) nextTokenToRead];
            JreStrongAssign(&_exposedContext_, _headContext_);
          }
        }
        return (JreStrongAssign(&_currToken_, t));
      }
      if (f == nil) {
        [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextToken];
        [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
        break;
      }
      f = [f includePropertyWithNSString:name];
      if (f == nil) {
        [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextToken];
        [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
        break;
      }
      JreStrongAssign(&_itemFilter_, f);
      if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
        if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self)) {
          if (_includePath_) {
            return (JreStrongAssign(&_currToken_, t));
          }
        }
        else {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) nextToken];
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) skipChildren];
        }
      }
      if (_includePath_) {
        t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, _headContext_);
        if (t != nil) {
          JreStrongAssign(&_currToken_, t);
          return t;
        }
      }
      break;
    }
    default:
    f = _itemFilter_;
    if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
      return (JreStrongAssign(&_currToken_, t));
    }
    if (f != nil) {
      f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
      if ((f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) || ((f != nil) && [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) includeValueWithComFasterxmlJacksonCoreJsonParser:delegate_])) {
        if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self)) {
          return (JreStrongAssign(&_currToken_, t));
        }
      }
    }
    break;
  }
  return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextToken2(self);
}

- (ComFasterxmlJacksonCoreJsonToken *)_nextToken2 {
  return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextToken2(self);
}

- (ComFasterxmlJacksonCoreJsonToken *)_nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext:(ComFasterxmlJacksonCoreFilterTokenFilterContext *)buffRoot {
  return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
}

- (ComFasterxmlJacksonCoreJsonToken *)_nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext:(ComFasterxmlJacksonCoreFilterTokenFilterContext *)buffRoot {
  return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
}

- (jboolean)_verifyAllowedMatches {
  return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self);
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  ComFasterxmlJacksonCoreJsonToken *t = [self nextToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    t = [self nextToken];
  }
  return t;
}

- (ComFasterxmlJacksonCoreJsonParser *)skipChildren {
  if ((_currToken_ != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) && (_currToken_ != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY))) {
    return self;
  }
  jint open = 1;
  while (true) {
    ComFasterxmlJacksonCoreJsonToken *t = [self nextToken];
    if (t == nil) {
      return self;
    }
    if ([t isStructStart]) {
      ++open;
    }
    else if ([t isStructEnd]) {
      if (--open == 0) {
        return self;
      }
    }
  }
}

- (NSString *)getText {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getText];
}

- (jboolean)hasTextCharacters {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) hasTextCharacters];
}

- (IOSCharArray *)getTextCharacters {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextCharacters];
}

- (jint)getTextLength {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextLength];
}

- (jint)getTextOffset {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTextOffset];
}

- (JavaMathBigInteger *)getBigIntegerValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBigIntegerValue];
}

- (jboolean)getBooleanValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBooleanValue];
}

- (jbyte)getByteValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getByteValue];
}

- (jshort)getShortValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getShortValue];
}

- (JavaMathBigDecimal *)getDecimalValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getDecimalValue];
}

- (jdouble)getDoubleValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getDoubleValue];
}

- (jfloat)getFloatValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getFloatValue];
}

- (jint)getIntValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getIntValue];
}

- (jlong)getLongValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getLongValue];
}

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getNumberType];
}

- (NSNumber *)getNumberValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getNumberValue];
}

- (jint)getValueAsInt {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsInt];
}

- (jint)getValueAsIntWithInt:(jint)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsIntWithInt:defaultValue];
}

- (jlong)getValueAsLong {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsLong];
}

- (jlong)getValueAsLongWithLong:(jlong)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsLongWithLong:defaultValue];
}

- (jdouble)getValueAsDouble {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsDouble];
}

- (jdouble)getValueAsDoubleWithDouble:(jdouble)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsDoubleWithDouble:defaultValue];
}

- (jboolean)getValueAsBoolean {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsBoolean];
}

- (jboolean)getValueAsBooleanWithBoolean:(jboolean)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsBooleanWithBoolean:defaultValue];
}

- (NSString *)getValueAsString {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsString];
}

- (NSString *)getValueAsStringWithNSString:(NSString *)defaultValue {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getValueAsStringWithNSString:defaultValue];
}

- (id)getEmbeddedObject {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getEmbeddedObject];
}

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:b64variant];
}

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:b64variant withJavaIoOutputStream:outArg];
}

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation {
  return [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(delegate_)) getTokenLocation];
}

- (ComFasterxmlJacksonCoreJsonStreamContext *)_filterContext {
  if (_exposedContext_ != nil) {
    return _exposedContext_;
  }
  return _headContext_;
}

- (void)dealloc {
  RELEASE_(rootFilter_);
  RELEASE_(_currToken_);
  RELEASE_(_lastClearedToken_);
  RELEASE_(_headContext_);
  RELEASE_(_exposedContext_);
  RELEASE_(_itemFilter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFilterTokenFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonStreamContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x14, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x14, 8, 9, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x2, 10, 9, 5, -1, -1, -1 },
    { NULL, "Z", 0x12, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 2, 5, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "J", 0x1, 12, 13, 5, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "D", 0x1, 14, 15, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, 7, 5, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "[B", 0x1, 19, 20, 5, -1, -1, -1 },
    { NULL, "I", 0x1, 21, 22, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonStreamContext;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonCoreFilterTokenFilter:withBoolean:withBoolean:);
  methods[1].selector = @selector(getFilter);
  methods[2].selector = @selector(getMatchCount);
  methods[3].selector = @selector(getCurrentToken);
  methods[4].selector = @selector(currentToken);
  methods[5].selector = @selector(getCurrentTokenId);
  methods[6].selector = @selector(currentTokenId);
  methods[7].selector = @selector(hasCurrentToken);
  methods[8].selector = @selector(hasTokenIdWithInt:);
  methods[9].selector = @selector(hasTokenWithComFasterxmlJacksonCoreJsonToken:);
  methods[10].selector = @selector(isExpectedStartArrayToken);
  methods[11].selector = @selector(isExpectedStartObjectToken);
  methods[12].selector = @selector(getCurrentLocation);
  methods[13].selector = @selector(getParsingContext);
  methods[14].selector = @selector(getCurrentName);
  methods[15].selector = @selector(clearCurrentToken);
  methods[16].selector = @selector(getLastClearedToken);
  methods[17].selector = @selector(overrideCurrentNameWithNSString:);
  methods[18].selector = @selector(nextToken);
  methods[19].selector = @selector(_nextToken2);
  methods[20].selector = @selector(_nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext:);
  methods[21].selector = @selector(_nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext:);
  methods[22].selector = @selector(_verifyAllowedMatches);
  methods[23].selector = @selector(nextValue);
  methods[24].selector = @selector(skipChildren);
  methods[25].selector = @selector(getText);
  methods[26].selector = @selector(hasTextCharacters);
  methods[27].selector = @selector(getTextCharacters);
  methods[28].selector = @selector(getTextLength);
  methods[29].selector = @selector(getTextOffset);
  methods[30].selector = @selector(getBigIntegerValue);
  methods[31].selector = @selector(getBooleanValue);
  methods[32].selector = @selector(getByteValue);
  methods[33].selector = @selector(getShortValue);
  methods[34].selector = @selector(getDecimalValue);
  methods[35].selector = @selector(getDoubleValue);
  methods[36].selector = @selector(getFloatValue);
  methods[37].selector = @selector(getIntValue);
  methods[38].selector = @selector(getLongValue);
  methods[39].selector = @selector(getNumberType);
  methods[40].selector = @selector(getNumberValue);
  methods[41].selector = @selector(getValueAsInt);
  methods[42].selector = @selector(getValueAsIntWithInt:);
  methods[43].selector = @selector(getValueAsLong);
  methods[44].selector = @selector(getValueAsLongWithLong:);
  methods[45].selector = @selector(getValueAsDouble);
  methods[46].selector = @selector(getValueAsDoubleWithDouble:);
  methods[47].selector = @selector(getValueAsBoolean);
  methods[48].selector = @selector(getValueAsBooleanWithBoolean:);
  methods[49].selector = @selector(getValueAsString);
  methods[50].selector = @selector(getValueAsStringWithNSString:);
  methods[51].selector = @selector(getEmbeddedObject);
  methods[52].selector = @selector(getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:);
  methods[53].selector = @selector(readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:withJavaIoOutputStream:);
  methods[54].selector = @selector(getTokenLocation);
  methods[55].selector = @selector(_filterContext);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "rootFilter_", "LComFasterxmlJacksonCoreFilterTokenFilter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_allowMultipleMatches_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_includePath_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_includeImmediateParent_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, 23 },
    { "_currToken_", "LComFasterxmlJacksonCoreJsonToken;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_lastClearedToken_", "LComFasterxmlJacksonCoreJsonToken;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_headContext_", "LComFasterxmlJacksonCoreFilterTokenFilterContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_exposedContext_", "LComFasterxmlJacksonCoreFilterTokenFilterContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_itemFilter_", "LComFasterxmlJacksonCoreFilterTokenFilter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_matchCount_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonCoreFilterTokenFilter;ZZ", "hasTokenId", "I", "hasToken", "LComFasterxmlJacksonCoreJsonToken;", "LJavaIoIOException;", "overrideCurrentName", "LNSString;", "_nextTokenWithBuffering", "LComFasterxmlJacksonCoreFilterTokenFilterContext;", "_nextBuffered", "getValueAsInt", "getValueAsLong", "J", "getValueAsDouble", "D", "getValueAsBoolean", "Z", "getValueAsString", "getBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;", "readBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoOutputStream;", (void *)&ComFasterxmlJacksonCoreFilterFilteringParserDelegate__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreFilterFilteringParserDelegate = { "FilteringParserDelegate", "com.fasterxml.jackson.core.filter", ptrTable, methods, fields, 7, 0x1, 56, 10, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreFilterFilteringParserDelegate;
}

@end

void ComFasterxmlJacksonCoreFilterFilteringParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonCoreFilterTokenFilter *f, jboolean includePath, jboolean allowMultipleMatches) {
  ComFasterxmlJacksonCoreUtilJsonParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_(self, p);
  JreStrongAssign(&self->rootFilter_, f);
  JreStrongAssign(&self->_itemFilter_, f);
  JreStrongAssign(&self->_headContext_, ComFasterxmlJacksonCoreFilterTokenFilterContext_createRootContextWithComFasterxmlJacksonCoreFilterTokenFilter_(f));
  self->_includePath_ = includePath;
  self->_allowMultipleMatches_ = allowMultipleMatches;
}

ComFasterxmlJacksonCoreFilterFilteringParserDelegate *new_ComFasterxmlJacksonCoreFilterFilteringParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonCoreFilterTokenFilter *f, jboolean includePath, jboolean allowMultipleMatches) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreFilterFilteringParserDelegate, initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_, p, f, includePath, allowMultipleMatches)
}

ComFasterxmlJacksonCoreFilterFilteringParserDelegate *create_ComFasterxmlJacksonCoreFilterFilteringParserDelegate_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonCoreFilterTokenFilter *f, jboolean includePath, jboolean allowMultipleMatches) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreFilterFilteringParserDelegate, initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonCoreFilterTokenFilter_withBoolean_withBoolean_, p, f, includePath, allowMultipleMatches)
}

ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextToken2(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self) {
  while (true) {
    {
      ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
      if (t == nil) {
        JreStrongAssign(&self->_currToken_, t);
        return t;
      }
      ComFasterxmlJacksonCoreFilterTokenFilter *f;
      switch ([t id__]) {
        case ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY:
        f = self->_itemFilter_;
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return (JreStrongAssign(&self->_currToken_, t));
        }
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          f = [f filterStartArray];
        }
        JreStrongAssign(&self->_itemFilter_, f);
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return (JreStrongAssign(&self->_currToken_, t));
        }
        JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
        if (self->_includePath_) {
          t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, self->_headContext_);
          if (t != nil) {
            JreStrongAssign(&self->_currToken_, t);
            return t;
          }
        }
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT:
        f = self->_itemFilter_;
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return (JreStrongAssign(&self->_currToken_, t));
        }
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          f = [f filterStartObject];
        }
        JreStrongAssign(&self->_itemFilter_, f);
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return (JreStrongAssign(&self->_currToken_, t));
        }
        JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
        if (self->_includePath_) {
          t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, self->_headContext_);
          if (t != nil) {
            JreStrongAssign(&self->_currToken_, t);
            return t;
          }
        }
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_END_ARRAY:
        case ComFasterxmlJacksonCoreJsonTokenId_ID_END_OBJECT:
        {
          jboolean returnEnd = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) isStartHandled];
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getFilter];
          if ((f != nil) && (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL))) {
            [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) filterFinishArray];
          }
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getParent]);
          JreStrongAssign(&self->_itemFilter_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getFilter]);
          if (returnEnd) {
            return (JreStrongAssign(&self->_currToken_, t));
          }
        }
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME:
        {
          NSString *name = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) getCurrentName];
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) setFieldNameWithNSString:name];
          if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
            JreStrongAssign(&self->_itemFilter_, f);
            return (JreStrongAssign(&self->_currToken_, t));
          }
          if (f == nil) {
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
            goto continue_main_loop;
          }
          f = [f includePropertyWithNSString:name];
          if (f == nil) {
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
            goto continue_main_loop;
          }
          JreStrongAssign(&self->_itemFilter_, f);
          if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
            if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self) && self->_includePath_) {
              return (JreStrongAssign(&self->_currToken_, t));
            }
            goto continue_main_loop;
          }
          if (self->_includePath_) {
            t = ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, self->_headContext_);
            if (t != nil) {
              JreStrongAssign(&self->_currToken_, t);
              return t;
            }
          }
        }
        goto continue_main_loop;
        default:
        f = self->_itemFilter_;
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          return (JreStrongAssign(&self->_currToken_, t));
        }
        if (f != nil) {
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
          if ((f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) || ((f != nil) && [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) includeValueWithComFasterxmlJacksonCoreJsonParser:self->delegate_])) {
            if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self)) {
              return (JreStrongAssign(&self->_currToken_, t));
            }
          }
        }
        break;
      }
    }
    continue_main_loop: ;
  }
}

ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextTokenWithBufferingWithComFasterxmlJacksonCoreFilterTokenFilterContext_(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self, ComFasterxmlJacksonCoreFilterTokenFilterContext *buffRoot) {
  while (true) {
    {
      ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
      if (t == nil) {
        return t;
      }
      ComFasterxmlJacksonCoreFilterTokenFilter *f;
      switch ([t id__]) {
        case ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY:
        f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:self->_itemFilter_];
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          f = [f filterStartArray];
        }
        JreStrongAssign(&self->_itemFilter_, f);
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
        }
        JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildArrayContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT:
        f = self->_itemFilter_;
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return t;
        }
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
        if (f == nil) {
          [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
          goto continue_main_loop;
        }
        if (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          f = [f filterStartObject];
        }
        JreStrongAssign(&self->_itemFilter_, f);
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:true]);
          return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
        }
        JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) createChildObjectContextWithComFasterxmlJacksonCoreFilterTokenFilter:f withBoolean:false]);
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_END_ARRAY:
        case ComFasterxmlJacksonCoreJsonTokenId_ID_END_OBJECT:
        {
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getFilter];
          if ((f != nil) && (f != JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL))) {
            [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) filterFinishArray];
          }
          jboolean gotEnd = self->_headContext_ == buffRoot;
          jboolean returnEnd = gotEnd && [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) isStartHandled];
          JreStrongAssign(&self->_headContext_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getParent]);
          JreStrongAssign(&self->_itemFilter_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) getFilter]);
          if (returnEnd) {
            return t;
          }
        }
        goto continue_main_loop;
        case ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME:
        {
          NSString *name = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) getCurrentName];
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) setFieldNameWithNSString:name];
          if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
            JreStrongAssign(&self->_itemFilter_, f);
            return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
          }
          if (f == nil) {
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
            goto continue_main_loop;
          }
          f = [f includePropertyWithNSString:name];
          if (f == nil) {
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) nextToken];
            [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(self->delegate_)) skipChildren];
            goto continue_main_loop;
          }
          JreStrongAssign(&self->_itemFilter_, f);
          if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
            if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self)) {
              return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
            }
            else {
              JreStrongAssign(&self->_itemFilter_, [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) setFieldNameWithNSString:name]);
            }
          }
        }
        goto continue_main_loop;
        default:
        f = self->_itemFilter_;
        if (f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) {
          return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
        }
        if (f != nil) {
          f = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_headContext_)) checkValueWithComFasterxmlJacksonCoreFilterTokenFilter:f];
          if ((f == JreLoadStatic(ComFasterxmlJacksonCoreFilterTokenFilter, INCLUDE_ALL)) || ((f != nil) && [((ComFasterxmlJacksonCoreFilterTokenFilter *) nil_chk(f)) includeValueWithComFasterxmlJacksonCoreJsonParser:self->delegate_])) {
            if (ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(self)) {
              return ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(self, buffRoot);
            }
          }
        }
        goto continue_main_loop;
      }
    }
    continue_main_loop: ;
  }
}

ComFasterxmlJacksonCoreJsonToken *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__nextBufferedWithComFasterxmlJacksonCoreFilterTokenFilterContext_(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self, ComFasterxmlJacksonCoreFilterTokenFilterContext *buffRoot) {
  JreStrongAssign(&self->_exposedContext_, buffRoot);
  ComFasterxmlJacksonCoreFilterTokenFilterContext *ctxt = buffRoot;
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(ctxt)) nextTokenToRead];
  if (t != nil) {
    return t;
  }
  while (true) {
    if (ctxt == self->_headContext_) {
      @throw nil_chk([self _constructErrorWithNSString:@"Internal error: failed to locate expected buffered tokens"]);
    }
    ctxt = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_exposedContext_)) findChildOfWithComFasterxmlJacksonCoreFilterTokenFilterContext:ctxt];
    JreStrongAssign(&self->_exposedContext_, ctxt);
    if (ctxt == nil) {
      @throw nil_chk([self _constructErrorWithNSString:@"Unexpected problem: chain of filtered context broken"]);
    }
    t = [((ComFasterxmlJacksonCoreFilterTokenFilterContext *) nil_chk(self->_exposedContext_)) nextTokenToRead];
    if (t != nil) {
      return t;
    }
  }
}

jboolean ComFasterxmlJacksonCoreFilterFilteringParserDelegate__verifyAllowedMatches(ComFasterxmlJacksonCoreFilterFilteringParserDelegate *self) {
  if (self->_matchCount_ == 0 || self->_allowMultipleMatches_) {
    ++self->_matchCount_;
    return true;
  }
  return false;
}

IOSObjectArray *ComFasterxmlJacksonCoreFilterFilteringParserDelegate__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreFilterFilteringParserDelegate)
