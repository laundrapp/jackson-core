//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/Base64Variants.h"
#include "com/fasterxml/jackson/core/FormatSchema.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParseException.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/ObjectReadContext.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/TokenStreamContext.h"
#include "com/fasterxml/jackson/core/TreeNode.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/async/NonBlockingInputFeeder.h"
#include "com/fasterxml/jackson/core/sym/FieldNameMatcher.h"
#include "com/fasterxml/jackson/core/type/ResolvedType.h"
#include "com/fasterxml/jackson/core/type/TypeReference.h"
#include "com/fasterxml/jackson/core/util/RequestPayload.h"
#include "java/io/OutputStream.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"

inline jint ComFasterxmlJacksonCoreJsonParser_get_MIN_BYTE_I(void);
#define ComFasterxmlJacksonCoreJsonParser_MIN_BYTE_I -128
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonParser, MIN_BYTE_I, jint)

inline jint ComFasterxmlJacksonCoreJsonParser_get_MAX_BYTE_I(void);
#define ComFasterxmlJacksonCoreJsonParser_MAX_BYTE_I 255
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonParser, MAX_BYTE_I, jint)

inline jint ComFasterxmlJacksonCoreJsonParser_get_MIN_SHORT_I(void);
#define ComFasterxmlJacksonCoreJsonParser_MIN_SHORT_I -32768
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonParser, MIN_SHORT_I, jint)

inline jint ComFasterxmlJacksonCoreJsonParser_get_MAX_SHORT_I(void);
#define ComFasterxmlJacksonCoreJsonParser_MAX_SHORT_I 32767
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreJsonParser, MAX_SHORT_I, jint)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonCoreJsonParser__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonCoreJsonParser__Annotations$1(void);

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonParser_NumberType_initWithNSString_withInt_(ComFasterxmlJacksonCoreJsonParser_NumberType *self, NSString *__name, jint __ordinal);

@interface ComFasterxmlJacksonCoreJsonParser_Feature () {
 @public
  /*!
   @brief Whether feature is enabled or disabled by default.
   */
  jboolean _defaultState_;
  jint _mask_;
}

@end

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonCoreJsonParser_Feature *self, jboolean defaultState, NSString *__name, jint __ordinal);

@implementation ComFasterxmlJacksonCoreJsonParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonCoreJsonParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithInt:(jint)features {
  ComFasterxmlJacksonCoreJsonParser_initWithInt_(self, features);
  return self;
}

- (id<ComFasterxmlJacksonCoreObjectReadContext>)getObjectReadContext {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getInputSource {
  return nil;
}

- (id)getCurrentValue {
  ComFasterxmlJacksonCoreTokenStreamContext *ctxt = [self getParsingContext];
  return (ctxt == nil) ? nil : [((ComFasterxmlJacksonCoreTokenStreamContext *) nil_chk(ctxt)) getCurrentValue];
}

- (void)setCurrentValueWithId:(id)v {
  ComFasterxmlJacksonCoreTokenStreamContext *ctxt = [self getParsingContext];
  if (ctxt != nil) {
    [ctxt setCurrentValueWithId:v];
  }
}

- (void)setRequestPayloadOnErrorWithComFasterxmlJacksonCoreUtilRequestPayload:(ComFasterxmlJacksonCoreUtilRequestPayload *)payload {
  JreStrongAssign(&_requestPayload_, payload);
}

- (void)setRequestPayloadOnErrorWithByteArray:(IOSByteArray *)payload
                                 withNSString:(NSString *)charset {
  JreStrongAssign(&_requestPayload_, (payload == nil) ? nil : create_ComFasterxmlJacksonCoreUtilRequestPayload_initWithByteArray_withNSString_(payload, charset));
}

- (void)setRequestPayloadOnErrorWithNSString:(NSString *)payload {
  JreStrongAssign(&_requestPayload_, (payload == nil) ? nil : create_ComFasterxmlJacksonCoreUtilRequestPayload_initWithJavaLangCharSequence_(payload));
}

- (jboolean)canSynthesizeNulls {
  return false;
}

- (void)setSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  NSString *desc = (schema == nil) ? @"NULL" : NSString_java_formatWithNSString_withNSObjectArray_(@"'%s'", [IOSObjectArray arrayWithObjects:(id[]){ [((id<ComFasterxmlJacksonCoreFormatSchema>) nil_chk(schema)) getSchemaType] } count:1 type:NSObject_class_()]);
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$$$", @"Parser of type ", [[self java_getClass] getName], @" does not support schema of type ", desc));
}

- (id<ComFasterxmlJacksonCoreFormatSchema>)getSchema {
  return nil;
}

- (jboolean)canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  return false;
}

- (jboolean)canParseAsync {
  return false;
}

- (id<ComFasterxmlJacksonCoreAsyncNonBlockingInputFeeder>)getNonBlockingInputFeeder {
  return nil;
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)isClosed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreTokenStreamContext *)getParsingContext {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)releaseBufferedWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return -1;
}

- (jint)releaseBufferedWithJavaIoWriter:(JavaIoWriter *)w {
  return -1;
}

- (ComFasterxmlJacksonCoreJsonParser *)enableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  _features_ |= [((ComFasterxmlJacksonCoreJsonParser_Feature *) nil_chk(f)) getMask];
  return self;
}

- (ComFasterxmlJacksonCoreJsonParser *)disableWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  _features_ &= ~[((ComFasterxmlJacksonCoreJsonParser_Feature *) nil_chk(f)) getMask];
  return self;
}

- (ComFasterxmlJacksonCoreJsonParser *)configureWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f
                                                                                  withBoolean:(jboolean)state {
  if (state) [self enableWithComFasterxmlJacksonCoreJsonParser_Feature:f];
  else [self disableWithComFasterxmlJacksonCoreJsonParser_Feature:f];
  return self;
}

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:(ComFasterxmlJacksonCoreJsonParser_Feature *)f {
  return [((ComFasterxmlJacksonCoreJsonParser_Feature *) nil_chk(f)) enabledInWithInt:_features_];
}

- (jint)getParserFeatures {
  return _features_;
}

- (jint)getFormatFeatures {
  return 0;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonParser *)skipChildren {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)finishToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)nextFieldName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)nextFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)str {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)nextFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)matcher {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)currentFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:(ComFasterxmlJacksonCoreSymFieldNameMatcher *)matcher {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)nextTextValue {
  return ([self nextToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING)) ? [self getText] : nil;
}

- (jint)nextIntValueWithInt:(jint)defaultValue {
  return ([self nextToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT)) ? [self getIntValue] : defaultValue;
}

- (jlong)nextLongValueWithLong:(jlong)defaultValue {
  return ([self nextToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT)) ? [self getLongValue] : defaultValue;
}

- (JavaLangBoolean *)nextBooleanValue {
  ComFasterxmlJacksonCoreJsonToken *t = [self nextToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_TRUE)) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_FALSE)) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  return nil;
}

- (ComFasterxmlJacksonCoreJsonToken *)currentToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonToken *)getCurrentToken {
  return [self currentToken];
}

- (jint)currentTokenId {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasCurrentToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasTokenIdWithInt:(jint)id_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasTokenWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)t {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isExpectedStartArrayToken {
  return [self currentToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY);
}

- (jboolean)isExpectedStartObjectToken {
  return [self currentToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT);
}

- (jboolean)isNaN {
  return false;
}

- (void)clearCurrentToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (ComFasterxmlJacksonCoreJsonToken *)getLastClearedToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)currentName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getCurrentName {
  return [self currentName];
}

- (NSString *)getText {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getTextWithJavaIoWriter:(JavaIoWriter *)writer {
  NSString *str = [self getText];
  if (str == nil) {
    return 0;
  }
  [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:str];
  return [str java_length];
}

- (IOSCharArray *)getTextCharacters {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getTextLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getTextOffset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasTextCharacters {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSNumber *)getNumberValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getByteValue {
  jint value = [self getIntValue];
  if (value < ComFasterxmlJacksonCoreJsonParser_MIN_BYTE_I || value > ComFasterxmlJacksonCoreJsonParser_MAX_BYTE_I) {
    @throw nil_chk([self _constructErrorWithNSString:JreStrcat("$$$", @"Numeric value (", [self getText], @") out of range of Java byte")]);
  }
  return (jbyte) value;
}

- (jshort)getShortValue {
  jint value = [self getIntValue];
  if (value < ComFasterxmlJacksonCoreJsonParser_MIN_SHORT_I || value > ComFasterxmlJacksonCoreJsonParser_MAX_SHORT_I) {
    @throw nil_chk([self _constructErrorWithNSString:JreStrcat("$$$", @"Numeric value (", [self getText], @") out of range of Java short")]);
  }
  return (jshort) value;
}

- (jint)getIntValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getLongValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaMathBigInteger *)getBigIntegerValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jfloat)getFloatValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getDoubleValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaMathBigDecimal *)getDecimalValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)getBooleanValue {
  ComFasterxmlJacksonCoreJsonToken *t = [self currentToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_TRUE)) return true;
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_FALSE)) return false;
  @throw nil_chk([create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(self, NSString_java_formatWithNSString_withNSObjectArray_(@"Current token (%s) not of boolean type", [IOSObjectArray arrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()])) withRequestPayloadWithComFasterxmlJacksonCoreUtilRequestPayload:_requestPayload_]);
}

- (id)getEmbeddedObject {
  return nil;
}

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)bv {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSByteArray *)getBinaryValue {
  return [self getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant()];
}

- (jint)readBinaryValueWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return [self readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant() withJavaIoOutputStream:outArg];
}

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)bv
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  [self _reportUnsupportedOperation];
  return 0;
}

- (jint)getValueAsInt {
  return [self getValueAsIntWithInt:0];
}

- (jint)getValueAsIntWithInt:(jint)def {
  return def;
}

- (jlong)getValueAsLong {
  return [self getValueAsLongWithLong:0];
}

- (jlong)getValueAsLongWithLong:(jlong)def {
  return def;
}

- (jdouble)getValueAsDouble {
  return [self getValueAsDoubleWithDouble:0.0];
}

- (jdouble)getValueAsDoubleWithDouble:(jdouble)def {
  return def;
}

- (jboolean)getValueAsBoolean {
  return [self getValueAsBooleanWithBoolean:false];
}

- (jboolean)getValueAsBooleanWithBoolean:(jboolean)def {
  return def;
}

- (NSString *)getValueAsString {
  return [self getValueAsStringWithNSString:nil];
}

- (NSString *)getValueAsStringWithNSString:(NSString *)def {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)canReadObjectId {
  return false;
}

- (jboolean)canReadTypeId {
  return false;
}

- (id)getObjectId {
  return nil;
}

- (id)getTypeId {
  return nil;
}

- (id)readValueAsWithIOSClass:(IOSClass *)valueType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)readValueAsWithComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)valueTypeRef {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)readValueAsWithComFasterxmlJacksonCoreTypeResolvedType:(ComFasterxmlJacksonCoreTypeResolvedType *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonCoreTreeNode>)readValueAsTree {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonParseException *)_constructErrorWithNSString:(NSString *)msg {
  return [create_ComFasterxmlJacksonCoreJsonParseException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(self, msg) withRequestPayloadWithComFasterxmlJacksonCoreUtilRequestPayload:_requestPayload_];
}

- (void)_reportUnsupportedOperation {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$", @"Operation not supported by parser of type ", [[self java_getClass] getName]));
}

- (void)dealloc {
  RELEASE_(_requestPayload_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectReadContext;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatSchema;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreAsyncNonBlockingInputFeeder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x401, 10, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTokenStreamContext;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, 13, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 12, 14, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x401, 21, 22, 11, -1, -1, -1 },
    { NULL, "I", 0x401, 21, 23, 11, -1, -1, -1 },
    { NULL, "I", 0x401, 24, 23, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 25, 0, 11, -1, -1, -1 },
    { NULL, "J", 0x1, 26, 27, 11, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, 28, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 29, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 30, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 32, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 11, -1, 33, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 34, 14, 35, -1, -1, -1 },
    { NULL, "[C", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "F", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x401, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "[B", 0x401, 36, 37, 11, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 38, 13, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 38, 39, 11, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 40, 0, 11, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "J", 0x1, 41, 27, 11, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "D", 0x1, 42, 43, 11, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "Z", 0x1, 44, 45, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 46, 6, 11, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 47, 48, 11, 49, -1, -1 },
    { NULL, "LNSObject;", 0x401, 47, 50, 11, 51, -1, -1 },
    { NULL, "LNSObject;", 0x401, 47, 52, 11, 53, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTreeNode;", 0x401, -1, -1, 11, 54, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParseException;", 0x4, 55, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(getObjectReadContext);
  methods[3].selector = @selector(getInputSource);
  methods[4].selector = @selector(getCurrentValue);
  methods[5].selector = @selector(setCurrentValueWithId:);
  methods[6].selector = @selector(setRequestPayloadOnErrorWithComFasterxmlJacksonCoreUtilRequestPayload:);
  methods[7].selector = @selector(setRequestPayloadOnErrorWithByteArray:withNSString:);
  methods[8].selector = @selector(setRequestPayloadOnErrorWithNSString:);
  methods[9].selector = @selector(canSynthesizeNulls);
  methods[10].selector = @selector(setSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[11].selector = @selector(getSchema);
  methods[12].selector = @selector(canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[13].selector = @selector(canParseAsync);
  methods[14].selector = @selector(getNonBlockingInputFeeder);
  methods[15].selector = @selector(version__);
  methods[16].selector = @selector(close);
  methods[17].selector = @selector(isClosed);
  methods[18].selector = @selector(getParsingContext);
  methods[19].selector = @selector(getTokenLocation);
  methods[20].selector = @selector(getCurrentLocation);
  methods[21].selector = @selector(releaseBufferedWithJavaIoOutputStream:);
  methods[22].selector = @selector(releaseBufferedWithJavaIoWriter:);
  methods[23].selector = @selector(enableWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[24].selector = @selector(disableWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[25].selector = @selector(configureWithComFasterxmlJacksonCoreJsonParser_Feature:withBoolean:);
  methods[26].selector = @selector(isEnabledWithComFasterxmlJacksonCoreJsonParser_Feature:);
  methods[27].selector = @selector(getParserFeatures);
  methods[28].selector = @selector(getFormatFeatures);
  methods[29].selector = @selector(nextToken);
  methods[30].selector = @selector(nextValue);
  methods[31].selector = @selector(skipChildren);
  methods[32].selector = @selector(finishToken);
  methods[33].selector = @selector(nextFieldName);
  methods[34].selector = @selector(nextFieldNameWithComFasterxmlJacksonCoreSerializableString:);
  methods[35].selector = @selector(nextFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:);
  methods[36].selector = @selector(currentFieldNameWithComFasterxmlJacksonCoreSymFieldNameMatcher:);
  methods[37].selector = @selector(nextTextValue);
  methods[38].selector = @selector(nextIntValueWithInt:);
  methods[39].selector = @selector(nextLongValueWithLong:);
  methods[40].selector = @selector(nextBooleanValue);
  methods[41].selector = @selector(currentToken);
  methods[42].selector = @selector(getCurrentToken);
  methods[43].selector = @selector(currentTokenId);
  methods[44].selector = @selector(hasCurrentToken);
  methods[45].selector = @selector(hasTokenIdWithInt:);
  methods[46].selector = @selector(hasTokenWithComFasterxmlJacksonCoreJsonToken:);
  methods[47].selector = @selector(isExpectedStartArrayToken);
  methods[48].selector = @selector(isExpectedStartObjectToken);
  methods[49].selector = @selector(isNaN);
  methods[50].selector = @selector(clearCurrentToken);
  methods[51].selector = @selector(getLastClearedToken);
  methods[52].selector = @selector(overrideCurrentNameWithNSString:);
  methods[53].selector = @selector(currentName);
  methods[54].selector = @selector(getCurrentName);
  methods[55].selector = @selector(getText);
  methods[56].selector = @selector(getTextWithJavaIoWriter:);
  methods[57].selector = @selector(getTextCharacters);
  methods[58].selector = @selector(getTextLength);
  methods[59].selector = @selector(getTextOffset);
  methods[60].selector = @selector(hasTextCharacters);
  methods[61].selector = @selector(getNumberValue);
  methods[62].selector = @selector(getNumberType);
  methods[63].selector = @selector(getByteValue);
  methods[64].selector = @selector(getShortValue);
  methods[65].selector = @selector(getIntValue);
  methods[66].selector = @selector(getLongValue);
  methods[67].selector = @selector(getBigIntegerValue);
  methods[68].selector = @selector(getFloatValue);
  methods[69].selector = @selector(getDoubleValue);
  methods[70].selector = @selector(getDecimalValue);
  methods[71].selector = @selector(getBooleanValue);
  methods[72].selector = @selector(getEmbeddedObject);
  methods[73].selector = @selector(getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:);
  methods[74].selector = @selector(getBinaryValue);
  methods[75].selector = @selector(readBinaryValueWithJavaIoOutputStream:);
  methods[76].selector = @selector(readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:withJavaIoOutputStream:);
  methods[77].selector = @selector(getValueAsInt);
  methods[78].selector = @selector(getValueAsIntWithInt:);
  methods[79].selector = @selector(getValueAsLong);
  methods[80].selector = @selector(getValueAsLongWithLong:);
  methods[81].selector = @selector(getValueAsDouble);
  methods[82].selector = @selector(getValueAsDoubleWithDouble:);
  methods[83].selector = @selector(getValueAsBoolean);
  methods[84].selector = @selector(getValueAsBooleanWithBoolean:);
  methods[85].selector = @selector(getValueAsString);
  methods[86].selector = @selector(getValueAsStringWithNSString:);
  methods[87].selector = @selector(canReadObjectId);
  methods[88].selector = @selector(canReadTypeId);
  methods[89].selector = @selector(getObjectId);
  methods[90].selector = @selector(getTypeId);
  methods[91].selector = @selector(readValueAsWithIOSClass:);
  methods[92].selector = @selector(readValueAsWithComFasterxmlJacksonCoreTypeTypeReference:);
  methods[93].selector = @selector(readValueAsWithComFasterxmlJacksonCoreTypeResolvedType:);
  methods[94].selector = @selector(readValueAsTree);
  methods[95].selector = @selector(_constructErrorWithNSString:);
  methods[96].selector = @selector(_reportUnsupportedOperation);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_BYTE_I", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonParser_MIN_BYTE_I, 0x1a, -1, -1, -1, -1 },
    { "MAX_BYTE_I", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonParser_MAX_BYTE_I, 0x1a, -1, -1, -1, -1 },
    { "MIN_SHORT_I", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonParser_MIN_SHORT_I, 0x1a, -1, -1, -1, -1 },
    { "MAX_SHORT_I", "I", .constantValue.asInt = ComFasterxmlJacksonCoreJsonParser_MAX_SHORT_I, 0x1a, -1, -1, -1, -1 },
    { "_features_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_requestPayload_", "LComFasterxmlJacksonCoreUtilRequestPayload;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "setCurrentValue", "LNSObject;", "setRequestPayloadOnError", "LComFasterxmlJacksonCoreUtilRequestPayload;", "[BLNSString;", "LNSString;", "setSchema", "LComFasterxmlJacksonCoreFormatSchema;", "canUseSchema", "version", "LJavaIoIOException;", "releaseBuffered", "LJavaIoOutputStream;", "LJavaIoWriter;", "enable", "LComFasterxmlJacksonCoreJsonParser_Feature;", "disable", "configure", "LComFasterxmlJacksonCoreJsonParser_Feature;Z", "isEnabled", "nextFieldName", "LComFasterxmlJacksonCoreSerializableString;", "LComFasterxmlJacksonCoreSymFieldNameMatcher;", "currentFieldName", "nextIntValue", "nextLongValue", "J", (void *)&ComFasterxmlJacksonCoreJsonParser__Annotations$0, "hasTokenId", "hasToken", "LComFasterxmlJacksonCoreJsonToken;", "overrideCurrentName", (void *)&ComFasterxmlJacksonCoreJsonParser__Annotations$1, "getText", "LJavaIoIOException;LJavaLangUnsupportedOperationException;", "getBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;", "readBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoOutputStream;", "getValueAsInt", "getValueAsLong", "getValueAsDouble", "D", "getValueAsBoolean", "Z", "getValueAsString", "readValueAs", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)TT;", "LComFasterxmlJacksonCoreTypeTypeReference;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/core/type/TypeReference<*>;)TT;", "LComFasterxmlJacksonCoreTypeResolvedType;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/core/type/ResolvedType;)TT;", "<T::Lcom/fasterxml/jackson/core/TreeNode;>()TT;", "_constructError", "LComFasterxmlJacksonCoreJsonParser_NumberType;LComFasterxmlJacksonCoreJsonParser_Feature;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonParser = { "JsonParser", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x401, 97, 6, -1, 56, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonParser;
}

@end

void ComFasterxmlJacksonCoreJsonParser_init(ComFasterxmlJacksonCoreJsonParser *self) {
  NSObject_init(self);
}

void ComFasterxmlJacksonCoreJsonParser_initWithInt_(ComFasterxmlJacksonCoreJsonParser *self, jint features) {
  NSObject_init(self);
  self->_features_ = features;
}

IOSObjectArray *ComFasterxmlJacksonCoreJsonParser__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonCoreJsonParser__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonParser)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonParser_NumberType)

ComFasterxmlJacksonCoreJsonParser_NumberType *ComFasterxmlJacksonCoreJsonParser_NumberType_values_[6];

@implementation ComFasterxmlJacksonCoreJsonParser_NumberType

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonCoreJsonParser_NumberType_values();
}

+ (ComFasterxmlJacksonCoreJsonParser_NumberType *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonCoreJsonParser_NumberType_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INT", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "LONG", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BIG_INTEGER", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "FLOAT", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "DOUBLE", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "BIG_DECIMAL", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT), &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, LONG), &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_INTEGER), &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, FLOAT), &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, DOUBLE), &JreEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_DECIMAL), "LComFasterxmlJacksonCoreJsonParser;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/core/JsonParser$NumberType;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonParser_NumberType = { "NumberType", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_ComFasterxmlJacksonCoreJsonParser_NumberType;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonParser_NumberType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 6; i++) {
      ((void)(ComFasterxmlJacksonCoreJsonParser_NumberType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComFasterxmlJacksonCoreJsonParser_NumberType_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonCoreJsonParser_NumberType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonParser_NumberType)
  }
}

@end

void ComFasterxmlJacksonCoreJsonParser_NumberType_initWithNSString_withInt_(ComFasterxmlJacksonCoreJsonParser_NumberType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonCoreJsonParser_NumberType_values() {
  ComFasterxmlJacksonCoreJsonParser_NumberType_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonCoreJsonParser_NumberType_values_ count:6 type:ComFasterxmlJacksonCoreJsonParser_NumberType_class_()];
}

ComFasterxmlJacksonCoreJsonParser_NumberType *ComFasterxmlJacksonCoreJsonParser_NumberType_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonCoreJsonParser_NumberType_initialize();
  for (int i = 0; i < 6; i++) {
    ComFasterxmlJacksonCoreJsonParser_NumberType *e = ComFasterxmlJacksonCoreJsonParser_NumberType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonCoreJsonParser_NumberType *ComFasterxmlJacksonCoreJsonParser_NumberType_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonCoreJsonParser_NumberType_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ComFasterxmlJacksonCoreJsonParser_NumberType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonParser_NumberType)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonParser_Feature)

ComFasterxmlJacksonCoreJsonParser_Feature *ComFasterxmlJacksonCoreJsonParser_Feature_values_[14];

@implementation ComFasterxmlJacksonCoreJsonParser_Feature

+ (jint)collectDefaults {
  return ComFasterxmlJacksonCoreJsonParser_Feature_collectDefaults();
}

- (jboolean)enabledByDefault {
  return _defaultState_;
}

- (jboolean)enabledInWithInt:(jint)flags {
  return (flags & _mask_) != 0;
}

- (jint)getMask {
  return _mask_;
}

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonCoreJsonParser_Feature_values();
}

+ (ComFasterxmlJacksonCoreJsonParser_Feature *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonCoreJsonParser_Feature_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonCoreJsonParser_Feature;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_Feature;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(collectDefaults);
  methods[1].selector = @selector(enabledByDefault);
  methods[2].selector = @selector(enabledInWithInt:);
  methods[3].selector = @selector(getMask);
  methods[4].selector = @selector(values);
  methods[5].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AUTO_CLOSE_SOURCE", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ALLOW_COMMENTS", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "ALLOW_YAML_COMMENTS", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "ALLOW_UNQUOTED_FIELD_NAMES", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "ALLOW_SINGLE_QUOTES", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "ALLOW_UNQUOTED_CONTROL_CHARS", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "ALLOW_NUMERIC_LEADING_ZEROS", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "ALLOW_NON_NUMERIC_NUMBERS", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "ALLOW_MISSING_VALUES", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "ALLOW_TRAILING_COMMA", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "STRICT_DUPLICATE_DETECTION", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "IGNORE_UNDEFINED", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "INCLUDE_SOURCE_IN_LOCATION", "LComFasterxmlJacksonCoreJsonParser_Feature;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "_defaultState_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_mask_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "enabledIn", "I", "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, AUTO_CLOSE_SOURCE), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_COMMENTS), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_YAML_COMMENTS), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_UNQUOTED_FIELD_NAMES), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_SINGLE_QUOTES), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_UNQUOTED_CONTROL_CHARS), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_NUMERIC_LEADING_ZEROS), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_NON_NUMERIC_NUMBERS), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_MISSING_VALUES), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_TRAILING_COMMA), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, STRICT_DUPLICATE_DETECTION), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, IGNORE_UNDEFINED), &JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, INCLUDE_SOURCE_IN_LOCATION), "LComFasterxmlJacksonCoreJsonParser;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/core/JsonParser$Feature;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonParser_Feature = { "Feature", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x4019, 6, 16, 18, -1, -1, 19, -1 };
  return &_ComFasterxmlJacksonCoreJsonParser_Feature;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonParser_Feature class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 14 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, AUTO_CLOSE_SOURCE) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_CLOSE_SOURCE", 0);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_COMMENTS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_COMMENTS", 1);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_YAML_COMMENTS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_YAML_COMMENTS", 2);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_UNQUOTED_FIELD_NAMES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_UNQUOTED_FIELD_NAMES", 3);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_SINGLE_QUOTES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_SINGLE_QUOTES", 4);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_UNQUOTED_CONTROL_CHARS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_UNQUOTED_CONTROL_CHARS", 5);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER", 6);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_NUMERIC_LEADING_ZEROS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_NUMERIC_LEADING_ZEROS", 7);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_NON_NUMERIC_NUMBERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_NON_NUMERIC_NUMBERS", 8);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_MISSING_VALUES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_MISSING_VALUES", 9);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, ALLOW_TRAILING_COMMA) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_TRAILING_COMMA", 10);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, STRICT_DUPLICATE_DETECTION) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"STRICT_DUPLICATE_DETECTION", 11);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, IGNORE_UNDEFINED) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, false, @"IGNORE_UNDEFINED", 12);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonParser_Feature, INCLUDE_SOURCE_IN_LOCATION) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(e, true, @"INCLUDE_SOURCE_IN_LOCATION", 13);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonParser_Feature)
  }
}

@end

jint ComFasterxmlJacksonCoreJsonParser_Feature_collectDefaults() {
  ComFasterxmlJacksonCoreJsonParser_Feature_initialize();
  jint flags = 0;
  {
    IOSObjectArray *a__ = ComFasterxmlJacksonCoreJsonParser_Feature_values();
    ComFasterxmlJacksonCoreJsonParser_Feature * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComFasterxmlJacksonCoreJsonParser_Feature * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComFasterxmlJacksonCoreJsonParser_Feature *f = *b__++;
      if ([((ComFasterxmlJacksonCoreJsonParser_Feature *) nil_chk(f)) enabledByDefault]) {
        flags |= [f getMask];
      }
    }
  }
  return flags;
}

void ComFasterxmlJacksonCoreJsonParser_Feature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonCoreJsonParser_Feature *self, jboolean defaultState, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->_mask_ = (JreLShift32(1, [self ordinal]));
  self->_defaultState_ = defaultState;
}

IOSObjectArray *ComFasterxmlJacksonCoreJsonParser_Feature_values() {
  ComFasterxmlJacksonCoreJsonParser_Feature_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonCoreJsonParser_Feature_values_ count:14 type:ComFasterxmlJacksonCoreJsonParser_Feature_class_()];
}

ComFasterxmlJacksonCoreJsonParser_Feature *ComFasterxmlJacksonCoreJsonParser_Feature_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonCoreJsonParser_Feature_initialize();
  for (int i = 0; i < 14; i++) {
    ComFasterxmlJacksonCoreJsonParser_Feature *e = ComFasterxmlJacksonCoreJsonParser_Feature_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonCoreJsonParser_Feature *ComFasterxmlJacksonCoreJsonParser_Feature_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonCoreJsonParser_Feature_initialize();
  if (ordinal >= 14) {
    return nil;
  }
  return ComFasterxmlJacksonCoreJsonParser_Feature_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonParser_Feature)
