//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/JsonpCharacterEscapes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes")
#ifdef RESTRICT_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes || defined(INCLUDE_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes))
#define ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_

#define RESTRICT_ComFasterxmlJacksonCoreIoCharacterEscapes 1
#define INCLUDE_ComFasterxmlJacksonCoreIoCharacterEscapes 1
#include "com/fasterxml/jackson/core/io/CharacterEscapes.h"

@class IOSIntArray;
@protocol ComFasterxmlJacksonCoreSerializableString;

/*!
 @brief Convenience <code>CharacterEscapes</code> implementation that escapes
  Unicode characters `0x2028` and `0x2029` (in addition to characters
  escaped otherwise), which are apparently considered linefeeds as
  per newer Javascript specifications, and consequently problematic
  when using JSONP (see https://en.wikipedia.org/wiki/JSONP).
 */
@interface ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes : ComFasterxmlJacksonCoreIoCharacterEscapes

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSIntArray *)getEscapeCodesForAscii;

- (id<ComFasterxmlJacksonCoreSerializableString>)getEscapeSequenceWithInt:(jint)ch;

+ (ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes *)instance;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_init(ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes *new_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes *create_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_init(void);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes *ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes_instance(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreUtilJsonpCharacterEscapes")
