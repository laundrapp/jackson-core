//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/io/NumberInput.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/math/BigDecimal.h"

@interface ComFasterxmlJacksonCoreIoNumberInput ()

+ (JavaLangNumberFormatException *)_badBDWithNSString:(NSString *)s;

@end

__attribute__((unused)) static JavaLangNumberFormatException *ComFasterxmlJacksonCoreIoNumberInput__badBDWithNSString_(NSString *s);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreIoNumberInput)

NSString *ComFasterxmlJacksonCoreIoNumberInput_NASTY_SMALL_DOUBLE = @"2.2250738585072012e-308";
NSString *ComFasterxmlJacksonCoreIoNumberInput_MIN_LONG_STR_NO_SIGN;
NSString *ComFasterxmlJacksonCoreIoNumberInput_MAX_LONG_STR;

@implementation ComFasterxmlJacksonCoreIoNumberInput

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonCoreIoNumberInput_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)parseIntWithCharArray:(IOSCharArray *)ch
                      withInt:(jint)off
                      withInt:(jint)len {
  return ComFasterxmlJacksonCoreIoNumberInput_parseIntWithCharArray_withInt_withInt_(ch, off, len);
}

+ (jint)parseIntWithNSString:(NSString *)s {
  return ComFasterxmlJacksonCoreIoNumberInput_parseIntWithNSString_(s);
}

+ (jlong)parseLongWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)off
                        withInt:(jint)len {
  return ComFasterxmlJacksonCoreIoNumberInput_parseLongWithCharArray_withInt_withInt_(ch, off, len);
}

+ (jlong)parseLongWithNSString:(NSString *)s {
  return ComFasterxmlJacksonCoreIoNumberInput_parseLongWithNSString_(s);
}

+ (jboolean)inLongRangeWithCharArray:(IOSCharArray *)ch
                             withInt:(jint)off
                             withInt:(jint)len
                         withBoolean:(jboolean)negative {
  return ComFasterxmlJacksonCoreIoNumberInput_inLongRangeWithCharArray_withInt_withInt_withBoolean_(ch, off, len, negative);
}

+ (jboolean)inLongRangeWithNSString:(NSString *)s
                        withBoolean:(jboolean)negative {
  return ComFasterxmlJacksonCoreIoNumberInput_inLongRangeWithNSString_withBoolean_(s, negative);
}

+ (jint)parseAsIntWithNSString:(NSString *)s
                       withInt:(jint)def {
  return ComFasterxmlJacksonCoreIoNumberInput_parseAsIntWithNSString_withInt_(s, def);
}

+ (jlong)parseAsLongWithNSString:(NSString *)s
                        withLong:(jlong)def {
  return ComFasterxmlJacksonCoreIoNumberInput_parseAsLongWithNSString_withLong_(s, def);
}

+ (jdouble)parseAsDoubleWithNSString:(NSString *)s
                          withDouble:(jdouble)def {
  return ComFasterxmlJacksonCoreIoNumberInput_parseAsDoubleWithNSString_withDouble_(s, def);
}

+ (jdouble)parseDoubleWithNSString:(NSString *)s {
  return ComFasterxmlJacksonCoreIoNumberInput_parseDoubleWithNSString_(s);
}

+ (JavaMathBigDecimal *)parseBigDecimalWithNSString:(NSString *)s {
  return ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithNSString_(s);
}

+ (JavaMathBigDecimal *)parseBigDecimalWithCharArray:(IOSCharArray *)b {
  return ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithCharArray_(b);
}

+ (JavaMathBigDecimal *)parseBigDecimalWithCharArray:(IOSCharArray *)b
                                             withInt:(jint)off
                                             withInt:(jint)len {
  return ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithCharArray_withInt_withInt_(b, off, len);
}

+ (JavaLangNumberFormatException *)_badBDWithNSString:(NSString *)s {
  return ComFasterxmlJacksonCoreIoNumberInput__badBDWithNSString_(s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 3, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 13, 2, 14, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x9, 15, 2, 14, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x9, 15, 16, 14, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x9, 15, 1, 14, -1, -1, -1 },
    { NULL, "LJavaLangNumberFormatException;", 0xa, 17, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(parseIntWithCharArray:withInt:withInt:);
  methods[2].selector = @selector(parseIntWithNSString:);
  methods[3].selector = @selector(parseLongWithCharArray:withInt:withInt:);
  methods[4].selector = @selector(parseLongWithNSString:);
  methods[5].selector = @selector(inLongRangeWithCharArray:withInt:withInt:withBoolean:);
  methods[6].selector = @selector(inLongRangeWithNSString:withBoolean:);
  methods[7].selector = @selector(parseAsIntWithNSString:withInt:);
  methods[8].selector = @selector(parseAsLongWithNSString:withLong:);
  methods[9].selector = @selector(parseAsDoubleWithNSString:withDouble:);
  methods[10].selector = @selector(parseDoubleWithNSString:);
  methods[11].selector = @selector(parseBigDecimalWithNSString:);
  methods[12].selector = @selector(parseBigDecimalWithCharArray:);
  methods[13].selector = @selector(parseBigDecimalWithCharArray:withInt:withInt:);
  methods[14].selector = @selector(_badBDWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NASTY_SMALL_DOUBLE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "L_BILLION", "J", .constantValue.asLong = ComFasterxmlJacksonCoreIoNumberInput_L_BILLION, 0x18, -1, -1, -1, -1 },
    { "MIN_LONG_STR_NO_SIGN", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 19, -1, -1 },
    { "MAX_LONG_STR", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "parseInt", "[CII", "LNSString;", "parseLong", "inLongRange", "[CIIZ", "LNSString;Z", "parseAsInt", "LNSString;I", "parseAsLong", "LNSString;J", "parseAsDouble", "LNSString;D", "parseDouble", "LJavaLangNumberFormatException;", "parseBigDecimal", "[C", "_badBD", &ComFasterxmlJacksonCoreIoNumberInput_NASTY_SMALL_DOUBLE, &ComFasterxmlJacksonCoreIoNumberInput_MIN_LONG_STR_NO_SIGN, &ComFasterxmlJacksonCoreIoNumberInput_MAX_LONG_STR };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreIoNumberInput = { "NumberInput", "com.fasterxml.jackson.core.io", ptrTable, methods, fields, 7, 0x11, 15, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreIoNumberInput;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreIoNumberInput class]) {
    JreStrongAssign(&ComFasterxmlJacksonCoreIoNumberInput_MIN_LONG_STR_NO_SIGN, [((NSString *) nil_chk(NSString_java_valueOfLong_(JavaLangLong_MIN_VALUE))) java_substring:1]);
    JreStrongAssign(&ComFasterxmlJacksonCoreIoNumberInput_MAX_LONG_STR, NSString_java_valueOfLong_(JavaLangLong_MAX_VALUE));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreIoNumberInput)
  }
}

@end

void ComFasterxmlJacksonCoreIoNumberInput_init(ComFasterxmlJacksonCoreIoNumberInput *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonCoreIoNumberInput *new_ComFasterxmlJacksonCoreIoNumberInput_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreIoNumberInput, init)
}

ComFasterxmlJacksonCoreIoNumberInput *create_ComFasterxmlJacksonCoreIoNumberInput_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreIoNumberInput, init)
}

jint ComFasterxmlJacksonCoreIoNumberInput_parseIntWithCharArray_withInt_withInt_(IOSCharArray *ch, jint off, jint len) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  jint num = IOSCharArray_Get(nil_chk(ch), off) - '0';
  if (len > 4) {
    num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
    num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
    num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
    num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
    len -= 4;
    if (len > 4) {
      num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      return num;
    }
  }
  if (len > 1) {
    num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
    if (len > 2) {
      num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      if (len > 3) {
        num = (num * 10) + (IOSCharArray_Get(ch, ++off) - '0');
      }
    }
  }
  return num;
}

jint ComFasterxmlJacksonCoreIoNumberInput_parseIntWithNSString_(NSString *s) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  jchar c = [((NSString *) nil_chk(s)) charAtWithInt:0];
  jint len = [s java_length];
  jboolean neg = c == '-';
  jint offset = 1;
  if (neg) {
    if (len == 1 || len > 10) {
      return JavaLangInteger_parseIntWithNSString_(s);
    }
    c = [s charAtWithInt:offset++];
  }
  else {
    if (len > 9) {
      return JavaLangInteger_parseIntWithNSString_(s);
    }
  }
  if (c > '9' || c < '0') {
    return JavaLangInteger_parseIntWithNSString_(s);
  }
  jint num = c - '0';
  if (offset < len) {
    c = [s charAtWithInt:offset++];
    if (c > '9' || c < '0') {
      return JavaLangInteger_parseIntWithNSString_(s);
    }
    num = (num * 10) + (c - '0');
    if (offset < len) {
      c = [s charAtWithInt:offset++];
      if (c > '9' || c < '0') {
        return JavaLangInteger_parseIntWithNSString_(s);
      }
      num = (num * 10) + (c - '0');
      if (offset < len) {
        do {
          c = [s charAtWithInt:offset++];
          if (c > '9' || c < '0') {
            return JavaLangInteger_parseIntWithNSString_(s);
          }
          num = (num * 10) + (c - '0');
        }
        while (offset < len);
      }
    }
  }
  return neg ? -num : num;
}

jlong ComFasterxmlJacksonCoreIoNumberInput_parseLongWithCharArray_withInt_withInt_(IOSCharArray *ch, jint off, jint len) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  jint len1 = len - 9;
  jlong val = ComFasterxmlJacksonCoreIoNumberInput_parseIntWithCharArray_withInt_withInt_(ch, off, len1) * ComFasterxmlJacksonCoreIoNumberInput_L_BILLION;
  return val + (jlong) ComFasterxmlJacksonCoreIoNumberInput_parseIntWithCharArray_withInt_withInt_(ch, off + len1, 9);
}

jlong ComFasterxmlJacksonCoreIoNumberInput_parseLongWithNSString_(NSString *s) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  jint length = [((NSString *) nil_chk(s)) java_length];
  if (length <= 9) {
    return (jlong) ComFasterxmlJacksonCoreIoNumberInput_parseIntWithNSString_(s);
  }
  return JavaLangLong_parseLongWithNSString_(s);
}

jboolean ComFasterxmlJacksonCoreIoNumberInput_inLongRangeWithCharArray_withInt_withInt_withBoolean_(IOSCharArray *ch, jint off, jint len, jboolean negative) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  NSString *cmpStr = negative ? ComFasterxmlJacksonCoreIoNumberInput_MIN_LONG_STR_NO_SIGN : ComFasterxmlJacksonCoreIoNumberInput_MAX_LONG_STR;
  jint cmpLen = [cmpStr java_length];
  if (len < cmpLen) return true;
  if (len > cmpLen) return false;
  for (jint i = 0; i < cmpLen; ++i) {
    jint diff = IOSCharArray_Get(nil_chk(ch), off + i) - [cmpStr charAtWithInt:i];
    if (diff != 0) {
      return (diff < 0);
    }
  }
  return true;
}

jboolean ComFasterxmlJacksonCoreIoNumberInput_inLongRangeWithNSString_withBoolean_(NSString *s, jboolean negative) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  NSString *cmp = negative ? ComFasterxmlJacksonCoreIoNumberInput_MIN_LONG_STR_NO_SIGN : ComFasterxmlJacksonCoreIoNumberInput_MAX_LONG_STR;
  jint cmpLen = [cmp java_length];
  jint alen = [((NSString *) nil_chk(s)) java_length];
  if (alen < cmpLen) return true;
  if (alen > cmpLen) return false;
  for (jint i = 0; i < cmpLen; ++i) {
    jint diff = [s charAtWithInt:i] - [cmp charAtWithInt:i];
    if (diff != 0) {
      return (diff < 0);
    }
  }
  return true;
}

jint ComFasterxmlJacksonCoreIoNumberInput_parseAsIntWithNSString_withInt_(NSString *s, jint def) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  if (s == nil) {
    return def;
  }
  s = [s java_trim];
  jint len = [((NSString *) nil_chk(s)) java_length];
  if (len == 0) {
    return def;
  }
  jint i = 0;
  if (i < len) {
    jchar c = [s charAtWithInt:0];
    if (c == '+') {
      s = [s java_substring:1];
      len = [((NSString *) nil_chk(s)) java_length];
    }
    else if (c == '-') {
      ++i;
    }
  }
  for (; i < len; ++i) {
    jchar c = [s charAtWithInt:i];
    if (c > '9' || c < '0') {
      @try {
        return JreFpToInt(ComFasterxmlJacksonCoreIoNumberInput_parseDoubleWithNSString_(s));
      }
      @catch (JavaLangNumberFormatException *e) {
        return def;
      }
    }
  }
  @try {
    return JavaLangInteger_parseIntWithNSString_(s);
  }
  @catch (JavaLangNumberFormatException *e) {
  }
  return def;
}

jlong ComFasterxmlJacksonCoreIoNumberInput_parseAsLongWithNSString_withLong_(NSString *s, jlong def) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  if (s == nil) {
    return def;
  }
  s = [s java_trim];
  jint len = [((NSString *) nil_chk(s)) java_length];
  if (len == 0) {
    return def;
  }
  jint i = 0;
  if (i < len) {
    jchar c = [s charAtWithInt:0];
    if (c == '+') {
      s = [s java_substring:1];
      len = [((NSString *) nil_chk(s)) java_length];
    }
    else if (c == '-') {
      ++i;
    }
  }
  for (; i < len; ++i) {
    jchar c = [s charAtWithInt:i];
    if (c > '9' || c < '0') {
      @try {
        return JreFpToLong(ComFasterxmlJacksonCoreIoNumberInput_parseDoubleWithNSString_(s));
      }
      @catch (JavaLangNumberFormatException *e) {
        return def;
      }
    }
  }
  @try {
    return JavaLangLong_parseLongWithNSString_(s);
  }
  @catch (JavaLangNumberFormatException *e) {
  }
  return def;
}

jdouble ComFasterxmlJacksonCoreIoNumberInput_parseAsDoubleWithNSString_withDouble_(NSString *s, jdouble def) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  if (s == nil) {
    return def;
  }
  s = [s java_trim];
  jint len = [((NSString *) nil_chk(s)) java_length];
  if (len == 0) {
    return def;
  }
  @try {
    return ComFasterxmlJacksonCoreIoNumberInput_parseDoubleWithNSString_(s);
  }
  @catch (JavaLangNumberFormatException *e) {
  }
  return def;
}

jdouble ComFasterxmlJacksonCoreIoNumberInput_parseDoubleWithNSString_(NSString *s) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  if ([((NSString *) nil_chk(ComFasterxmlJacksonCoreIoNumberInput_NASTY_SMALL_DOUBLE)) isEqual:s]) {
    return JavaLangDouble_MIN_VALUE;
  }
  return JavaLangDouble_parseDoubleWithNSString_(s);
}

JavaMathBigDecimal *ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithNSString_(NSString *s) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  @try {
    return create_JavaMathBigDecimal_initWithNSString_(s);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw nil_chk(ComFasterxmlJacksonCoreIoNumberInput__badBDWithNSString_(s));
  }
}

JavaMathBigDecimal *ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithCharArray_(IOSCharArray *b) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  return ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithCharArray_withInt_withInt_(b, 0, ((IOSCharArray *) nil_chk(b))->size_);
}

JavaMathBigDecimal *ComFasterxmlJacksonCoreIoNumberInput_parseBigDecimalWithCharArray_withInt_withInt_(IOSCharArray *b, jint off, jint len) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  @try {
    return create_JavaMathBigDecimal_initWithCharArray_withInt_withInt_(b, off, len);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw nil_chk(ComFasterxmlJacksonCoreIoNumberInput__badBDWithNSString_([NSString java_stringWithCharacters:b offset:off length:len]));
  }
}

JavaLangNumberFormatException *ComFasterxmlJacksonCoreIoNumberInput__badBDWithNSString_(NSString *s) {
  ComFasterxmlJacksonCoreIoNumberInput_initialize();
  return create_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$$$", @"Value \"", s, @"\" can not be represented as BigDecimal"));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreIoNumberInput)
