//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/MergedStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/io/IOContext.h"
#include "com/fasterxml/jackson/core/io/MergedStream.h"
#include "java/io/InputStream.h"
#include "java/lang/System.h"

@interface ComFasterxmlJacksonCoreIoMergedStream () {
 @public
  ComFasterxmlJacksonCoreIoIOContext *_ctxt_;
  JavaIoInputStream *_in_;
  IOSByteArray *_b_;
  jint _ptr_;
  jint _end_;
}

- (void)_free;

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoMergedStream, _ctxt_, ComFasterxmlJacksonCoreIoIOContext *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoMergedStream, _in_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreIoMergedStream, _b_, IOSByteArray *)

__attribute__((unused)) static void ComFasterxmlJacksonCoreIoMergedStream__free(ComFasterxmlJacksonCoreIoMergedStream *self);

@implementation ComFasterxmlJacksonCoreIoMergedStream

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                               withJavaIoInputStream:(JavaIoInputStream *)inArg
                                                       withByteArray:(IOSByteArray *)buf
                                                             withInt:(jint)start
                                                             withInt:(jint)end {
  ComFasterxmlJacksonCoreIoMergedStream_initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_(self, ctxt, inArg, buf, start, end);
  return self;
}

- (jint)available {
  if (_b_ != nil) {
    return _end_ - _ptr_;
  }
  return [((JavaIoInputStream *) nil_chk(_in_)) available];
}

- (void)close {
  ComFasterxmlJacksonCoreIoMergedStream__free(self);
  [((JavaIoInputStream *) nil_chk(_in_)) close];
}

- (void)markWithInt:(jint)readlimit {
  if (_b_ == nil) {
    [((JavaIoInputStream *) nil_chk(_in_)) markWithInt:readlimit];
  }
}

- (jboolean)markSupported {
  return (_b_ == nil) && [((JavaIoInputStream *) nil_chk(_in_)) markSupported];
}

- (jint)read {
  if (_b_ != nil) {
    jint c = IOSByteArray_Get(_b_, _ptr_++) & (jint) 0xFF;
    if (_ptr_ >= _end_) {
      ComFasterxmlJacksonCoreIoMergedStream__free(self);
    }
    return c;
  }
  return [((JavaIoInputStream *) nil_chk(_in_)) read];
}

- (jint)readWithByteArray:(IOSByteArray *)b {
  return [self readWithByteArray:b withInt:0 withInt:((IOSByteArray *) nil_chk(b))->size_];
}

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len {
  if (_b_ != nil) {
    jint avail = _end_ - _ptr_;
    if (len > avail) {
      len = avail;
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(_b_, _ptr_, b, off, len);
    _ptr_ += len;
    if (_ptr_ >= _end_) {
      ComFasterxmlJacksonCoreIoMergedStream__free(self);
    }
    return len;
  }
  return [((JavaIoInputStream *) nil_chk(_in_)) readWithByteArray:b withInt:off withInt:len];
}

- (void)reset {
  if (_b_ == nil) {
    [((JavaIoInputStream *) nil_chk(_in_)) reset];
  }
}

- (jlong)skipWithLong:(jlong)n {
  jlong count = 0LL;
  if (_b_ != nil) {
    jint amount = _end_ - _ptr_;
    if (amount > n) {
      _ptr_ += (jint) n;
      return n;
    }
    ComFasterxmlJacksonCoreIoMergedStream__free(self);
    count += amount;
    n -= amount;
  }
  if (n > 0) {
    count += [((JavaIoInputStream *) nil_chk(_in_)) skipWithLong:n];
  }
  return count;
}

- (void)_free {
  ComFasterxmlJacksonCoreIoMergedStream__free(self);
}

- (void)dealloc {
  RELEASE_(_ctxt_);
  RELEASE_(_in_);
  RELEASE_(_b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 6, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 8, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreIoIOContext:withJavaIoInputStream:withByteArray:withInt:withInt:);
  methods[1].selector = @selector(available);
  methods[2].selector = @selector(close);
  methods[3].selector = @selector(markWithInt:);
  methods[4].selector = @selector(markSupported);
  methods[5].selector = @selector(read);
  methods[6].selector = @selector(readWithByteArray:);
  methods[7].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(reset);
  methods[9].selector = @selector(skipWithLong:);
  methods[10].selector = @selector(_free);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_ctxt_", "LComFasterxmlJacksonCoreIoIOContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_b_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_ptr_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_end_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreIoIOContext;LJavaIoInputStream;[BII", "LJavaIoIOException;", "mark", "I", "read", "[B", "[BII", "skip", "J" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreIoMergedStream = { "MergedStream", "com.fasterxml.jackson.core.io", ptrTable, methods, fields, 7, 0x11, 11, 5, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreIoMergedStream;
}

@end

void ComFasterxmlJacksonCoreIoMergedStream_initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_(ComFasterxmlJacksonCoreIoMergedStream *self, ComFasterxmlJacksonCoreIoIOContext *ctxt, JavaIoInputStream *inArg, IOSByteArray *buf, jint start, jint end) {
  JavaIoInputStream_init(self);
  JreStrongAssign(&self->_ctxt_, ctxt);
  JreStrongAssign(&self->_in_, inArg);
  JreStrongAssign(&self->_b_, buf);
  self->_ptr_ = start;
  self->_end_ = end;
}

ComFasterxmlJacksonCoreIoMergedStream *new_ComFasterxmlJacksonCoreIoMergedStream_initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_(ComFasterxmlJacksonCoreIoIOContext *ctxt, JavaIoInputStream *inArg, IOSByteArray *buf, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreIoMergedStream, initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_, ctxt, inArg, buf, start, end)
}

ComFasterxmlJacksonCoreIoMergedStream *create_ComFasterxmlJacksonCoreIoMergedStream_initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_(ComFasterxmlJacksonCoreIoIOContext *ctxt, JavaIoInputStream *inArg, IOSByteArray *buf, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreIoMergedStream, initWithComFasterxmlJacksonCoreIoIOContext_withJavaIoInputStream_withByteArray_withInt_withInt_, ctxt, inArg, buf, start, end)
}

void ComFasterxmlJacksonCoreIoMergedStream__free(ComFasterxmlJacksonCoreIoMergedStream *self) {
  IOSByteArray *buf = self->_b_;
  if (buf != nil) {
    JreStrongAssign(&self->_b_, nil);
    if (self->_ctxt_ != nil) {
      [self->_ctxt_ releaseReadIOBufferWithByteArray:buf];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreIoMergedStream)
