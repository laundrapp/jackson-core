//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/sym/Name1.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreSymName1")
#ifdef RESTRICT_ComFasterxmlJacksonCoreSymName1
#define INCLUDE_ALL_ComFasterxmlJacksonCoreSymName1 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreSymName1 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreSymName1

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreSymName1_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreSymName1 || defined(INCLUDE_ComFasterxmlJacksonCoreSymName1))
#define ComFasterxmlJacksonCoreSymName1_

#define RESTRICT_ComFasterxmlJacksonCoreSymName 1
#define INCLUDE_ComFasterxmlJacksonCoreSymName 1
#include "com/fasterxml/jackson/core/sym/Name.h"

@class IOSIntArray;

/*!
 @brief Specialized implementation of PName: can be used for short Strings
  that consists of at most 4 bytes.Usually this means short
  ascii-only names.
 <p>
  The reason for such specialized classes is mostly space efficiency;
  and to a lesser degree performance. Both are achieved for short
  Strings by avoiding another level of indirection (via quad arrays)
 */
@interface ComFasterxmlJacksonCoreSymName1 : ComFasterxmlJacksonCoreSymName

#pragma mark Public

- (jboolean)equalsWithInt:(jint)quad;

- (jboolean)equalsWithInt:(jint)quad1
                  withInt:(jint)quad2;

- (jboolean)equalsWithInt:(jint)q1
                  withInt:(jint)q2
                  withInt:(jint)q3;

- (jboolean)equalsWithIntArray:(IOSIntArray *)quads
                       withInt:(jint)qlen;

+ (ComFasterxmlJacksonCoreSymName1 *)getEmptyName;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                   withInt:(jint)hash_
                                   withInt:(jint)quad;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreSymName1)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(ComFasterxmlJacksonCoreSymName1 *self, NSString *name, jint hash_, jint quad);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreSymName1 *new_ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(NSString *name, jint hash_, jint quad) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreSymName1 *create_ComFasterxmlJacksonCoreSymName1_initWithNSString_withInt_withInt_(NSString *name, jint hash_, jint quad);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreSymName1 *ComFasterxmlJacksonCoreSymName1_getEmptyName(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreSymName1)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreSymName1")
