//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/SegmentedStringWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoSegmentedStringWriter")
#ifdef RESTRICT_ComFasterxmlJacksonCoreIoSegmentedStringWriter
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoSegmentedStringWriter 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoSegmentedStringWriter 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreIoSegmentedStringWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreIoSegmentedStringWriter_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreIoSegmentedStringWriter || defined(INCLUDE_ComFasterxmlJacksonCoreIoSegmentedStringWriter))
#define ComFasterxmlJacksonCoreIoSegmentedStringWriter_

#define RESTRICT_JavaIoWriter 1
#define INCLUDE_JavaIoWriter 1
#include "java/io/Writer.h"

@class ComFasterxmlJacksonCoreUtilBufferRecycler;
@class IOSCharArray;
@protocol JavaLangCharSequence;

/*!
 @brief Efficient alternative to <code>StringWriter</code>, based on using segmented
  internal buffer.Initial input buffer is also recyclable.
 <p>
  This class is most useful when serializing JSON content as a String:
  if so, instance of this class can be given as the writer to 
 <code>JsonGenerator</code>.
 */
@interface ComFasterxmlJacksonCoreIoSegmentedStringWriter : JavaIoWriter

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreUtilBufferRecycler:(ComFasterxmlJacksonCoreUtilBufferRecycler *)br;

- (JavaIoWriter *)appendWithChar:(jchar)c;

- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq;

- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                         withInt:(jint)start
                                         withInt:(jint)end;

- (void)close;

- (void)flush;

/*!
 @brief Main access method that will construct a String that contains
  all the contents, release all internal buffers we may have,
  and return result String.
 Note that the method is not idempotent -- if called second time,
  will just return an empty String.
 */
- (NSString *)getAndClear;

- (void)writeWithCharArray:(IOSCharArray *)cbuf;

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)c;

- (void)writeWithNSString:(NSString *)str;

- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)off
                  withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonCoreIoSegmentedStringWriter)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreIoSegmentedStringWriter *self, ComFasterxmlJacksonCoreUtilBufferRecycler *br);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoSegmentedStringWriter *new_ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreUtilBufferRecycler *br) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoSegmentedStringWriter *create_ComFasterxmlJacksonCoreIoSegmentedStringWriter_initWithComFasterxmlJacksonCoreUtilBufferRecycler_(ComFasterxmlJacksonCoreUtilBufferRecycler *br);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreIoSegmentedStringWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoSegmentedStringWriter")
