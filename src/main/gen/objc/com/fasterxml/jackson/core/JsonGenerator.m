//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/Base64Variants.h"
#include "com/fasterxml/jackson/core/FormatSchema.h"
#include "com/fasterxml/jackson/core/JsonGenerationException.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/JsonTokenId.h"
#include "com/fasterxml/jackson/core/ObjectWriteContext.h"
#include "com/fasterxml/jackson/core/PrettyPrinter.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/TokenStreamContext.h"
#include "com/fasterxml/jackson/core/TreeNode.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/io/CharacterEscapes.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/core/util/VersionUtil.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(ComFasterxmlJacksonCoreJsonGenerator *self, jint arrayLength, jint offset, jint length);

@interface ComFasterxmlJacksonCoreJsonGenerator_Feature () {
 @public
  jboolean _defaultState_;
  jint _mask_;
}

@end

__attribute__((unused)) static void ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonCoreJsonGenerator_Feature *self, jboolean defaultState, NSString *__name, jint __ordinal);

@implementation ComFasterxmlJacksonCoreJsonGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonCoreJsonGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComFasterxmlJacksonCoreVersion *)version__ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreTokenStreamContext *)getOutputContext {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonCoreObjectWriteContext>)getObjectWriteContext {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getOutputTarget {
  return nil;
}

- (jint)getOutputBuffered {
  return -1;
}

- (id)getCurrentValue {
  ComFasterxmlJacksonCoreTokenStreamContext *ctxt = [self getOutputContext];
  return (ctxt == nil) ? nil : [((ComFasterxmlJacksonCoreTokenStreamContext *) nil_chk(ctxt)) getCurrentValue];
}

- (void)setCurrentValueWithId:(id)v {
  ComFasterxmlJacksonCoreTokenStreamContext *ctxt = [self getOutputContext];
  if (ctxt != nil) {
    [ctxt setCurrentValueWithId:v];
  }
}

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)configureWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f
                                                                                        withBoolean:(jboolean)state {
  if (state) [self enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:f];
  else [self disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:f];
  return self;
}

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getGeneratorFeatures {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getFormatFeatures {
  return 0;
}

- (void)setSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  NSString *schemaType = (schema == nil) ? @"NULL" : [((id<ComFasterxmlJacksonCoreFormatSchema>) nil_chk(schema)) getSchemaType];
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$$$C", @"Generator of type ", [[self java_getClass] getName], @" does not support schema of type '", schemaType, '\''));
}

- (id<ComFasterxmlJacksonCoreFormatSchema>)getSchema {
  return nil;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setPrettyPrinterWithComFasterxmlJacksonCorePrettyPrinter:(id<ComFasterxmlJacksonCorePrettyPrinter>)pp {
  return [self _reportUnsupportedOperation];
}

- (id<ComFasterxmlJacksonCorePrettyPrinter>)getPrettyPrinter {
  return nil;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)useDefaultPrettyPrinter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setHighestNonEscapedCharWithInt:(jint)charCode {
  return self;
}

- (jint)getHighestEscapedChar {
  return 0;
}

- (ComFasterxmlJacksonCoreIoCharacterEscapes *)getCharacterEscapes {
  return nil;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:(ComFasterxmlJacksonCoreIoCharacterEscapes *)esc {
  return self;
}

- (jboolean)canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:(id<ComFasterxmlJacksonCoreFormatSchema>)schema {
  return false;
}

- (jboolean)canWriteObjectId {
  return false;
}

- (jboolean)canWriteTypeId {
  return false;
}

- (jboolean)canWriteBinaryNatively {
  return false;
}

- (jboolean)canOmitFields {
  return true;
}

- (jboolean)canWriteFormattedNumbers {
  return false;
}

- (void)writeStartArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStartArrayWithInt:(jint)size {
  [self writeStartArray];
}

- (void)writeStartArrayWithId:(id)forValue
                      withInt:(jint)size {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeEndArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStartObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStartObjectWithId:(id)forValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeEndObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeFieldNameWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeFieldIdWithLong:(jlong)id_ {
  [self writeFieldNameWithNSString:JavaLangLong_toStringWithLong_(id_)];
}

- (void)writeArrayWithIntArray:(IOSIntArray *)array
                       withInt:(jint)offset
                       withInt:(jint)length {
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"null array");
  }
  ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(self, array->size_, offset, length);
  [self writeStartArray];
  for (jint i = offset, end = offset + length; i < end; ++i) {
    [self writeNumberWithInt:IOSIntArray_Get(array, i)];
  }
  [self writeEndArray];
}

- (void)writeArrayWithLongArray:(IOSLongArray *)array
                        withInt:(jint)offset
                        withInt:(jint)length {
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"null array");
  }
  ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(self, array->size_, offset, length);
  [self writeStartArray];
  for (jint i = offset, end = offset + length; i < end; ++i) {
    [self writeNumberWithLong:IOSLongArray_Get(array, i)];
  }
  [self writeEndArray];
}

- (void)writeArrayWithDoubleArray:(IOSDoubleArray *)array
                          withInt:(jint)offset
                          withInt:(jint)length {
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"null array");
  }
  ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(self, array->size_, offset, length);
  [self writeStartArray];
  for (jint i = offset, end = offset + length; i < end; ++i) {
    [self writeNumberWithDouble:IOSDoubleArray_Get(array, i)];
  }
  [self writeEndArray];
}

- (void)writeStringWithNSString:(NSString *)text {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStringWithJavaIoReader:(JavaIoReader *)reader
                            withInt:(jint)len {
  [self _reportUnsupportedOperation];
}

- (void)writeStringWithCharArray:(IOSCharArray *)text
                         withInt:(jint)offset
                         withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawUTF8StringWithByteArray:(IOSByteArray *)text
                                withInt:(jint)offset
                                withInt:(jint)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeUTF8StringWithByteArray:(IOSByteArray *)text
                             withInt:(jint)offset
                             withInt:(jint)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawWithNSString:(NSString *)text {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawWithNSString:(NSString *)text
                     withInt:(jint)offset
                     withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawWithCharArray:(IOSCharArray *)text
                      withInt:(jint)offset
                      withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawWithChar:(jchar)c {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)raw {
  [self writeRawWithNSString:[((id<ComFasterxmlJacksonCoreSerializableString>) nil_chk(raw)) getValue]];
}

- (void)writeRawValueWithNSString:(NSString *)text {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawValueWithNSString:(NSString *)text
                          withInt:(jint)offset
                          withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawValueWithCharArray:(IOSCharArray *)text
                           withInt:(jint)offset
                           withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeRawValueWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)raw {
  [self writeRawValueWithNSString:[((id<ComFasterxmlJacksonCoreSerializableString>) nil_chk(raw)) getValue]];
}

- (void)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)bv
                                              withByteArray:(IOSByteArray *)data
                                                    withInt:(jint)offset
                                                    withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeBinaryWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)len {
  [self writeBinaryWithComFasterxmlJacksonCoreBase64Variant:ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant() withByteArray:data withInt:offset withInt:len];
}

- (void)writeBinaryWithByteArray:(IOSByteArray *)data {
  [self writeBinaryWithComFasterxmlJacksonCoreBase64Variant:ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant() withByteArray:data withInt:0 withInt:((IOSByteArray *) nil_chk(data))->size_];
}

- (jint)writeBinaryWithJavaIoInputStream:(JavaIoInputStream *)data
                                 withInt:(jint)dataLength {
  return [self writeBinaryWithComFasterxmlJacksonCoreBase64Variant:ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant() withJavaIoInputStream:data withInt:dataLength];
}

- (jint)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)bv
                                      withJavaIoInputStream:(JavaIoInputStream *)data
                                                    withInt:(jint)dataLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)writeNumberWithShort:(jshort)v {
  [self writeNumberWithInt:(jint) v];
}

- (void)writeNumberWithInt:(jint)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithLong:(jlong)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithJavaMathBigInteger:(JavaMathBigInteger *)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithDouble:(jdouble)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithFloat:(jfloat)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithJavaMathBigDecimal:(JavaMathBigDecimal *)v {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNumberWithNSString:(NSString *)encodedValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeBooleanWithBoolean:(jboolean)state {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeNull {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeEmbeddedObjectWithId:(id)object {
  if (object == nil) {
    [self writeNull];
    return;
  }
  if ([object isKindOfClass:[IOSByteArray class]]) {
    [self writeBinaryWithByteArray:(IOSByteArray *) cast_chk(object, [IOSByteArray class])];
    return;
  }
  @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(JreStrcat("$$", @"No native support for writing embedded objects of type ", [[object java_getClass] getName]), self);
}

- (void)writeObjectIdWithId:(id)id_ {
  @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(@"No native support for writing Object Ids", self);
}

- (void)writeObjectRefWithId:(id)id_ {
  @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(@"No native support for writing Object Ids", self);
}

- (void)writeTypeIdWithId:(id)id_ {
  @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(@"No native support for writing Type Ids", self);
}

- (ComFasterxmlJacksonCoreTypeWritableTypeId *)writeTypePrefixWithComFasterxmlJacksonCoreTypeWritableTypeId:(ComFasterxmlJacksonCoreTypeWritableTypeId *)typeIdDef {
  id id_ = ((ComFasterxmlJacksonCoreTypeWritableTypeId *) nil_chk(typeIdDef))->id__;
  ComFasterxmlJacksonCoreJsonToken *valueShape = typeIdDef->valueShape_;
  if ([self canWriteTypeId]) {
    typeIdDef->wrapperWritten_ = false;
    [self writeTypeIdWithId:id_];
  }
  else {
    NSString *idStr = ([id_ isKindOfClass:[NSString class]]) ? (NSString *) cast_chk(id_, [NSString class]) : NSString_java_valueOf_(id_);
    typeIdDef->wrapperWritten_ = true;
    ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion *incl = typeIdDef->include_;
    if ((valueShape != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) && [((ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion *) nil_chk(incl)) requiresObjectContext]) {
      JreStrongAssign(&typeIdDef->include_, incl = JreLoadEnum(ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion, WRAPPER_ARRAY));
    }
    switch ([incl ordinal]) {
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_PARENT_PROPERTY:
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_PAYLOAD_PROPERTY:
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_METADATA_PROPERTY:
      [self writeStartObjectWithId:typeIdDef->forValue_];
      [self writeStringFieldWithNSString:typeIdDef->asProperty_ withNSString:idStr];
      return typeIdDef;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_WRAPPER_OBJECT:
      [self writeStartObject];
      [self writeFieldNameWithNSString:idStr];
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_WRAPPER_ARRAY:
      default:
      [self writeStartArray];
      [self writeStringWithNSString:idStr];
    }
  }
  if (valueShape == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) {
    [self writeStartObjectWithId:typeIdDef->forValue_];
  }
  else if (valueShape == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    [self writeStartArray];
  }
  return typeIdDef;
}

- (ComFasterxmlJacksonCoreTypeWritableTypeId *)writeTypeSuffixWithComFasterxmlJacksonCoreTypeWritableTypeId:(ComFasterxmlJacksonCoreTypeWritableTypeId *)typeIdDef {
  ComFasterxmlJacksonCoreJsonToken *valueShape = ((ComFasterxmlJacksonCoreTypeWritableTypeId *) nil_chk(typeIdDef))->valueShape_;
  if (valueShape == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) {
    [self writeEndObject];
  }
  else if (valueShape == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    [self writeEndArray];
  }
  if (typeIdDef->wrapperWritten_) {
    switch ([typeIdDef->include_ ordinal]) {
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_WRAPPER_ARRAY:
      [self writeEndArray];
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_PARENT_PROPERTY:
      {
        id id_ = typeIdDef->id__;
        NSString *idStr = ([id_ isKindOfClass:[NSString class]]) ? (NSString *) cast_chk(id_, [NSString class]) : NSString_java_valueOf_(id_);
        [self writeStringFieldWithNSString:typeIdDef->asProperty_ withNSString:idStr];
      }
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_METADATA_PROPERTY:
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_PAYLOAD_PROPERTY:
      break;
      case ComFasterxmlJacksonCoreTypeWritableTypeId_Inclusion_Enum_WRAPPER_OBJECT:
      default:
      [self writeEndObject];
      break;
    }
  }
  return typeIdDef;
}

- (void)writeObjectWithId:(id)pojo {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeTreeWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)rootNode {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeStringFieldWithNSString:(NSString *)fieldName
                        withNSString:(NSString *)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeStringWithNSString:value];
}

- (void)writeBooleanFieldWithNSString:(NSString *)fieldName
                          withBoolean:(jboolean)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeBooleanWithBoolean:value];
}

- (void)writeNullFieldWithNSString:(NSString *)fieldName {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNull];
}

- (void)writeNumberFieldWithNSString:(NSString *)fieldName
                             withInt:(jint)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNumberWithInt:value];
}

- (void)writeNumberFieldWithNSString:(NSString *)fieldName
                            withLong:(jlong)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNumberWithLong:value];
}

- (void)writeNumberFieldWithNSString:(NSString *)fieldName
                          withDouble:(jdouble)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNumberWithDouble:value];
}

- (void)writeNumberFieldWithNSString:(NSString *)fieldName
                           withFloat:(jfloat)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNumberWithFloat:value];
}

- (void)writeNumberFieldWithNSString:(NSString *)fieldName
              withJavaMathBigDecimal:(JavaMathBigDecimal *)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeNumberWithJavaMathBigDecimal:value];
}

- (void)writeBinaryFieldWithNSString:(NSString *)fieldName
                       withByteArray:(IOSByteArray *)data {
  [self writeFieldNameWithNSString:fieldName];
  [self writeBinaryWithByteArray:data];
}

- (void)writeArrayFieldStartWithNSString:(NSString *)fieldName {
  [self writeFieldNameWithNSString:fieldName];
  [self writeStartArray];
}

- (void)writeObjectFieldStartWithNSString:(NSString *)fieldName {
  [self writeFieldNameWithNSString:fieldName];
  [self writeStartObject];
}

- (void)writeObjectFieldWithNSString:(NSString *)fieldName
                              withId:(id)pojo {
  [self writeFieldNameWithNSString:fieldName];
  [self writeObjectWithId:pojo];
}

- (void)writeOmittedFieldWithNSString:(NSString *)fieldName {
}

- (void)copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) currentToken];
  if (t == nil) {
    [self _reportErrorWithNSString:@"No current event to copy"];
  }
  switch ([((ComFasterxmlJacksonCoreJsonToken *) nil_chk(t)) id__]) {
    case ComFasterxmlJacksonCoreJsonTokenId_ID_NOT_AVAILABLE:
    [self _reportErrorWithNSString:@"No current event to copy"];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT:
    [self writeStartObject];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_END_OBJECT:
    [self writeEndObject];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY:
    [self writeStartArray];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_END_ARRAY:
    [self writeEndArray];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME:
    [self writeFieldNameWithNSString:[p currentName]];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_STRING:
    if ([p hasTextCharacters]) {
      [self writeStringWithCharArray:[p getTextCharacters] withInt:[p getTextOffset] withInt:[p getTextLength]];
    }
    else {
      [self writeStringWithNSString:[p getText]];
    }
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_NUMBER_INT:
    {
      ComFasterxmlJacksonCoreJsonParser_NumberType *n = [p getNumberType];
      if (n == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT)) {
        [self writeNumberWithInt:[p getIntValue]];
      }
      else if (n == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_INTEGER)) {
        [self writeNumberWithJavaMathBigInteger:[p getBigIntegerValue]];
      }
      else {
        [self writeNumberWithLong:[p getLongValue]];
      }
      break;
    }
    case ComFasterxmlJacksonCoreJsonTokenId_ID_NUMBER_FLOAT:
    {
      ComFasterxmlJacksonCoreJsonParser_NumberType *n = [p getNumberType];
      if (n == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_DECIMAL)) {
        [self writeNumberWithJavaMathBigDecimal:[p getDecimalValue]];
      }
      else if (n == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, FLOAT)) {
        [self writeNumberWithFloat:[p getFloatValue]];
      }
      else {
        [self writeNumberWithDouble:[p getDoubleValue]];
      }
      break;
    }
    case ComFasterxmlJacksonCoreJsonTokenId_ID_TRUE:
    [self writeBooleanWithBoolean:true];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_FALSE:
    [self writeBooleanWithBoolean:false];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_NULL:
    [self writeNull];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_EMBEDDED_OBJECT:
    [self writeObjectWithId:[p getEmbeddedObject]];
    break;
    default:
    [self _throwInternal];
  }
}

- (void)copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) currentToken];
  if (t == nil) {
    [self _reportErrorWithNSString:@"No current event to copy"];
  }
  jint id_ = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(t)) id__];
  if (id_ == ComFasterxmlJacksonCoreJsonTokenId_ID_FIELD_NAME) {
    [self writeFieldNameWithNSString:[p currentName]];
    t = [p nextToken];
    id_ = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(t)) id__];
  }
  switch (id_) {
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_OBJECT:
    [self writeStartObject];
    while ([p nextToken] != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
      [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
    }
    [self writeEndObject];
    break;
    case ComFasterxmlJacksonCoreJsonTokenId_ID_START_ARRAY:
    [self writeStartArray];
    while ([p nextToken] != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
      [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
    }
    [self writeEndArray];
    break;
    default:
    [self copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:p];
  }
}

- (void)flush {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)isClosed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)_reportErrorWithNSString:(NSString *)msg {
  @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(msg, self);
}

- (void)_throwInternal {
  ComFasterxmlJacksonCoreUtilVersionUtil_throwInternal();
}

- (id)_reportUnsupportedOperation {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$", @"Operation not supported by generator of type ", [[self java_getClass] getName]));
}

- (void)_verifyOffsetsWithInt:(jint)arrayLength
                      withInt:(jint)offset
                      withInt:(jint)length {
  ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(self, arrayLength, offset, length);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x401, 0, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTokenStreamContext;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectWriteContext;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x401, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x11, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 8, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreFormatSchema;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCorePrettyPrinter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreIoCharacterEscapes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 14, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 19, 20, 18, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 21, 2, 18, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 22, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 22, 24, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 29, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 30, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 31, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 32, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 31, 33, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 31, 24, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 34, 35, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 36, 35, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 37, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 37, 38, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 37, 33, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 37, 39, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 24, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 40, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 40, 38, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 40, 33, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 24, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 41, 42, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 35, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 43, 18, -1, -1, -1 },
    { NULL, "I", 0x1, 41, 44, 18, -1, -1, -1 },
    { NULL, "I", 0x401, 41, 45, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 47, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 14, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 26, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 48, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 49, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 50, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 51, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 46, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 52, 53, 18, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 2, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 2, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 56, 2, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 2, 18, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTypeWritableTypeId;", 0x1, 58, 59, 18, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTypeWritableTypeId;", 0x1, 60, 59, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 61, 2, 18, -1, -1, -1 },
    { NULL, "V", 0x401, 62, 63, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 64, 65, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 66, 67, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 68, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 69, 70, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 69, 71, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 69, 72, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 69, 73, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 69, 74, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 75, 76, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 77, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 78, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x11, 79, 80, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 81, 23, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 82, 83, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 84, 83, 18, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 85, 23, 86, 87, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, 88, -1, -1 },
    { NULL, "V", 0x14, 89, 90, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(version__);
  methods[2].selector = @selector(getOutputContext);
  methods[3].selector = @selector(getObjectWriteContext);
  methods[4].selector = @selector(getOutputTarget);
  methods[5].selector = @selector(getOutputBuffered);
  methods[6].selector = @selector(getCurrentValue);
  methods[7].selector = @selector(setCurrentValueWithId:);
  methods[8].selector = @selector(enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[9].selector = @selector(disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[10].selector = @selector(configureWithComFasterxmlJacksonCoreJsonGenerator_Feature:withBoolean:);
  methods[11].selector = @selector(isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[12].selector = @selector(getGeneratorFeatures);
  methods[13].selector = @selector(getFormatFeatures);
  methods[14].selector = @selector(setSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[15].selector = @selector(getSchema);
  methods[16].selector = @selector(setPrettyPrinterWithComFasterxmlJacksonCorePrettyPrinter:);
  methods[17].selector = @selector(getPrettyPrinter);
  methods[18].selector = @selector(useDefaultPrettyPrinter);
  methods[19].selector = @selector(setHighestNonEscapedCharWithInt:);
  methods[20].selector = @selector(getHighestEscapedChar);
  methods[21].selector = @selector(getCharacterEscapes);
  methods[22].selector = @selector(setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:);
  methods[23].selector = @selector(canUseSchemaWithComFasterxmlJacksonCoreFormatSchema:);
  methods[24].selector = @selector(canWriteObjectId);
  methods[25].selector = @selector(canWriteTypeId);
  methods[26].selector = @selector(canWriteBinaryNatively);
  methods[27].selector = @selector(canOmitFields);
  methods[28].selector = @selector(canWriteFormattedNumbers);
  methods[29].selector = @selector(writeStartArray);
  methods[30].selector = @selector(writeStartArrayWithInt:);
  methods[31].selector = @selector(writeStartArrayWithId:withInt:);
  methods[32].selector = @selector(writeEndArray);
  methods[33].selector = @selector(writeStartObject);
  methods[34].selector = @selector(writeStartObjectWithId:);
  methods[35].selector = @selector(writeEndObject);
  methods[36].selector = @selector(writeFieldNameWithNSString:);
  methods[37].selector = @selector(writeFieldNameWithComFasterxmlJacksonCoreSerializableString:);
  methods[38].selector = @selector(writeFieldIdWithLong:);
  methods[39].selector = @selector(writeArrayWithIntArray:withInt:withInt:);
  methods[40].selector = @selector(writeArrayWithLongArray:withInt:withInt:);
  methods[41].selector = @selector(writeArrayWithDoubleArray:withInt:withInt:);
  methods[42].selector = @selector(writeStringWithNSString:);
  methods[43].selector = @selector(writeStringWithJavaIoReader:withInt:);
  methods[44].selector = @selector(writeStringWithCharArray:withInt:withInt:);
  methods[45].selector = @selector(writeStringWithComFasterxmlJacksonCoreSerializableString:);
  methods[46].selector = @selector(writeRawUTF8StringWithByteArray:withInt:withInt:);
  methods[47].selector = @selector(writeUTF8StringWithByteArray:withInt:withInt:);
  methods[48].selector = @selector(writeRawWithNSString:);
  methods[49].selector = @selector(writeRawWithNSString:withInt:withInt:);
  methods[50].selector = @selector(writeRawWithCharArray:withInt:withInt:);
  methods[51].selector = @selector(writeRawWithChar:);
  methods[52].selector = @selector(writeRawWithComFasterxmlJacksonCoreSerializableString:);
  methods[53].selector = @selector(writeRawValueWithNSString:);
  methods[54].selector = @selector(writeRawValueWithNSString:withInt:withInt:);
  methods[55].selector = @selector(writeRawValueWithCharArray:withInt:withInt:);
  methods[56].selector = @selector(writeRawValueWithComFasterxmlJacksonCoreSerializableString:);
  methods[57].selector = @selector(writeBinaryWithComFasterxmlJacksonCoreBase64Variant:withByteArray:withInt:withInt:);
  methods[58].selector = @selector(writeBinaryWithByteArray:withInt:withInt:);
  methods[59].selector = @selector(writeBinaryWithByteArray:);
  methods[60].selector = @selector(writeBinaryWithJavaIoInputStream:withInt:);
  methods[61].selector = @selector(writeBinaryWithComFasterxmlJacksonCoreBase64Variant:withJavaIoInputStream:withInt:);
  methods[62].selector = @selector(writeNumberWithShort:);
  methods[63].selector = @selector(writeNumberWithInt:);
  methods[64].selector = @selector(writeNumberWithLong:);
  methods[65].selector = @selector(writeNumberWithJavaMathBigInteger:);
  methods[66].selector = @selector(writeNumberWithDouble:);
  methods[67].selector = @selector(writeNumberWithFloat:);
  methods[68].selector = @selector(writeNumberWithJavaMathBigDecimal:);
  methods[69].selector = @selector(writeNumberWithNSString:);
  methods[70].selector = @selector(writeBooleanWithBoolean:);
  methods[71].selector = @selector(writeNull);
  methods[72].selector = @selector(writeEmbeddedObjectWithId:);
  methods[73].selector = @selector(writeObjectIdWithId:);
  methods[74].selector = @selector(writeObjectRefWithId:);
  methods[75].selector = @selector(writeTypeIdWithId:);
  methods[76].selector = @selector(writeTypePrefixWithComFasterxmlJacksonCoreTypeWritableTypeId:);
  methods[77].selector = @selector(writeTypeSuffixWithComFasterxmlJacksonCoreTypeWritableTypeId:);
  methods[78].selector = @selector(writeObjectWithId:);
  methods[79].selector = @selector(writeTreeWithComFasterxmlJacksonCoreTreeNode:);
  methods[80].selector = @selector(writeStringFieldWithNSString:withNSString:);
  methods[81].selector = @selector(writeBooleanFieldWithNSString:withBoolean:);
  methods[82].selector = @selector(writeNullFieldWithNSString:);
  methods[83].selector = @selector(writeNumberFieldWithNSString:withInt:);
  methods[84].selector = @selector(writeNumberFieldWithNSString:withLong:);
  methods[85].selector = @selector(writeNumberFieldWithNSString:withDouble:);
  methods[86].selector = @selector(writeNumberFieldWithNSString:withFloat:);
  methods[87].selector = @selector(writeNumberFieldWithNSString:withJavaMathBigDecimal:);
  methods[88].selector = @selector(writeBinaryFieldWithNSString:withByteArray:);
  methods[89].selector = @selector(writeArrayFieldStartWithNSString:);
  methods[90].selector = @selector(writeObjectFieldStartWithNSString:);
  methods[91].selector = @selector(writeObjectFieldWithNSString:withId:);
  methods[92].selector = @selector(writeOmittedFieldWithNSString:);
  methods[93].selector = @selector(copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:);
  methods[94].selector = @selector(copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:);
  methods[95].selector = @selector(flush);
  methods[96].selector = @selector(isClosed);
  methods[97].selector = @selector(close);
  methods[98].selector = @selector(_reportErrorWithNSString:);
  methods[99].selector = @selector(_throwInternal);
  methods[100].selector = @selector(_reportUnsupportedOperation);
  methods[101].selector = @selector(_verifyOffsetsWithInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "version", "setCurrentValue", "LNSObject;", "enable", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", "disable", "configure", "LComFasterxmlJacksonCoreJsonGenerator_Feature;Z", "isEnabled", "setSchema", "LComFasterxmlJacksonCoreFormatSchema;", "setPrettyPrinter", "LComFasterxmlJacksonCorePrettyPrinter;", "setHighestNonEscapedChar", "I", "setCharacterEscapes", "LComFasterxmlJacksonCoreIoCharacterEscapes;", "canUseSchema", "LJavaIoIOException;", "writeStartArray", "LNSObject;I", "writeStartObject", "writeFieldName", "LNSString;", "LComFasterxmlJacksonCoreSerializableString;", "writeFieldId", "J", "writeArray", "[III", "[JII", "[DII", "writeString", "LJavaIoReader;I", "[CII", "writeRawUTF8String", "[BII", "writeUTF8String", "writeRaw", "LNSString;II", "C", "writeRawValue", "writeBinary", "LComFasterxmlJacksonCoreBase64Variant;[BII", "[B", "LJavaIoInputStream;I", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoInputStream;I", "writeNumber", "S", "LJavaMathBigInteger;", "D", "F", "LJavaMathBigDecimal;", "writeBoolean", "Z", "writeEmbeddedObject", "writeObjectId", "writeObjectRef", "writeTypeId", "writeTypePrefix", "LComFasterxmlJacksonCoreTypeWritableTypeId;", "writeTypeSuffix", "writeObject", "writeTree", "LComFasterxmlJacksonCoreTreeNode;", "writeStringField", "LNSString;LNSString;", "writeBooleanField", "LNSString;Z", "writeNullField", "writeNumberField", "LNSString;I", "LNSString;J", "LNSString;D", "LNSString;F", "LNSString;LJavaMathBigDecimal;", "writeBinaryField", "LNSString;[B", "writeArrayFieldStart", "writeObjectFieldStart", "writeObjectField", "LNSString;LNSObject;", "writeOmittedField", "copyCurrentEvent", "LComFasterxmlJacksonCoreJsonParser;", "copyCurrentStructure", "_reportError", "LComFasterxmlJacksonCoreJsonGenerationException;", "<T:Ljava/lang/Object;>(Ljava/lang/String;)TT;", "<T:Ljava/lang/Object;>()TT;", "_verifyOffsets", "III" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonGenerator = { "JsonGenerator", "com.fasterxml.jackson.core", ptrTable, methods, NULL, 7, 0x401, 102, 0, -1, 4, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonGenerator;
}

@end

void ComFasterxmlJacksonCoreJsonGenerator_init(ComFasterxmlJacksonCoreJsonGenerator *self) {
  NSObject_init(self);
}

void ComFasterxmlJacksonCoreJsonGenerator__verifyOffsetsWithInt_withInt_withInt_(ComFasterxmlJacksonCoreJsonGenerator *self, jint arrayLength, jint offset, jint length) {
  if ((offset < 0) || (offset + length) > arrayLength) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"invalid argument(s) (offset=%d, length=%d) for input array of %d element", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(offset), JavaLangInteger_valueOfWithInt_(length), JavaLangInteger_valueOfWithInt_(arrayLength) } count:3 type:NSObject_class_()]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonGenerator)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonGenerator_Feature)

ComFasterxmlJacksonCoreJsonGenerator_Feature *ComFasterxmlJacksonCoreJsonGenerator_Feature_values_[10];

@implementation ComFasterxmlJacksonCoreJsonGenerator_Feature

+ (jint)collectDefaults {
  return ComFasterxmlJacksonCoreJsonGenerator_Feature_collectDefaults();
}

- (jboolean)enabledByDefault {
  return _defaultState_;
}

- (jboolean)enabledInWithInt:(jint)flags {
  return (flags & _mask_) != 0;
}

- (jint)getMask {
  return _mask_;
}

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonCoreJsonGenerator_Feature_values();
}

+ (ComFasterxmlJacksonCoreJsonGenerator_Feature *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonCoreJsonGenerator_Feature_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonCoreJsonGenerator_Feature;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator_Feature;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(collectDefaults);
  methods[1].selector = @selector(enabledByDefault);
  methods[2].selector = @selector(enabledInWithInt:);
  methods[3].selector = @selector(getMask);
  methods[4].selector = @selector(values);
  methods[5].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AUTO_CLOSE_TARGET", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "AUTO_CLOSE_CONTENT", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "FLUSH_PASSED_TO_STREAM", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "QUOTE_FIELD_NAMES", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "QUOTE_NON_NUMERIC_NUMBERS", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "WRITE_NUMBERS_AS_STRINGS", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "WRITE_BIGDECIMAL_AS_PLAIN", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "ESCAPE_NON_ASCII", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "STRICT_DUPLICATE_DETECTION", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "IGNORE_UNKNOWN", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "_defaultState_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_mask_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "enabledIn", "I", "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_TARGET), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_CONTENT), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, FLUSH_PASSED_TO_STREAM), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_NON_NUMERIC_NUMBERS), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_BIGDECIMAL_AS_PLAIN), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION), &JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, IGNORE_UNKNOWN), "LComFasterxmlJacksonCoreJsonGenerator;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/core/JsonGenerator$Feature;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonGenerator_Feature = { "Feature", "com.fasterxml.jackson.core", ptrTable, methods, fields, 7, 0x4019, 6, 12, 14, -1, -1, 15, -1 };
  return &_ComFasterxmlJacksonCoreJsonGenerator_Feature;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonGenerator_Feature class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 10 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_TARGET) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_CLOSE_TARGET", 0);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_CONTENT) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_CLOSE_CONTENT", 1);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, FLUSH_PASSED_TO_STREAM) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, true, @"FLUSH_PASSED_TO_STREAM", 2);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, true, @"QUOTE_FIELD_NAMES", 3);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_NON_NUMERIC_NUMBERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, true, @"QUOTE_NON_NUMERIC_NUMBERS", 4);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_NUMBERS_AS_STRINGS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, false, @"WRITE_NUMBERS_AS_STRINGS", 5);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, WRITE_BIGDECIMAL_AS_PLAIN) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, false, @"WRITE_BIGDECIMAL_AS_PLAIN", 6);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, false, @"ESCAPE_NON_ASCII", 7);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, STRICT_DUPLICATE_DETECTION) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, false, @"STRICT_DUPLICATE_DETECTION", 8);
    ((void) (JreEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, IGNORE_UNKNOWN) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(e, false, @"IGNORE_UNKNOWN", 9);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonGenerator_Feature)
  }
}

@end

jint ComFasterxmlJacksonCoreJsonGenerator_Feature_collectDefaults() {
  ComFasterxmlJacksonCoreJsonGenerator_Feature_initialize();
  jint flags = 0;
  {
    IOSObjectArray *a__ = ComFasterxmlJacksonCoreJsonGenerator_Feature_values();
    ComFasterxmlJacksonCoreJsonGenerator_Feature * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComFasterxmlJacksonCoreJsonGenerator_Feature * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComFasterxmlJacksonCoreJsonGenerator_Feature *f = *b__++;
      if ([((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) enabledByDefault]) {
        flags |= [f getMask];
      }
    }
  }
  return flags;
}

void ComFasterxmlJacksonCoreJsonGenerator_Feature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonCoreJsonGenerator_Feature *self, jboolean defaultState, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->_defaultState_ = defaultState;
  self->_mask_ = (JreLShift32(1, [self ordinal]));
}

IOSObjectArray *ComFasterxmlJacksonCoreJsonGenerator_Feature_values() {
  ComFasterxmlJacksonCoreJsonGenerator_Feature_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonCoreJsonGenerator_Feature_values_ count:10 type:ComFasterxmlJacksonCoreJsonGenerator_Feature_class_()];
}

ComFasterxmlJacksonCoreJsonGenerator_Feature *ComFasterxmlJacksonCoreJsonGenerator_Feature_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonCoreJsonGenerator_Feature_initialize();
  for (int i = 0; i < 10; i++) {
    ComFasterxmlJacksonCoreJsonGenerator_Feature *e = ComFasterxmlJacksonCoreJsonGenerator_Feature_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonCoreJsonGenerator_Feature *ComFasterxmlJacksonCoreJsonGenerator_Feature_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonCoreJsonGenerator_Feature_initialize();
  if (ordinal >= 10) {
    return nil;
  }
  return ComFasterxmlJacksonCoreJsonGenerator_Feature_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonGenerator_Feature)
