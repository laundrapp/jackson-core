//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/ObjectCodec.h"
#include "com/fasterxml/jackson/core/PrettyPrinter.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/base/GeneratorBase.h"
#include "com/fasterxml/jackson/core/io/CharTypes.h"
#include "com/fasterxml/jackson/core/io/CharacterEscapes.h"
#include "com/fasterxml/jackson/core/io/IOContext.h"
#include "com/fasterxml/jackson/core/io/SerializedString.h"
#include "com/fasterxml/jackson/core/json/JsonGeneratorImpl.h"
#include "com/fasterxml/jackson/core/json/JsonWriteContext.h"
#include "com/fasterxml/jackson/core/util/DefaultPrettyPrinter.h"
#include "com/fasterxml/jackson/core/util/VersionUtil.h"

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl)

IOSIntArray *ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes;

@implementation ComFasterxmlJacksonCoreJsonJsonGeneratorImpl

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                             withInt:(jint)features
                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec {
  ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_initWithComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreObjectCodec_(self, ctxt, features, codec);
  return self;
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  return ComFasterxmlJacksonCoreUtilVersionUtil_versionForWithIOSClass_([self java_getClass]);
}

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  [super enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:f];
  if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES)) {
    _cfgUnqNames_ = false;
  }
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  [super disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:f];
  if (f == JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES)) {
    _cfgUnqNames_ = true;
  }
  return self;
}

- (void)_checkStdFeatureChangesWithInt:(jint)newFeatureFlags
                               withInt:(jint)changedFeatures {
  [super _checkStdFeatureChangesWithInt:newFeatureFlags withInt:changedFeatures];
  _cfgUnqNames_ = ![((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES))) enabledInWithInt:newFeatureFlags];
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setHighestNonEscapedCharWithInt:(jint)charCode {
  _maximumNonEscapedChar_ = (charCode < 0) ? 0 : charCode;
  return self;
}

- (jint)getHighestEscapedChar {
  return _maximumNonEscapedChar_;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:(ComFasterxmlJacksonCoreIoCharacterEscapes *)esc {
  JreStrongAssign(&_characterEscapes_, esc);
  if (esc == nil) {
    JreStrongAssign(&_outputEscapes_, ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes);
  }
  else {
    JreStrongAssign(&_outputEscapes_, [esc getEscapeCodesForAscii]);
  }
  return self;
}

- (ComFasterxmlJacksonCoreIoCharacterEscapes *)getCharacterEscapes {
  return _characterEscapes_;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setRootValueSeparatorWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)sep {
  JreStrongAssign(&_rootValueSeparator_, sep);
  return self;
}

- (void)writeStringFieldWithNSString:(NSString *)fieldName
                        withNSString:(NSString *)value {
  [self writeFieldNameWithNSString:fieldName];
  [self writeStringWithNSString:value];
}

- (void)_verifyPrettyValueWriteWithNSString:(NSString *)typeMsg
                                    withInt:(jint)status {
  switch (status) {
    case ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COMMA:
    [((id<ComFasterxmlJacksonCorePrettyPrinter>) nil_chk(_cfgPrettyPrinter_)) writeArrayValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:self];
    break;
    case ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_COLON:
    [((id<ComFasterxmlJacksonCorePrettyPrinter>) nil_chk(_cfgPrettyPrinter_)) writeObjectFieldValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:self];
    break;
    case ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AFTER_SPACE:
    [((id<ComFasterxmlJacksonCorePrettyPrinter>) nil_chk(_cfgPrettyPrinter_)) writeRootValueSeparatorWithComFasterxmlJacksonCoreJsonGenerator:self];
    break;
    case ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_OK_AS_IS:
    if ([((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) inArray]) {
      [((id<ComFasterxmlJacksonCorePrettyPrinter>) nil_chk(_cfgPrettyPrinter_)) beforeArrayValuesWithComFasterxmlJacksonCoreJsonGenerator:self];
    }
    else if ([((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) inObject]) {
      [((id<ComFasterxmlJacksonCorePrettyPrinter>) nil_chk(_cfgPrettyPrinter_)) beforeObjectEntriesWithComFasterxmlJacksonCoreJsonGenerator:self];
    }
    break;
    case ComFasterxmlJacksonCoreJsonJsonWriteContext_STATUS_EXPECT_NAME:
    [self _reportCantWriteValueExpectNameWithNSString:typeMsg];
    break;
    default:
    [self _throwInternal];
    break;
  }
}

- (void)_reportCantWriteValueExpectNameWithNSString:(NSString *)typeMsg {
  [self _reportErrorWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"Can not %s, expecting field name (context: %s)", [IOSObjectArray arrayWithObjects:(id[]){ typeMsg, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) typeDesc] } count:2 type:NSObject_class_()])];
}

- (void)dealloc {
  RELEASE_(_ioContext_);
  RELEASE_(_outputEscapes_);
  RELEASE_(_characterEscapes_);
  RELEASE_(_rootValueSeparator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreIoCharacterEscapes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 13, 14, 15, -1, -1, -1 },
    { NULL, "V", 0x4, 16, 17, 15, -1, -1, -1 },
    { NULL, "V", 0x4, 18, 19, 15, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreIoIOContext:withInt:withComFasterxmlJacksonCoreObjectCodec:);
  methods[1].selector = @selector(version__);
  methods[2].selector = @selector(enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[3].selector = @selector(disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[4].selector = @selector(_checkStdFeatureChangesWithInt:withInt:);
  methods[5].selector = @selector(setHighestNonEscapedCharWithInt:);
  methods[6].selector = @selector(getHighestEscapedChar);
  methods[7].selector = @selector(setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:);
  methods[8].selector = @selector(getCharacterEscapes);
  methods[9].selector = @selector(setRootValueSeparatorWithComFasterxmlJacksonCoreSerializableString:);
  methods[10].selector = @selector(writeStringFieldWithNSString:withNSString:);
  methods[11].selector = @selector(_verifyPrettyValueWriteWithNSString:withInt:);
  methods[12].selector = @selector(_reportCantWriteValueExpectNameWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sOutputEscapes", "[I", .constantValue.asLong = 0, 0x1c, -1, 20, -1, -1 },
    { "_ioContext_", "LComFasterxmlJacksonCoreIoIOContext;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_outputEscapes_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_maximumNonEscapedChar_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_characterEscapes_", "LComFasterxmlJacksonCoreIoCharacterEscapes;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_rootValueSeparator_", "LComFasterxmlJacksonCoreSerializableString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_cfgUnqNames_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreIoIOContext;ILComFasterxmlJacksonCoreObjectCodec;", "version", "enable", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", "disable", "_checkStdFeatureChanges", "II", "setHighestNonEscapedChar", "I", "setCharacterEscapes", "LComFasterxmlJacksonCoreIoCharacterEscapes;", "setRootValueSeparator", "LComFasterxmlJacksonCoreSerializableString;", "writeStringField", "LNSString;LNSString;", "LJavaIoIOException;", "_verifyPrettyValueWrite", "LNSString;I", "_reportCantWriteValueExpectName", "LNSString;", &ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreJsonJsonGeneratorImpl = { "JsonGeneratorImpl", "com.fasterxml.jackson.core.json", ptrTable, methods, fields, 7, 0x401, 13, 7, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonCoreJsonJsonGeneratorImpl class]) {
    JreStrongAssign(&ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes, ComFasterxmlJacksonCoreIoCharTypes_get7BitOutputEscapes());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl)
  }
}

@end

void ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_initWithComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreObjectCodec_(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl *self, ComFasterxmlJacksonCoreIoIOContext *ctxt, jint features, ComFasterxmlJacksonCoreObjectCodec *codec) {
  ComFasterxmlJacksonCoreBaseGeneratorBase_initWithInt_withComFasterxmlJacksonCoreObjectCodec_(self, features, codec);
  JreStrongAssign(&self->_outputEscapes_, ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes);
  JreStrongAssign(&self->_rootValueSeparator_, JreLoadStatic(ComFasterxmlJacksonCoreUtilDefaultPrettyPrinter, DEFAULT_ROOT_VALUE_SEPARATOR));
  JreStrongAssign(&self->_ioContext_, ctxt);
  if ([((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, ESCAPE_NON_ASCII))) enabledInWithInt:features]) {
    self->_maximumNonEscapedChar_ = 127;
  }
  self->_cfgUnqNames_ = ![((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, QUOTE_FIELD_NAMES))) enabledInWithInt:features];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl)
