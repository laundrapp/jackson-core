//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/util/Separators.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/util/Separators.h"

@interface ComFasterxmlJacksonCoreUtilSeparators () {
 @public
  jchar objectFieldValueSeparator_;
  jchar objectEntrySeparator_;
  jchar arrayValueSeparator_;
}

@end

inline jlong ComFasterxmlJacksonCoreUtilSeparators_get_serialVersionUID(void);
#define ComFasterxmlJacksonCoreUtilSeparators_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonCoreUtilSeparators, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonCoreUtilSeparators

+ (ComFasterxmlJacksonCoreUtilSeparators *)createDefaultInstance {
  return ComFasterxmlJacksonCoreUtilSeparators_createDefaultInstance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonCoreUtilSeparators_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithChar:(jchar)objectFieldValueSeparator
                              withChar:(jchar)objectEntrySeparator
                              withChar:(jchar)arrayValueSeparator {
  ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(self, objectFieldValueSeparator, objectEntrySeparator, arrayValueSeparator);
  return self;
}

- (ComFasterxmlJacksonCoreUtilSeparators *)withObjectFieldValueSeparatorWithChar:(jchar)sep {
  return (objectFieldValueSeparator_ == sep) ? self : create_ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(sep, objectEntrySeparator_, arrayValueSeparator_);
}

- (ComFasterxmlJacksonCoreUtilSeparators *)withObjectEntrySeparatorWithChar:(jchar)sep {
  return (objectEntrySeparator_ == sep) ? self : create_ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(objectFieldValueSeparator_, sep, arrayValueSeparator_);
}

- (ComFasterxmlJacksonCoreUtilSeparators *)withArrayValueSeparatorWithChar:(jchar)sep {
  return (arrayValueSeparator_ == sep) ? self : create_ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(objectFieldValueSeparator_, objectEntrySeparator_, sep);
}

- (jchar)getObjectFieldValueSeparator {
  return objectFieldValueSeparator_;
}

- (jchar)getObjectEntrySeparator {
  return objectEntrySeparator_;
}

- (jchar)getArrayValueSeparator {
  return arrayValueSeparator_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComFasterxmlJacksonCoreUtilSeparators;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreUtilSeparators;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreUtilSeparators;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreUtilSeparators;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(createDefaultInstance);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithChar:withChar:withChar:);
  methods[3].selector = @selector(withObjectFieldValueSeparatorWithChar:);
  methods[4].selector = @selector(withObjectEntrySeparatorWithChar:);
  methods[5].selector = @selector(withArrayValueSeparatorWithChar:);
  methods[6].selector = @selector(getObjectFieldValueSeparator);
  methods[7].selector = @selector(getObjectEntrySeparator);
  methods[8].selector = @selector(getArrayValueSeparator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonCoreUtilSeparators_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "objectFieldValueSeparator_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "objectEntrySeparator_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "arrayValueSeparator_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "CCC", "withObjectFieldValueSeparator", "C", "withObjectEntrySeparator", "withArrayValueSeparator" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonCoreUtilSeparators = { "Separators", "com.fasterxml.jackson.core.util", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonCoreUtilSeparators;
}

@end

ComFasterxmlJacksonCoreUtilSeparators *ComFasterxmlJacksonCoreUtilSeparators_createDefaultInstance() {
  ComFasterxmlJacksonCoreUtilSeparators_initialize();
  return create_ComFasterxmlJacksonCoreUtilSeparators_init();
}

void ComFasterxmlJacksonCoreUtilSeparators_init(ComFasterxmlJacksonCoreUtilSeparators *self) {
  ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(self, ':', ',', ',');
}

ComFasterxmlJacksonCoreUtilSeparators *new_ComFasterxmlJacksonCoreUtilSeparators_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreUtilSeparators, init)
}

ComFasterxmlJacksonCoreUtilSeparators *create_ComFasterxmlJacksonCoreUtilSeparators_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreUtilSeparators, init)
}

void ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(ComFasterxmlJacksonCoreUtilSeparators *self, jchar objectFieldValueSeparator, jchar objectEntrySeparator, jchar arrayValueSeparator) {
  NSObject_init(self);
  self->objectFieldValueSeparator_ = objectFieldValueSeparator;
  self->objectEntrySeparator_ = objectEntrySeparator;
  self->arrayValueSeparator_ = arrayValueSeparator;
}

ComFasterxmlJacksonCoreUtilSeparators *new_ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(jchar objectFieldValueSeparator, jchar objectEntrySeparator, jchar arrayValueSeparator) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonCoreUtilSeparators, initWithChar_withChar_withChar_, objectFieldValueSeparator, objectEntrySeparator, arrayValueSeparator)
}

ComFasterxmlJacksonCoreUtilSeparators *create_ComFasterxmlJacksonCoreUtilSeparators_initWithChar_withChar_withChar_(jchar objectFieldValueSeparator, jchar objectEntrySeparator, jchar arrayValueSeparator) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonCoreUtilSeparators, initWithChar_withChar_withChar_, objectFieldValueSeparator, objectEntrySeparator, arrayValueSeparator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonCoreUtilSeparators)
