//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoNumberOutput")
#ifdef RESTRICT_ComFasterxmlJacksonCoreIoNumberOutput
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoNumberOutput 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreIoNumberOutput 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreIoNumberOutput

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreIoNumberOutput_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreIoNumberOutput || defined(INCLUDE_ComFasterxmlJacksonCoreIoNumberOutput))
#define ComFasterxmlJacksonCoreIoNumberOutput_

@class IOSByteArray;
@class IOSCharArray;

@interface ComFasterxmlJacksonCoreIoNumberOutput : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jint)outputIntWithInt:(jint)v
           withByteArray:(IOSByteArray *)b
                 withInt:(jint)off;

/*!
 @return Offset within buffer after outputting int
 */
+ (jint)outputIntWithInt:(jint)v
           withCharArray:(IOSCharArray *)b
                 withInt:(jint)off;

+ (jint)outputLongWithLong:(jlong)v
             withByteArray:(IOSByteArray *)b
                   withInt:(jint)off;

/*!
 @return Offset within buffer after outputting int
 */
+ (jint)outputLongWithLong:(jlong)v
             withCharArray:(IOSCharArray *)b
                   withInt:(jint)off;

+ (NSString *)toStringWithDouble:(jdouble)v;

/*!
 @since 2.6.0
 */
+ (NSString *)toStringWithFloat:(jfloat)v;

+ (NSString *)toStringWithInt:(jint)v;

+ (NSString *)toStringWithLong:(jlong)v;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreIoNumberOutput)

inline NSString *ComFasterxmlJacksonCoreIoNumberOutput_get_SMALLEST_INT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_SMALLEST_INT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreIoNumberOutput, SMALLEST_INT, NSString *)

inline NSString *ComFasterxmlJacksonCoreIoNumberOutput_get_SMALLEST_LONG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_SMALLEST_LONG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreIoNumberOutput, SMALLEST_LONG, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreIoNumberOutput_init(ComFasterxmlJacksonCoreIoNumberOutput *self);

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoNumberOutput *new_ComFasterxmlJacksonCoreIoNumberOutput_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonCoreIoNumberOutput *create_ComFasterxmlJacksonCoreIoNumberOutput_init(void);

FOUNDATION_EXPORT jint ComFasterxmlJacksonCoreIoNumberOutput_outputIntWithInt_withCharArray_withInt_(jint v, IOSCharArray *b, jint off);

FOUNDATION_EXPORT jint ComFasterxmlJacksonCoreIoNumberOutput_outputIntWithInt_withByteArray_withInt_(jint v, IOSByteArray *b, jint off);

FOUNDATION_EXPORT jint ComFasterxmlJacksonCoreIoNumberOutput_outputLongWithLong_withCharArray_withInt_(jlong v, IOSCharArray *b, jint off);

FOUNDATION_EXPORT jint ComFasterxmlJacksonCoreIoNumberOutput_outputLongWithLong_withByteArray_withInt_(jlong v, IOSByteArray *b, jint off);

FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_toStringWithInt_(jint v);

FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_toStringWithLong_(jlong v);

FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_toStringWithDouble_(jdouble v);

FOUNDATION_EXPORT NSString *ComFasterxmlJacksonCoreIoNumberOutput_toStringWithFloat_(jfloat v);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreIoNumberOutput)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreIoNumberOutput")
