//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-core/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl")
#ifdef RESTRICT_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl 1
#endif
#undef RESTRICT_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_) && (INCLUDE_ALL_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl || defined(INCLUDE_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl))
#define ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_

#define RESTRICT_ComFasterxmlJacksonCoreBaseGeneratorBase 1
#define INCLUDE_ComFasterxmlJacksonCoreBaseGeneratorBase 1
#include "com/fasterxml/jackson/core/base/GeneratorBase.h"

@class ComFasterxmlJacksonCoreIoCharacterEscapes;
@class ComFasterxmlJacksonCoreIoIOContext;
@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonGenerator_Feature;
@class ComFasterxmlJacksonCoreVersion;
@class IOSIntArray;
@protocol ComFasterxmlJacksonCoreObjectWriteContext;
@protocol ComFasterxmlJacksonCorePrettyPrinter;
@protocol ComFasterxmlJacksonCoreSerializableString;

/*!
 @brief Intermediate base class shared by JSON-backed generators
  like <code>UTF8JsonGenerator</code> and <code>WriterBasedJsonGenerator</code>.
 */
@interface ComFasterxmlJacksonCoreJsonJsonGeneratorImpl : ComFasterxmlJacksonCoreBaseGeneratorBase {
 @public
  ComFasterxmlJacksonCoreIoIOContext *_ioContext_;
  /*!
   @brief Currently active set of output escape code definitions (whether
  and how to escape or not) for 7-bit ASCII range (first 128
  character codes).Defined separately to make potentially
  customizable
   */
  IOSIntArray *_outputEscapes_;
  /*!
   @brief Value between 128 (0x80) and 65535 (0xFFFF) that indicates highest
  Unicode code point that will not need escaping; or 0 to indicate
  that all characters can be represented without escaping.
   Typically used to force escaping of some portion of character set;
  for example to always escape non-ASCII characters (if value was 127).
 <p>
  NOTE: not all sub-classes make use of this setting.
   */
  jint _maximumNonEscapedChar_;
  /*!
   @brief Definition of custom character escapes to use for generators created
  by this factory, if any.If null, standard data format specific
  escapes are used.
   <p>
  NOTE: although typically set during construction (in constructor),
  can not be made final in 3.0 due to some edge use cases (JSONP support).
   */
  ComFasterxmlJacksonCoreIoCharacterEscapes *_characterEscapes_;
  /*!
   @brief Separator to use, if any, between root-level values.
   */
  id<ComFasterxmlJacksonCoreSerializableString> _rootValueSeparator_;
  /*!
   @brief Flag that is set if quoting is not to be added around
  JSON Object property names.
   */
  jboolean _cfgUnqNames_;
  /*!
   @brief Object that handles pretty-printing (usually additional
  white space to make results more human-readable) during
  output.If null, no pretty-printing is done.
   */
  id<ComFasterxmlJacksonCorePrettyPrinter> _cfgPrettyPrinter_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreObjectWriteContext:(id<ComFasterxmlJacksonCoreObjectWriteContext>)writeCtxt
                                     withComFasterxmlJacksonCoreIoIOContext:(ComFasterxmlJacksonCoreIoIOContext *)ctxt
                                                                    withInt:(jint)features
                              withComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)rvs
                              withComFasterxmlJacksonCoreIoCharacterEscapes:(ComFasterxmlJacksonCoreIoCharacterEscapes *)charEsc
                                   withComFasterxmlJacksonCorePrettyPrinter:(id<ComFasterxmlJacksonCorePrettyPrinter>)pp;

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f;

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f;

/*!
 @brief Method for accessing custom escapes factory uses for <code>JsonGenerator</code>s
  it creates.
 */
- (ComFasterxmlJacksonCoreIoCharacterEscapes *)getCharacterEscapes;

- (jint)getHighestEscapedChar;

- (id<ComFasterxmlJacksonCorePrettyPrinter>)getPrettyPrinter;

- (ComFasterxmlJacksonCoreJsonGenerator *)setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:(ComFasterxmlJacksonCoreIoCharacterEscapes *)esc;

- (ComFasterxmlJacksonCoreJsonGenerator *)setHighestNonEscapedCharWithInt:(jint)charCode;

- (ComFasterxmlJacksonCoreJsonGenerator *)setPrettyPrinterWithComFasterxmlJacksonCorePrettyPrinter:(id<ComFasterxmlJacksonCorePrettyPrinter>)pp;

- (ComFasterxmlJacksonCoreVersion *)version__;

- (void)writeStringFieldWithNSString:(NSString *)fieldName
                        withNSString:(NSString *)value;

#pragma mark Protected

- (void)_checkStdFeatureChangesWithInt:(jint)newFeatureFlags
                               withInt:(jint)changedFeatures;

- (void)_reportCantWriteValueExpectNameWithNSString:(NSString *)typeMsg;

- (void)_verifyPrettyValueWriteWithNSString:(NSString *)typeMsg
                                    withInt:(jint)status;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, _ioContext_, ComFasterxmlJacksonCoreIoIOContext *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, _outputEscapes_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, _characterEscapes_, ComFasterxmlJacksonCoreIoCharacterEscapes *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, _rootValueSeparator_, id<ComFasterxmlJacksonCoreSerializableString>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, _cfgPrettyPrinter_, id<ComFasterxmlJacksonCorePrettyPrinter>)

/*!
 @brief This is the default set of escape codes, over 7-bit ASCII range
  (first 128 character codes), used for single-byte UTF-8 characters.
 */
inline IOSIntArray *ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_get_sOutputEscapes(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_sOutputEscapes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl, sOutputEscapes, IOSIntArray *)

FOUNDATION_EXPORT void ComFasterxmlJacksonCoreJsonJsonGeneratorImpl_initWithComFasterxmlJacksonCoreObjectWriteContext_withComFasterxmlJacksonCoreIoIOContext_withInt_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonCoreIoCharacterEscapes_withComFasterxmlJacksonCorePrettyPrinter_(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl *self, id<ComFasterxmlJacksonCoreObjectWriteContext> writeCtxt, ComFasterxmlJacksonCoreIoIOContext *ctxt, jint features, id<ComFasterxmlJacksonCoreSerializableString> rvs, ComFasterxmlJacksonCoreIoCharacterEscapes *charEsc, id<ComFasterxmlJacksonCorePrettyPrinter> pp);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonCoreJsonJsonGeneratorImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonCoreJsonJsonGeneratorImpl")
